#pragma warning( disable: 4049 )
#include <rpc.h>
#include <rpcndr.h>
#error this stub requires an updated version of <rpcndr.h>
#include <windows.h>
#include <ole2.h>
       
       
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
       
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Contacts.h"
#include "Windows.ApplicationModel.DataTransfer.h"
#include "Windows.ApplicationModel.Search.h"
#include "Windows.Globalization.h"
#include "Windows.Media.Capture.h"
#include "Windows.Media.Casting.h"
#include "Windows.Media.Core.h"
#include "Windows.Media.PlayTo.h"
#include "Windows.Media.Playback.h"
#include "Windows.Media.Protection.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Composition.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Input.Inking.h"
#include "Windows.UI.Text.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Automation.Peers.h"
#include "Windows.UI.Xaml.Automation.Provider.h"
#include "Windows.UI.Xaml.Controls.Primitives.h"
#include "Windows.UI.Xaml.Data.h"
#include "Windows.UI.Xaml.Documents.h"
#include "Windows.UI.Xaml.Input.h"
#include "Windows.UI.Xaml.Interop.h"
#include "Windows.UI.Xaml.Media.h"
#include "Windows.UI.Xaml.Media.Animation.h"
#include "Windows.UI.Xaml.Navigation.h"
#include "Windows.Web.h"
#include "Windows.Web.Http.h"
#include <windows.foundation.collections.h>
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButton __x_ABI_CWindows_CUI_CXaml_CControls_CIButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl __x_ABI_CWindows_CUI_CXaml_CControls_CIControl;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHub __x_ABI_CWindows_CUI_CXaml_CControls_CIHub;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage __x_ABI_CWindows_CUI_CXaml_CControls_CIImage;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListView __x_ABI_CWindows_CUI_CXaml_CControls_CIListView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPage __x_ABI_CWindows_CUI_CXaml_CControls_CIPage;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider __x_ABI_CWindows_CUI_CXaml_CControls_CISlider;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuBarItem **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItem
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CSwipeItem **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItem
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CTreeViewNode **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNode
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle;
EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle;
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;
typedef struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle *sender,
                   __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
    END_INTERFACE
} __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;
interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle
{
    CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;
EXTERN_C const IID IID___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;
typedef struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
                   __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle *handler,
                            __RPC__out EventRegistrationToken *token);
    HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This, EventRegistrationToken token);
    END_INTERFACE
} __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;
interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
{
    CONST_VTBL struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) )
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
typedef struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement *sender,
                   __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
    END_INTERFACE
} __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;
interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement
{
    CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
EXTERN_C const IID IID___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;
typedef struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
                   __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement *handler,
                            __RPC__out EventRegistrationToken *token);
    HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This, EventRegistrationToken token);
    END_INTERFACE
} __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;
interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
{
    CONST_VTBL struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) )
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                       __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuBarItem **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CSwipeItem **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItem
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CSwipeItemVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CTreeViewNode **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNodeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;
typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs;
EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs;
typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This, __RPC__in_opt IInspectable *sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * *e);
    END_INTERFACE
} __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl;
interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs
{
    CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl *lpVtbl;
};
        ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl -> AddRef(This) )
        ( (This)->lpVtbl -> Release(This) )
        ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs;
EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs;
typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This, __RPC__in_opt IInspectable *sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * *e);
    END_INTERFACE
} __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl;
interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs
{
    CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl *lpVtbl;
};
        ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl -> AddRef(This) )
        ( (This)->lpVtbl -> Release(This) )
        ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs;
EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs;
typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This, __RPC__in_opt IInspectable *sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * *e);
    END_INTERFACE
} __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl;
interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs
{
    CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl *lpVtbl;
};
        ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl -> AddRef(This) )
        ( (This)->lpVtbl -> Release(This) )
        ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs;
EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs;
typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This, __RPC__in_opt IInspectable *sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * *e);
    END_INTERFACE
} __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl;
interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs
{
    CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl *lpVtbl;
};
        ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl -> AddRef(This) )
        ( (This)->lpVtbl -> Release(This) )
        ( (This)->lpVtbl -> Invoke(This,sender,e) )
enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult;
typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult;
typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult;
typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResultVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This, __RPC__in_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResultVtbl;
interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResultVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult;
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult;
typedef struct __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResultVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CContentDialogResult **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * This, __RPC__out enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult *results);
    END_INTERFACE
} __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResultVtbl;
interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResultVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum;
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPrimitives__CColorSpectrum_Windows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectableVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIAsyncOperationCompletedHandler_1_IInspectable __FIAsyncOperationCompletedHandler_1_IInspectable;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_IInspectable;
typedef interface __FIAsyncOperation_1_IInspectable __FIAsyncOperation_1_IInspectable;
typedef struct __FIAsyncOperationCompletedHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_IInspectable * This, __RPC__in_opt __FIAsyncOperation_1_IInspectable *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_IInspectableVtbl;
interface __FIAsyncOperationCompletedHandler_1_IInspectable
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1_IInspectable __FIAsyncOperation_1_IInspectable;
EXTERN_C const IID IID___FIAsyncOperation_1_IInspectable;
typedef struct __FIAsyncOperation_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_IInspectable * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_IInspectable * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_IInspectable * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_IInspectable * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1_IInspectable *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_IInspectable * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_IInspectable **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_IInspectable * This, __RPC__out IInspectable * *results);
    END_INTERFACE
} __FIAsyncOperation_1_IInspectableVtbl;
interface __FIAsyncOperation_1_IInspectable
{
    CONST_VTBL struct __FIAsyncOperation_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement __x_ABI_CWindows_CUI_CXaml_CIUIElement;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CUIElement __FIIterator_1_Windows__CUI__CXaml__CUIElement;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CUIElement;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CIUIElement * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIUIElement * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CUIElement __FIIterable_1_Windows__CUI__CXaml__CUIElement;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CUIElement;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CUIElement **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement __FIVectorView_1_Windows__CUI__CXaml__CUIElement;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CUIElement;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CIUIElement * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                       __x_ABI_CWindows_CUI_CXaml_CIUIElement * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIUIElement * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CUIElement __FIVector_1_Windows__CUI__CXaml__CUIElement;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CUIElement;
typedef struct __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CUIElement **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIUIElement * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIUIElement * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIEventHandler_1_IInspectable __FIEventHandler_1_IInspectable;
EXTERN_C const IID IID___FIEventHandler_1_IInspectable;
typedef struct __FIEventHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIEventHandler_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIEventHandler_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIEventHandler_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIEventHandler_1_IInspectable * This, __RPC__in_opt IInspectable *sender, __RPC__in_opt IInspectable * *e);
    END_INTERFACE
} __FIEventHandler_1_IInspectableVtbl;
interface __FIEventHandler_1_IInspectable
{
    CONST_VTBL struct __FIEventHandler_1_IInspectableVtbl *lpVtbl;
};
        ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl -> AddRef(This) )
        ( (This)->lpVtbl -> Release(This) )
        ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                       __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;
typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
struct __x_ABI_CWindows_CFoundation_CDateTime;
typedef interface __FIReference_1_Windows__CFoundation__CDateTime __FIReference_1_Windows__CFoundation__CDateTime;
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CDateTime;
typedef struct __FIReference_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CFoundation__CDateTime * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CFoundation__CDateTime * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CFoundation__CDateTime * This );
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CFoundation__CDateTime * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__out struct __x_ABI_CWindows_CFoundation_CDateTime *value);
    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CDateTimeVtbl;
interface __FIReference_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CDateTimeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Value(This,value) )
typedef interface __FIIterator_1_Windows__CFoundation__CDateTime __FIIterator_1_Windows__CFoundation__CDateTime;
EXTERN_C const IID IID___FIIterator_1_Windows__CFoundation__CDateTime;
typedef struct __FIIterator_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This, __RPC__out struct __x_ABI_CWindows_CFoundation_CDateTime *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CFoundation__CDateTime * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) struct __x_ABI_CWindows_CFoundation_CDateTime *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CFoundation__CDateTimeVtbl;
interface __FIIterator_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIIterator_1_Windows__CFoundation__CDateTimeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CFoundation__CDateTime __FIIterable_1_Windows__CFoundation__CDateTime;
EXTERN_C const IID IID___FIIterable_1_Windows__CFoundation__CDateTime;
typedef struct __FIIterable_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CFoundation__CDateTime * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CFoundation__CDateTime * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CFoundation__CDateTime * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CFoundation__CDateTime * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt __FIIterator_1_Windows__CFoundation__CDateTime **first);
    END_INTERFACE
} __FIIterable_1_Windows__CFoundation__CDateTimeVtbl;
interface __FIIterable_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIIterable_1_Windows__CFoundation__CDateTimeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CFoundation__CDateTime __FIVectorView_1_Windows__CFoundation__CDateTime;
EXTERN_C const IID IID___FIVectorView_1_Windows__CFoundation__CDateTime;
typedef struct __FIVectorView_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                                                    unsigned int index,
                                                             __RPC__out struct __x_ABI_CWindows_CFoundation_CDateTime *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                       struct __x_ABI_CWindows_CFoundation_CDateTime item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CFoundation__CDateTime * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) struct __x_ABI_CWindows_CFoundation_CDateTime *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CFoundation__CDateTimeVtbl;
interface __FIVectorView_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIVectorView_1_Windows__CFoundation__CDateTimeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CFoundation__CDateTime __FIVector_1_Windows__CFoundation__CDateTime;
EXTERN_C const IID IID___FIVector_1_Windows__CFoundation__CDateTime;
typedef struct __FIVector_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt struct __x_ABI_CWindows_CFoundation_CDateTime *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                   unsigned int index,
                            __RPC__deref_out_opt struct __x_ABI_CWindows_CFoundation_CDateTime *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CFoundation__CDateTime **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                   __RPC__in struct __x_ABI_CWindows_CFoundation_CDateTime item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                   unsigned int index,
                   __RPC__in struct __x_ABI_CWindows_CFoundation_CDateTime item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                   unsigned int index,
                   __RPC__in struct __x_ABI_CWindows_CFoundation_CDateTime item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This, __RPC__in struct __x_ABI_CWindows_CFoundation_CDateTime item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) struct __x_ABI_CWindows_CFoundation_CDateTime *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CFoundation__CDateTime * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) struct __x_ABI_CWindows_CFoundation_CDateTime *value);
    END_INTERFACE
} __FIVector_1_Windows__CFoundation__CDateTimeVtbl;
interface __FIVector_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIVector_1_Windows__CFoundation__CDateTimeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
struct __x_ABI_CWindows_CUI_CColor;
typedef interface __FIIterator_1_Windows__CUI__CColor __FIIterator_1_Windows__CUI__CColor;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CColor;
typedef struct __FIIterator_1_Windows__CUI__CColorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CColor * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This, __RPC__out struct __x_ABI_CWindows_CUI_CColor *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CColor * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) struct __x_ABI_CWindows_CUI_CColor *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CColorVtbl;
interface __FIIterator_1_Windows__CUI__CColor
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CColorVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CColor __FIIterable_1_Windows__CUI__CColor;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CColor;
typedef struct __FIIterable_1_Windows__CUI__CColorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CColor * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CColor * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CColor * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CColor * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CColor * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CColor * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CColor * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CColor **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CColorVtbl;
interface __FIIterable_1_Windows__CUI__CColor
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CColorVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIReference_1_Windows__CUI__CColor __FIReference_1_Windows__CUI__CColor;
EXTERN_C const IID IID___FIReference_1_Windows__CUI__CColor;
typedef struct __FIReference_1_Windows__CUI__CColorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CUI__CColor * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CUI__CColor * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CUI__CColor * This );
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CUI__CColor * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CUI__CColor * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CUI__CColor * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CUI__CColor * This, __RPC__out struct __x_ABI_CWindows_CUI_CColor *value);
    END_INTERFACE
} __FIReference_1_Windows__CUI__CColorVtbl;
interface __FIReference_1_Windows__CUI__CColor
{
    CONST_VTBL struct __FIReference_1_Windows__CUI__CColorVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Value(This,value) )
typedef interface __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime;
typedef interface __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime;
typedef struct __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__in_opt __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTimeVtbl;
interface __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTimeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime;
EXTERN_C const IID IID___FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime;
typedef struct __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTimeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CDateTime **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * This, __RPC__out __FIReference_1_Windows__CFoundation__CDateTime * *results);
    END_INTERFACE
} __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTimeVtbl;
interface __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime
{
    CONST_VTBL struct __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTimeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __FIIterator_1_IInspectable __FIIterator_1_IInspectable;
EXTERN_C const IID IID___FIIterator_1_IInspectable;
typedef struct __FIIterator_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_IInspectable * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_IInspectable * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_IInspectable * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_IInspectable * This, __RPC__out IInspectable * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_IInspectable * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_IInspectable * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_IInspectable * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) IInspectable * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_IInspectableVtbl;
interface __FIIterator_1_IInspectable
{
    CONST_VTBL struct __FIIterator_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_IInspectable __FIIterable_1_IInspectable;
EXTERN_C const IID IID___FIIterable_1_IInspectable;
typedef struct __FIIterable_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_IInspectable * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_IInspectable * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_IInspectable * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_IInspectable * This, __RPC__deref_out_opt __FIIterator_1_IInspectable **first);
    END_INTERFACE
} __FIIterable_1_IInspectableVtbl;
interface __FIIterable_1_IInspectable
{
    CONST_VTBL struct __FIIterable_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_IInspectable __FIVectorView_1_IInspectable;
EXTERN_C const IID IID___FIVectorView_1_IInspectable;
typedef struct __FIVectorView_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_IInspectable * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_IInspectable * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_IInspectable * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_IInspectable * This,
                                                    unsigned int index,
                                                             __RPC__out IInspectable * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_IInspectable * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_IInspectable * This,
                       IInspectable * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_IInspectable * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) IInspectable * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_IInspectableVtbl;
interface __FIVectorView_1_IInspectable
{
    CONST_VTBL struct __FIVectorView_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_IInspectable __FIVector_1_IInspectable;
EXTERN_C const IID IID___FIVector_1_IInspectable;
typedef struct __FIVector_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_IInspectable * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_IInspectable * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_IInspectable * This, __RPC__deref_out_opt IInspectable * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_IInspectable * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_IInspectable * This,
                   unsigned int index,
                            __RPC__deref_out_opt IInspectable * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_IInspectable * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_IInspectable * This, __RPC__deref_out_opt __FIVectorView_1_IInspectable **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_IInspectable * This,
                   __RPC__in IInspectable * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_IInspectable * This,
                   unsigned int index,
                   __RPC__in IInspectable * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_IInspectable * This,
                   unsigned int index,
                   __RPC__in IInspectable * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_IInspectable * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_IInspectable * This, __RPC__in IInspectable * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_IInspectable * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) IInspectable * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_IInspectable * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) IInspectable * *value);
    END_INTERFACE
} __FIVector_1_IInspectableVtbl;
interface __FIVector_1_IInspectable
{
    CONST_VTBL struct __FIVector_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                       __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry;
typedef struct __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntryVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FVectorChangedEventHandler_1_IInspectable __FVectorChangedEventHandler_1_IInspectable;
EXTERN_C const IID IID___FVectorChangedEventHandler_1_IInspectable;
typedef interface __FIObservableVector_1_IInspectable __FIObservableVector_1_IInspectable;
typedef struct __FVectorChangedEventHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FVectorChangedEventHandler_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FVectorChangedEventHandler_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FVectorChangedEventHandler_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FVectorChangedEventHandler_1_IInspectable * This,
                   __RPC__in_opt __FIObservableVector_1_IInspectable *sender,
                   __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
    END_INTERFACE
} __FVectorChangedEventHandler_1_IInspectableVtbl;
interface __FVectorChangedEventHandler_1_IInspectable
{
    CONST_VTBL struct __FVectorChangedEventHandler_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIObservableVector_1_IInspectable __FIObservableVector_1_IInspectable;
EXTERN_C const IID IID___FIObservableVector_1_IInspectable;
typedef struct __FIObservableVector_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIObservableVector_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIObservableVector_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIObservableVector_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIObservableVector_1_IInspectable * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIObservableVector_1_IInspectable * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIObservableVector_1_IInspectable * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )(__RPC__in __FIObservableVector_1_IInspectable * This,
                   __RPC__in_opt __FVectorChangedEventHandler_1_IInspectable *handler,
                            __RPC__out EventRegistrationToken *token);
    HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )(__RPC__in __FIObservableVector_1_IInspectable * This, EventRegistrationToken token);
    END_INTERFACE
} __FIObservableVector_1_IInspectableVtbl;
interface __FIObservableVector_1_IInspectable
{
    CONST_VTBL struct __FIObservableVector_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) )
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject __FIIterator_1_Windows__CUI__CXaml__CDependencyObject;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDependencyObject;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject __FIIterable_1_Windows__CUI__CXaml__CDependencyObject;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDependencyObject;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDependencyObject **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                       __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject __FIVector_1_Windows__CUI__CXaml__CDependencyObject;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDependencyObject;
typedef struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject;
EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject;
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;
typedef struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject *sender,
                   __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
    END_INTERFACE
} __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl;
interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;
EXTERN_C const IID IID___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;
typedef struct __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
                   __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject *handler,
                            __RPC__out EventRegistrationToken *token);
    HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )(__RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This, EventRegistrationToken token);
    END_INTERFACE
} __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl;
interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) )
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrushVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrushVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CBrush **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrushVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CBrushVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                       __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrushVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrushVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CBrush;
typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CBrush **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CMedia__CBrushVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CBrushVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable;
typedef interface __FIAsyncOperation_1___FIVectorView_1_IInspectable __FIAsyncOperation_1___FIVectorView_1_IInspectable;
typedef struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable * This, __RPC__in_opt __FIAsyncOperation_1___FIVectorView_1_IInspectable *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectableVtbl;
interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1___FIVectorView_1_IInspectable __FIAsyncOperation_1___FIVectorView_1_IInspectable;
EXTERN_C const IID IID___FIAsyncOperation_1___FIVectorView_1_IInspectable;
typedef struct __FIAsyncOperation_1___FIVectorView_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1___FIVectorView_1_IInspectable **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_IInspectable * This, __RPC__out __FIVectorView_1_IInspectable * *results);
    END_INTERFACE
} __FIAsyncOperation_1___FIVectorView_1_IInspectableVtbl;
interface __FIAsyncOperation_1___FIVectorView_1_IInspectable
{
    CONST_VTBL struct __FIAsyncOperation_1___FIVectorView_1_IInspectableVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult;
typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult;
typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult;
typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This, __RPC__in_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl;
interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult;
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult;
typedef struct __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * This, __RPC__out struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult *results);
    END_INTERFACE
} __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl;
interface __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CData__CItemIndexRange **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRange
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                       __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRangeVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIAsyncOperationCompletedHandler_1_boolean __FIAsyncOperationCompletedHandler_1_boolean;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_boolean;
typedef interface __FIAsyncOperation_1_boolean __FIAsyncOperation_1_boolean;
typedef struct __FIAsyncOperationCompletedHandler_1_booleanVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This, __RPC__in_opt __FIAsyncOperation_1_boolean *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_booleanVtbl;
interface __FIAsyncOperationCompletedHandler_1_boolean
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_booleanVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1_boolean __FIAsyncOperation_1_boolean;
EXTERN_C const IID IID___FIAsyncOperation_1_boolean;
typedef struct __FIAsyncOperation_1_booleanVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_boolean * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_boolean * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_boolean * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_boolean * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_boolean * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_boolean * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_boolean * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1_boolean *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_boolean * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_boolean **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_boolean * This, __RPC__out boolean *results);
    END_INTERFACE
} __FIAsyncOperation_1_booleanVtbl;
interface __FIAsyncOperation_1_boolean
{
    CONST_VTBL struct __FIAsyncOperation_1_booleanVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                       __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;
typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIReference_1_int __FIReference_1_int;
EXTERN_C const IID IID___FIReference_1_int;
typedef struct __FIReference_1_intVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_int * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_int * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_int * This );
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_int * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_int * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_int * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_int * This, __RPC__out int *value);
    END_INTERFACE
} __FIReference_1_intVtbl;
interface __FIReference_1_int
{
    CONST_VTBL struct __FIReference_1_intVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Value(This,value) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs;
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs;
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __FIIterator_1_HSTRING __FIIterator_1_HSTRING;
EXTERN_C const IID IID___FIIterator_1_HSTRING;
typedef struct __FIIterator_1_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_HSTRING * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_HSTRING * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_HSTRING * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_HSTRING * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_HSTRING * This, __RPC__out HSTRING *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_HSTRING * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_HSTRING * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_HSTRING * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) HSTRING *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_HSTRINGVtbl;
interface __FIIterator_1_HSTRING
{
    CONST_VTBL struct __FIIterator_1_HSTRINGVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_HSTRING __FIIterable_1_HSTRING;
EXTERN_C const IID IID___FIIterable_1_HSTRING;
typedef struct __FIIterable_1_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_HSTRING * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_HSTRING * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_HSTRING * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_HSTRING * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_HSTRING * This, __RPC__deref_out_opt __FIIterator_1_HSTRING **first);
    END_INTERFACE
} __FIIterable_1_HSTRINGVtbl;
interface __FIIterable_1_HSTRING
{
    CONST_VTBL struct __FIIterable_1_HSTRINGVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_HSTRING __FIVectorView_1_HSTRING;
EXTERN_C const IID IID___FIVectorView_1_HSTRING;
typedef struct __FIVectorView_1_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_HSTRING * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_HSTRING * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_HSTRING * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_HSTRING * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_HSTRING * This,
                                                    unsigned int index,
                                                             __RPC__out HSTRING *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_HSTRING * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_HSTRING * This,
                       HSTRING item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_HSTRING * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) HSTRING *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_HSTRINGVtbl;
interface __FIVectorView_1_HSTRING
{
    CONST_VTBL struct __FIVectorView_1_HSTRINGVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING;
typedef interface __FIAsyncOperation_1___FIVectorView_1_HSTRING __FIAsyncOperation_1___FIVectorView_1_HSTRING;
typedef struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING * This, __RPC__in_opt __FIAsyncOperation_1___FIVectorView_1_HSTRING *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRINGVtbl;
interface __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRINGVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1___FIVectorView_1_HSTRING __FIAsyncOperation_1___FIVectorView_1_HSTRING;
EXTERN_C const IID IID___FIAsyncOperation_1___FIVectorView_1_HSTRING;
typedef struct __FIAsyncOperation_1___FIVectorView_1_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1___FIVectorView_1_HSTRING **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1___FIVectorView_1_HSTRING * This, __RPC__out __FIVectorView_1_HSTRING * *results);
    END_INTERFACE
} __FIAsyncOperation_1___FIVectorView_1_HSTRINGVtbl;
interface __FIAsyncOperation_1___FIVectorView_1_HSTRING
{
    CONST_VTBL struct __FIAsyncOperation_1___FIVectorView_1_HSTRINGVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                       __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider;
typedef struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProvider
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs;
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                       __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock;
typedef struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlockVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                       __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter;
typedef struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighterVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIIterator_1_float __FIIterator_1_float;
EXTERN_C const IID IID___FIIterator_1_float;
typedef struct __FIIterator_1_floatVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_float * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_float * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_float * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_float * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_float * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_float * This, __RPC__out float *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_float * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_float * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_float * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) float *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_floatVtbl;
interface __FIIterator_1_float
{
    CONST_VTBL struct __FIIterator_1_floatVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_float __FIIterable_1_float;
EXTERN_C const IID IID___FIIterable_1_float;
typedef struct __FIIterable_1_floatVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_float * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_float * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_float * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_float * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_float * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_float * This, __RPC__deref_out_opt __FIIterator_1_float **first);
    END_INTERFACE
} __FIIterable_1_floatVtbl;
interface __FIIterable_1_float
{
    CONST_VTBL struct __FIIterable_1_floatVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_float __FIVectorView_1_float;
EXTERN_C const IID IID___FIVectorView_1_float;
typedef struct __FIVectorView_1_floatVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_float * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_float * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_float * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_float * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_float * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_float * This,
                                                    unsigned int index,
                                                             __RPC__out float *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_float * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_float * This,
                       float item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_float * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) float *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_floatVtbl;
interface __FIVectorView_1_float
{
    CONST_VTBL struct __FIVectorView_1_floatVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_float __FIVector_1_float;
EXTERN_C const IID IID___FIVector_1_float;
typedef struct __FIVector_1_floatVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_float * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_float * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_float * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_float * This, __RPC__deref_out_opt float *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_float * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_float * This,
                   unsigned int index,
                            __RPC__deref_out_opt float *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_float * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_float * This, __RPC__deref_out_opt __FIVectorView_1_float **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_float * This,
                   __RPC__in float item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_float * This,
                   unsigned int index,
                   __RPC__in float item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_float * This,
                   unsigned int index,
                   __RPC__in float item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_float * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_float * This, __RPC__in float item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_float * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) float *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_float * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) float *value);
    END_INTERFACE
} __FIVector_1_floatVtbl;
interface __FIVector_1_float
{
    CONST_VTBL struct __FIVector_1_floatVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIReference_1_double __FIReference_1_double;
EXTERN_C const IID IID___FIReference_1_double;
typedef struct __FIReference_1_doubleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_double * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_double * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_double * This );
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_double * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_double * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_double * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_double * This, __RPC__out double *value);
    END_INTERFACE
} __FIReference_1_doubleVtbl;
interface __FIReference_1_double
{
    CONST_VTBL struct __FIReference_1_doubleVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Value(This,value) )
typedef interface __FIReference_1_float __FIReference_1_float;
EXTERN_C const IID IID___FIReference_1_float;
typedef struct __FIReference_1_floatVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_float * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_float * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_float * This );
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_float * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_float * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_float * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_float * This, __RPC__out float *value);
    END_INTERFACE
} __FIReference_1_floatVtbl;
interface __FIReference_1_float
{
    CONST_VTBL struct __FIReference_1_floatVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Value(This,value) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs;
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs;
typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * sender, __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgsVtbl;
interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgsVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,sender,e) )
typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline;
typedef interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline;
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline;
typedef struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl;
interface __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline;
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline;
typedef struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline **first);
    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl;
interface __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline;
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline;
typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                       __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl;
interface __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline;
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDocuments__CInline;
typedef struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This, __RPC__in __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline * *value);
    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl;
interface __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDocuments__CInlineVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
struct __x_ABI_CWindows_CFoundation_CTimeSpan;
typedef interface __FIReference_1_Windows__CFoundation__CTimeSpan __FIReference_1_Windows__CFoundation__CTimeSpan;
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CTimeSpan;
typedef struct __FIReference_1_Windows__CFoundation__CTimeSpanVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CFoundation__CTimeSpan * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CFoundation__CTimeSpan * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CFoundation__CTimeSpan * This );
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CFoundation__CTimeSpan * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__out struct __x_ABI_CWindows_CFoundation_CTimeSpan *value);
    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CTimeSpanVtbl;
interface __FIReference_1_Windows__CFoundation__CTimeSpan
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CTimeSpanVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Value(This,value) )
typedef interface __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan;
typedef interface __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan;
typedef struct __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpanVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__in_opt __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpanVtbl;
interface __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpanVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan;
EXTERN_C const IID IID___FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan;
typedef struct __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpanVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1___FIReference_1_Windows__CFoundation__CTimeSpan **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * This, __RPC__out __FIReference_1_Windows__CFoundation__CTimeSpan * *results);
    END_INTERFACE
} __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpanVtbl;
interface __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan
{
    CONST_VTBL struct __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpanVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
struct __x_ABI_CWindows_CFoundation_CRect;
typedef interface __FIReference_1_Windows__CFoundation__CRect __FIReference_1_Windows__CFoundation__CRect;
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CRect;
typedef struct __FIReference_1_Windows__CFoundation__CRectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CFoundation__CRect * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This );
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CFoundation__CRect * This, __RPC__out struct __x_ABI_CWindows_CFoundation_CRect *value);
    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CRectVtbl;
interface __FIReference_1_Windows__CFoundation__CRect
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CRectVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Value(This,value) )
typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;
typedef interface __FIIterator_1_Windows__CFoundation__CUri __FIIterator_1_Windows__CFoundation__CUri;
EXTERN_C const IID IID___FIIterator_1_Windows__CFoundation__CUri;
typedef struct __FIIterator_1_Windows__CFoundation__CUriVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterator_1_Windows__CFoundation__CUri * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This, __RPC__out __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *current);
                    HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This, __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CFoundation__CUri * This,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *items,
                            __RPC__out unsigned int *actual);
    END_INTERFACE
} __FIIterator_1_Windows__CFoundation__CUriVtbl;
interface __FIIterator_1_Windows__CFoundation__CUri
{
    CONST_VTBL struct __FIIterator_1_Windows__CFoundation__CUriVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> get_Current(This,current) )
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) )
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) )
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) )
typedef interface __FIIterable_1_Windows__CFoundation__CUri __FIIterable_1_Windows__CFoundation__CUri;
EXTERN_C const IID IID___FIIterable_1_Windows__CFoundation__CUri;
typedef struct __FIIterable_1_Windows__CFoundation__CUriVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIIterable_1_Windows__CFoundation__CUri * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CFoundation__CUri * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CFoundation__CUri * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CFoundation__CUri * This,
                                                       __RPC__out ULONG *iidCount,
                                                                         __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CFoundation__CUri * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CFoundation__CUri * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CFoundation__CUri * This, __RPC__deref_out_opt __FIIterator_1_Windows__CFoundation__CUri **first);
    END_INTERFACE
} __FIIterable_1_Windows__CFoundation__CUriVtbl;
interface __FIIterable_1_Windows__CFoundation__CUri
{
    CONST_VTBL struct __FIIterable_1_Windows__CFoundation__CUriVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> First(This,first) )
typedef interface __FIVectorView_1_Windows__CFoundation__CUri __FIVectorView_1_Windows__CFoundation__CUri;
EXTERN_C const IID IID___FIVectorView_1_Windows__CFoundation__CUri;
typedef struct __FIVectorView_1_Windows__CFoundation__CUriVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This);
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                                                        __RPC__out ULONG *iidCount,
                                                                          __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
        __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                        __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
        __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                        __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(
                                         __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                                                    unsigned int index,
                                                             __RPC__out __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *item);
                        HRESULT ( STDMETHODCALLTYPE *get_Size )(
            __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                                __RPC__out unsigned int *size);
        HRESULT ( STDMETHODCALLTYPE *IndexOf )(
                                               __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                       __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * item,
                        __RPC__out unsigned int *index,
                                __RPC__out boolean *found);
        HRESULT ( STDMETHODCALLTYPE *GetMany )(
                                               __RPC__in __FIVectorView_1_Windows__CFoundation__CUri * This,
                       unsigned int startIndex,
                       unsigned int capacity,
                                            __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *items,
                                __RPC__out unsigned int *actual);
        END_INTERFACE
} __FIVectorView_1_Windows__CFoundation__CUriVtbl;
interface __FIVectorView_1_Windows__CFoundation__CUri
{
    CONST_VTBL struct __FIVectorView_1_Windows__CFoundation__CUriVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
typedef interface __FIVector_1_Windows__CFoundation__CUri __FIVector_1_Windows__CFoundation__CUri;
EXTERN_C const IID IID___FIVector_1_Windows__CFoundation__CUri;
typedef struct __FIVector_1_Windows__CFoundation__CUriVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
        __RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                       __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This, __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This, __RPC__out TrustLevel *trustLevel);
    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                   unsigned int index,
                            __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *item);
                    HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                            __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This, __RPC__deref_out_opt __FIVectorView_1_Windows__CFoundation__CUri **view);
    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                   __RPC__in __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * item,
                    __RPC__out unsigned int *index,
                            __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * item);
    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                   unsigned int index,
                   __RPC__in __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This, unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This, __RPC__in __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                   unsigned int startIndex,
                   unsigned int capacity,
                                        __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *items,
                            __RPC__out unsigned int *actual);
    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CFoundation__CUri * This,
                   unsigned int count,
                            __RPC__in_ecount_full(count) __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * *value);
    END_INTERFACE
} __FIVector_1_Windows__CFoundation__CUriVtbl;
interface __FIVector_1_Windows__CFoundation__CUri
{
    CONST_VTBL struct __FIVector_1_Windows__CFoundation__CUriVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> GetAt(This,index,item) )
    ( (This)->lpVtbl -> get_Size(This,size) )
    ( (This)->lpVtbl -> GetView(This,view) )
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) )
    ( (This)->lpVtbl -> SetAt(This,index,item) )
    ( (This)->lpVtbl -> InsertAt(This,index,item) )
    ( (This)->lpVtbl -> RemoveAt(This,index) )
    ( (This)->lpVtbl -> Append(This,item) )
    ( (This)->lpVtbl -> RemoveAtEnd(This) )
    ( (This)->lpVtbl -> Clear(This) )
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) )
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) )
typedef interface __FIAsyncOperationCompletedHandler_1_HSTRING __FIAsyncOperationCompletedHandler_1_HSTRING;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_HSTRING;
typedef interface __FIAsyncOperation_1_HSTRING __FIAsyncOperation_1_HSTRING;
typedef struct __FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_HSTRING * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_HSTRING * This, __RPC__in_opt __FIAsyncOperation_1_HSTRING *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;
interface __FIAsyncOperationCompletedHandler_1_HSTRING
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_HSTRINGVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1_HSTRING __FIAsyncOperation_1_HSTRING;
EXTERN_C const IID IID___FIAsyncOperation_1_HSTRING;
typedef struct __FIAsyncOperation_1_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_HSTRING * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_HSTRING * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_HSTRING * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_HSTRING * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_HSTRING * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1_HSTRING *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_HSTRING * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_HSTRING **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_HSTRING * This, __RPC__out HSTRING *results);
    END_INTERFACE
} __FIAsyncOperation_1_HSTRINGVtbl;
interface __FIAsyncOperation_1_HSTRING
{
    CONST_VTBL struct __FIAsyncOperation_1_HSTRINGVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage;
typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage;
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage;
typedef interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage;
typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This);
    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This, __RPC__in_opt __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage *asyncInfo, AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageVtbl;
interface __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) )
typedef interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage;
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage;
typedef struct __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This,
                   __RPC__in REFIID riid,
        _COM_Outptr_ void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This,
                    __RPC__out ULONG *iidCount,
                                      __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This, __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This, __RPC__out TrustLevel *trustLevel);
                    HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This, __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage *handler);
                    HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This, __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * This, __RPC__out __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage * *results);
    END_INTERFACE
} __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageVtbl;
interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageVtbl *lpVtbl;
};
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
    ( (This)->lpVtbl -> AddRef(This) )
    ( (This)->lpVtbl -> Release(This) )
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) )
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) )
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl -> put_Completed(This,handler) )
    ( (This)->lpVtbl -> get_Completed(This,handler) )
    ( (This)->lpVtbl -> GetResults(This,results) )
typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact __x_ABI_CWindows_CApplicationModel_CContacts_CIContact;
typedef enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
typedef interface __x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings __x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings;
typedef interface __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails;
typedef interface __x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest __x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest;
typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;
typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;
typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;
typedef enum __x_ABI_CWindows_CGlobalization_CDayOfWeek __x_ABI_CWindows_CGlobalization_CDayOfWeek;
typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;
typedef interface __x_ABI_CWindows_CMedia_CCasting_CICastingSource __x_ABI_CWindows_CMedia_CCasting_CICastingSource;
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;
typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource;
typedef interface __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource;
typedef interface __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer;
typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager;
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;
typedef enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers __x_ABI_CWindows_CSystem_CVirtualKeyModifiers;
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;
typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrush __x_ABI_CWindows_CUI_CComposition_CICompositionBrush;
typedef interface __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase;
typedef enum __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes;
typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes;
typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter;
typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor;
typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler;
typedef interface __x_ABI_CWindows_CUI_CText_CIContentLinkInfo __x_ABI_CWindows_CUI_CText_CIContentLinkInfo;
typedef enum __x_ABI_CWindows_CUI_CText_CFontStretch __x_ABI_CWindows_CUI_CText_CFontStretch;
typedef enum __x_ABI_CWindows_CUI_CText_CFontStyle __x_ABI_CWindows_CUI_CText_CFontStyle;
typedef struct __x_ABI_CWindows_CUI_CText_CFontWeight __x_ABI_CWindows_CUI_CText_CFontWeight;
typedef interface __x_ABI_CWindows_CUI_CText_CITextDocument __x_ABI_CWindows_CUI_CText_CITextDocument;
typedef enum __x_ABI_CWindows_CUI_CText_CTextDecorations __x_ABI_CWindows_CUI_CText_CTextDecorations;
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider;
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider;
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIToggleProvider __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIToggleProvider;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBrushTransition __x_ABI_CWindows_CUI_CXaml_CIBrushTransition;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings;
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings;
typedef struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius __x_ABI_CWindows_CUI_CXaml_CCornerRadius;
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider;
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged;
typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter;
typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate __x_ABI_CWindows_CUI_CXaml_CIDataTemplate;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection;
typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer;
typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs;
typedef struct __x_ABI_CWindows_CUI_CXaml_CDuration __x_ABI_CWindows_CUI_CXaml_CDuration;
typedef enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode __x_ABI_CWindows_CUI_CXaml_CElementSoundMode;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;
typedef enum __x_ABI_CWindows_CUI_CXaml_CFocusState __x_ABI_CWindows_CUI_CXaml_CFocusState;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;
typedef struct __x_ABI_CWindows_CUI_CXaml_CGridLength __x_ABI_CWindows_CUI_CXaml_CGridLength;
typedef enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementFactory __x_ABI_CWindows_CUI_CXaml_CIElementFactory;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CICommand __x_ABI_CWindows_CUI_CXaml_CInput_CICommand;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs;
typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs;
typedef struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName;
typedef enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch;
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions __x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler;
typedef enum __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler;
typedef enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStyle __x_ABI_CWindows_CUI_CXaml_CIStyle;
typedef enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment __x_ABI_CWindows_CUI_CXaml_CTextAlignment;
typedef enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds __x_ABI_CWindows_CUI_CXaml_CTextLineBounds;
typedef enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder;
typedef enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming __x_ABI_CWindows_CUI_CXaml_CTextTrimming;
typedef enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping __x_ABI_CWindows_CUI_CXaml_CTextWrapping;
typedef struct __x_ABI_CWindows_CUI_CXaml_CThickness __x_ABI_CWindows_CUI_CXaml_CThickness;
typedef enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment;
typedef enum __x_ABI_CWindows_CUI_CXaml_CVisibility __x_ABI_CWindows_CUI_CXaml_CVisibility;
typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage;
typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage;
typedef interface __x_ABI_CWindows_CWeb_CIUriToStreamResolver __x_ABI_CWindows_CWeb_CIUriToStreamResolver;
typedef enum __x_ABI_CWindows_CWeb_CWebErrorStatus __x_ABI_CWindows_CWeb_CWebErrorStatus;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation __x_ABI_CWindows_CUI_CXaml_CControls_COrientation;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType;
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode;
enum __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode
{
    AppBarClosedDisplayMode_Compact = 0,
    AppBarClosedDisplayMode_Minimal = 1,
    AppBarClosedDisplayMode_Hidden = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason
{
    AutoSuggestionBoxTextChangeReason_UserInput = 0,
    AutoSuggestionBoxTextChangeReason_ProgrammaticChange = 1,
    AutoSuggestionBoxTextChangeReason_SuggestionChosen = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing
{
    BackgroundSizing_InnerBorderEdge = 0,
    BackgroundSizing_OuterBorderEdge = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode
{
    CalendarViewDisplayMode_Month = 0,
    CalendarViewDisplayMode_Year = 1,
    CalendarViewDisplayMode_Decade = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode
{
    CalendarViewSelectionMode_None = 0,
    CalendarViewSelectionMode_Single = 1,
    CalendarViewSelectionMode_Multiple = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment
{
    CandidateWindowAlignment_Default = 0,
    CandidateWindowAlignment_BottomEdge = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing
{
    CharacterCasing_Normal = 0,
    CharacterCasing_Lower = 1,
    CharacterCasing_Upper = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode
{
    ClickMode_Release = 0,
    ClickMode_Press = 1,
    ClickMode_Hover = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel
{
    ColorPickerHsvChannel_Hue = 0,
    ColorPickerHsvChannel_Saturation = 1,
    ColorPickerHsvChannel_Value = 2,
    ColorPickerHsvChannel_Alpha = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents
{
    ColorSpectrumComponents_HueValue = 0,
    ColorSpectrumComponents_ValueHue = 1,
    ColorSpectrumComponents_HueSaturation = 2,
    ColorSpectrumComponents_SaturationHue = 3,
    ColorSpectrumComponents_SaturationValue = 4,
    ColorSpectrumComponents_ValueSaturation = 5,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape
{
    ColorSpectrumShape_Box = 0,
    ColorSpectrumShape_Ring = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger
{
    ComboBoxSelectionChangedTrigger_Committed = 0,
    ComboBoxSelectionChangedTrigger_Always = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition
{
    CommandBarDefaultLabelPosition_Bottom = 0,
    CommandBarDefaultLabelPosition_Right = 1,
    CommandBarDefaultLabelPosition_Collapsed = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction
{
    CommandBarDynamicOverflowAction_AddingToOverflow = 0,
    CommandBarDynamicOverflowAction_RemovingFromOverflow = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition
{
    CommandBarLabelPosition_Default = 0,
    CommandBarLabelPosition_Collapsed = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility
{
    CommandBarOverflowButtonVisibility_Auto = 0,
    CommandBarOverflowButtonVisibility_Visible = 1,
    CommandBarOverflowButtonVisibility_Collapsed = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton
{
    ContentDialogButton_None = 0,
    ContentDialogButton_Primary = 1,
    ContentDialogButton_Secondary = 2,
    ContentDialogButton_Close = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement
{
    ContentDialogPlacement_Popup = 0,
    ContentDialogPlacement_InPlace = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult
{
    ContentDialogResult_None = 0,
    ContentDialogResult_Primary = 1,
    ContentDialogResult_Secondary = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind
{
    ContentLinkChangeKind_Inserted = 0,
    ContentLinkChangeKind_Removed = 1,
    ContentLinkChangeKind_Edited = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators
{
    DisabledFormattingAccelerators_None = 0,
    DisabledFormattingAccelerators_Bold = 0x1,
    DisabledFormattingAccelerators_Italic = 0x2,
    DisabledFormattingAccelerators_Underline = 0x4,
    DisabledFormattingAccelerators_All = 0xffffffff,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment
{
    HandwritingPanelPlacementAlignment_Auto = 0,
    HandwritingPanelPlacementAlignment_TopLeft = 1,
    HandwritingPanelPlacementAlignment_TopRight = 2,
    HandwritingPanelPlacementAlignment_BottomLeft = 3,
    HandwritingPanelPlacementAlignment_BottomRight = 4,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger
{
    IncrementalLoadingTrigger_None = 0,
    IncrementalLoadingTrigger_Edge = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement
{
    InkToolbarButtonFlyoutPlacement_Auto = 0,
    InkToolbarButtonFlyoutPlacement_Top = 1,
    InkToolbarButtonFlyoutPlacement_Bottom = 2,
    InkToolbarButtonFlyoutPlacement_Left = 3,
    InkToolbarButtonFlyoutPlacement_Right = 4,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind
{
    InkToolbarFlyoutItemKind_Simple = 0,
    InkToolbarFlyoutItemKind_Radio = 1,
    InkToolbarFlyoutItemKind_Check = 2,
    InkToolbarFlyoutItemKind_RadioCheck = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls
{
    InkToolbarInitialControls_All = 0,
    InkToolbarInitialControls_None = 1,
    InkToolbarInitialControls_PensOnly = 2,
    InkToolbarInitialControls_AllExceptPens = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind
{
    InkToolbarMenuKind_Stencil = 0,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind
{
    InkToolbarStencilKind_Ruler = 0,
    InkToolbarStencilKind_Protractor = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle
{
    InkToolbarToggle_Ruler = 0,
    InkToolbarToggle_Custom = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool
{
    InkToolbarTool_BallpointPen = 0,
    InkToolbarTool_Pencil = 1,
    InkToolbarTool_Highlighter = 2,
    InkToolbarTool_Eraser = 3,
    InkToolbarTool_CustomPen = 4,
    InkToolbarTool_CustomTool = 5,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode
{
    ItemsUpdatingScrollMode_KeepItemsInView = 0,
    ItemsUpdatingScrollMode_KeepScrollOffset = 1,
    ItemsUpdatingScrollMode_KeepLastItemInView = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode
{
    LightDismissOverlayMode_Auto = 0,
    LightDismissOverlayMode_On = 1,
    LightDismissOverlayMode_Off = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode
{
    ListPickerFlyoutSelectionMode_Single = 0,
    ListPickerFlyoutSelectionMode_Multiple = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode
{
    ListViewReorderMode_Disabled = 0,
    ListViewReorderMode_Enabled = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode
{
    ListViewSelectionMode_None = 0,
    ListViewSelectionMode_Single = 1,
    ListViewSelectionMode_Multiple = 2,
    ListViewSelectionMode_Extended = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible
{
    NavigationViewBackButtonVisible_Collapsed = 0,
    NavigationViewBackButtonVisible_Visible = 1,
    NavigationViewBackButtonVisible_Auto = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode
{
    NavigationViewDisplayMode_Minimal = 0,
    NavigationViewDisplayMode_Compact = 1,
    NavigationViewDisplayMode_Expanded = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode
{
    NavigationViewOverflowLabelMode_MoreLabel = 0,
    NavigationViewOverflowLabelMode_NoLabel = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode
{
    NavigationViewPaneDisplayMode_Auto = 0,
    NavigationViewPaneDisplayMode_Left = 1,
    NavigationViewPaneDisplayMode_Top = 2,
    NavigationViewPaneDisplayMode_LeftCompact = 3,
    NavigationViewPaneDisplayMode_LeftMinimal = 4,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus
{
    NavigationViewSelectionFollowsFocus_Disabled = 0,
    NavigationViewSelectionFollowsFocus_Enabled = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled
{
    NavigationViewShoulderNavigationEnabled_WhenSelectionFollowsFocus = 0,
    NavigationViewShoulderNavigationEnabled_Always = 1,
    NavigationViewShoulderNavigationEnabled_Never = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation
{
    Orientation_Vertical = 0,
    Orientation_Horizontal = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection
{
    PanelScrollingDirection_None = 0,
    PanelScrollingDirection_Forward = 1,
    PanelScrollingDirection_Backward = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind
{
    ParallaxSourceOffsetKind_Absolute = 0,
    ParallaxSourceOffsetKind_Relative = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode
{
    PasswordRevealMode_Peek = 0,
    PasswordRevealMode_Hidden = 1,
    PasswordRevealMode_Visible = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement
{
    PivotHeaderFocusVisualPlacement_ItemHeaders = 0,
    PivotHeaderFocusVisualPlacement_SelectedItemHeader = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup
{
    PivotSlideInAnimationGroup_Default = 0,
    PivotSlideInAnimationGroup_GroupOne = 1,
    PivotSlideInAnimationGroup_GroupTwo = 2,
    PivotSlideInAnimationGroup_GroupThree = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection
{
    RefreshPullDirection_LeftToRight = 0,
    RefreshPullDirection_TopToBottom = 1,
    RefreshPullDirection_RightToLeft = 2,
    RefreshPullDirection_BottomToTop = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation
{
    RefreshVisualizerOrientation_Auto = 0,
    RefreshVisualizerOrientation_Normal = 1,
    RefreshVisualizerOrientation_Rotate90DegreesCounterclockwise = 2,
    RefreshVisualizerOrientation_Rotate270DegreesCounterclockwise = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState
{
    RefreshVisualizerState_Idle = 0,
    RefreshVisualizerState_Peeking = 1,
    RefreshVisualizerState_Interacting = 2,
    RefreshVisualizerState_Pending = 3,
    RefreshVisualizerState_Refreshing = 4,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer
{
    RequiresPointer_Never = 0,
    RequiresPointer_WhenEngaged = 1,
    RequiresPointer_WhenFocused = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat
{
    RichEditClipboardFormat_AllFormats = 0,
    RichEditClipboardFormat_PlainText = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility
{
    ScrollBarVisibility_Disabled = 0,
    ScrollBarVisibility_Auto = 1,
    ScrollBarVisibility_Hidden = 2,
    ScrollBarVisibility_Visible = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment
{
    ScrollIntoViewAlignment_Default = 0,
    ScrollIntoViewAlignment_Leading = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode
{
    ScrollMode_Disabled = 0,
    ScrollMode_Enabled = 1,
    ScrollMode_Auto = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode
{
    SelectionMode_Single = 0,
    SelectionMode_Multiple = 1,
    SelectionMode_Extended = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType
{
    SnapPointsType_None = 0,
    SnapPointsType_Optional = 1,
    SnapPointsType_Mandatory = 2,
    SnapPointsType_OptionalSingle = 3,
    SnapPointsType_MandatorySingle = 4,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode
{
    SplitViewDisplayMode_Overlay = 0,
    SplitViewDisplayMode_Inline = 1,
    SplitViewDisplayMode_CompactOverlay = 2,
    SplitViewDisplayMode_CompactInline = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement
{
    SplitViewPanePlacement_Left = 0,
    SplitViewPanePlacement_Right = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection
{
    StretchDirection_UpOnly = 0,
    StretchDirection_DownOnly = 1,
    StretchDirection_Both = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked
{
    SwipeBehaviorOnInvoked_Auto = 0,
    SwipeBehaviorOnInvoked_Close = 1,
    SwipeBehaviorOnInvoked_RemainOpen = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode
{
    SwipeMode_Reveal = 0,
    SwipeMode_Execute = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol
{
    Symbol_Previous = 57600,
    Symbol_Next = 57601,
    Symbol_Play = 57602,
    Symbol_Pause = 57603,
    Symbol_Edit = 57604,
    Symbol_Save = 57605,
    Symbol_Clear = 57606,
    Symbol_Delete = 57607,
    Symbol_Remove = 57608,
    Symbol_Add = 57609,
    Symbol_Cancel = 57610,
    Symbol_Accept = 57611,
    Symbol_More = 57612,
    Symbol_Redo = 57613,
    Symbol_Undo = 57614,
    Symbol_Home = 57615,
    Symbol_Up = 57616,
    Symbol_Forward = 57617,
    Symbol_Back = 57618,
    Symbol_Favorite = 57619,
    Symbol_Camera = 57620,
    Symbol_Setting = 57621,
    Symbol_Video = 57622,
    Symbol_Sync = 57623,
    Symbol_Download = 57624,
    Symbol_Mail = 57625,
    Symbol_Find = 57626,
    Symbol_Help = 57627,
    Symbol_Upload = 57628,
    Symbol_Emoji = 57629,
    Symbol_TwoPage = 57630,
    Symbol_LeaveChat = 57631,
    Symbol_MailForward = 57632,
    Symbol_Clock = 57633,
    Symbol_Send = 57634,
    Symbol_Crop = 57635,
    Symbol_RotateCamera = 57636,
    Symbol_People = 57637,
    Symbol_OpenPane = 57638,
    Symbol_ClosePane = 57639,
    Symbol_World = 57640,
    Symbol_Flag = 57641,
    Symbol_PreviewLink = 57642,
    Symbol_Globe = 57643,
    Symbol_Trim = 57644,
    Symbol_AttachCamera = 57645,
    Symbol_ZoomIn = 57646,
    Symbol_Bookmarks = 57647,
    Symbol_Document = 57648,
    Symbol_ProtectedDocument = 57649,
    Symbol_Page = 57650,
    Symbol_Bullets = 57651,
    Symbol_Comment = 57652,
    Symbol_MailFilled = 57653,
    Symbol_ContactInfo = 57654,
    Symbol_HangUp = 57655,
    Symbol_ViewAll = 57656,
    Symbol_MapPin = 57657,
    Symbol_Phone = 57658,
    Symbol_VideoChat = 57659,
    Symbol_Switch = 57660,
    Symbol_Contact = 57661,
    Symbol_Rename = 57662,
    Symbol_Pin = 57665,
    Symbol_MusicInfo = 57666,
    Symbol_Go = 57667,
    Symbol_Keyboard = 57668,
    Symbol_DockLeft = 57669,
    Symbol_DockRight = 57670,
    Symbol_DockBottom = 57671,
    Symbol_Remote = 57672,
    Symbol_Refresh = 57673,
    Symbol_Rotate = 57674,
    Symbol_Shuffle = 57675,
    Symbol_List = 57676,
    Symbol_Shop = 57677,
    Symbol_SelectAll = 57678,
    Symbol_Orientation = 57679,
    Symbol_Import = 57680,
    Symbol_ImportAll = 57681,
    Symbol_BrowsePhotos = 57685,
    Symbol_WebCam = 57686,
    Symbol_Pictures = 57688,
    Symbol_SaveLocal = 57689,
    Symbol_Caption = 57690,
    Symbol_Stop = 57691,
    Symbol_ShowResults = 57692,
    Symbol_Volume = 57693,
    Symbol_Repair = 57694,
    Symbol_Message = 57695,
    Symbol_Page2 = 57696,
    Symbol_CalendarDay = 57697,
    Symbol_CalendarWeek = 57698,
    Symbol_Calendar = 57699,
    Symbol_Character = 57700,
    Symbol_MailReplyAll = 57701,
    Symbol_Read = 57702,
    Symbol_Link = 57703,
    Symbol_Account = 57704,
    Symbol_ShowBcc = 57705,
    Symbol_HideBcc = 57706,
    Symbol_Cut = 57707,
    Symbol_Attach = 57708,
    Symbol_Paste = 57709,
    Symbol_Filter = 57710,
    Symbol_Copy = 57711,
    Symbol_Emoji2 = 57712,
    Symbol_Important = 57713,
    Symbol_MailReply = 57714,
    Symbol_SlideShow = 57715,
    Symbol_Sort = 57716,
    Symbol_Manage = 57720,
    Symbol_AllApps = 57721,
    Symbol_DisconnectDrive = 57722,
    Symbol_MapDrive = 57723,
    Symbol_NewWindow = 57724,
    Symbol_OpenWith = 57725,
    Symbol_ContactPresence = 57729,
    Symbol_Priority = 57730,
    Symbol_GoToToday = 57732,
    Symbol_Font = 57733,
    Symbol_FontColor = 57734,
    Symbol_Contact2 = 57735,
    Symbol_Folder = 57736,
    Symbol_Audio = 57737,
    Symbol_Placeholder = 57738,
    Symbol_View = 57739,
    Symbol_SetLockScreen = 57740,
    Symbol_SetTile = 57741,
    Symbol_ClosedCaption = 57744,
    Symbol_StopSlideShow = 57745,
    Symbol_Permissions = 57746,
    Symbol_Highlight = 57747,
    Symbol_DisableUpdates = 57748,
    Symbol_UnFavorite = 57749,
    Symbol_UnPin = 57750,
    Symbol_OpenLocal = 57751,
    Symbol_Mute = 57752,
    Symbol_Italic = 57753,
    Symbol_Underline = 57754,
    Symbol_Bold = 57755,
    Symbol_MoveToFolder = 57756,
    Symbol_LikeDislike = 57757,
    Symbol_Dislike = 57758,
    Symbol_Like = 57759,
    Symbol_AlignRight = 57760,
    Symbol_AlignCenter = 57761,
    Symbol_AlignLeft = 57762,
    Symbol_Zoom = 57763,
    Symbol_ZoomOut = 57764,
    Symbol_OpenFile = 57765,
    Symbol_OtherUser = 57766,
    Symbol_Admin = 57767,
    Symbol_Street = 57795,
    Symbol_Map = 57796,
    Symbol_ClearSelection = 57797,
    Symbol_FontDecrease = 57798,
    Symbol_FontIncrease = 57799,
    Symbol_FontSize = 57800,
    Symbol_CellPhone = 57801,
    Symbol_ReShare = 57802,
    Symbol_Tag = 57803,
    Symbol_RepeatOne = 57804,
    Symbol_RepeatAll = 57805,
    Symbol_OutlineStar = 57806,
    Symbol_SolidStar = 57807,
    Symbol_Calculator = 57808,
    Symbol_Directions = 57809,
    Symbol_Target = 57810,
    Symbol_Library = 57811,
    Symbol_PhoneBook = 57812,
    Symbol_Memo = 57813,
    Symbol_Microphone = 57814,
    Symbol_PostUpdate = 57815,
    Symbol_BackToWindow = 57816,
    Symbol_FullScreen = 57817,
    Symbol_NewFolder = 57818,
    Symbol_CalendarReply = 57819,
    Symbol_UnSyncFolder = 57821,
    Symbol_ReportHacked = 57822,
    Symbol_SyncFolder = 57823,
    Symbol_BlockContact = 57824,
    Symbol_SwitchApps = 57825,
    Symbol_AddFriend = 57826,
    Symbol_TouchPointer = 57827,
    Symbol_GoToStart = 57828,
    Symbol_ZeroBars = 57829,
    Symbol_OneBar = 57830,
    Symbol_TwoBars = 57831,
    Symbol_ThreeBars = 57832,
    Symbol_FourBars = 57833,
    Symbol_Scan = 58004,
    Symbol_Preview = 58005,
    Symbol_GlobalNavigationButton = 59136,
    Symbol_Share = 59181,
    Symbol_Print = 59209,
    Symbol_XboxOneConsole = 59792,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode
{
    TreeViewSelectionMode_None = 0,
    TreeViewSelectionMode_Single = 1,
    TreeViewSelectionMode_Multiple = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode
{
    TwoPaneViewMode_SinglePane = 0,
    TwoPaneViewMode_Wide = 1,
    TwoPaneViewMode_Tall = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority
{
    TwoPaneViewPriority_Pane1 = 0,
    TwoPaneViewPriority_Pane2 = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration
{
    TwoPaneViewTallModeConfiguration_SinglePane = 0,
    TwoPaneViewTallModeConfiguration_TopBottom = 1,
    TwoPaneViewTallModeConfiguration_BottomTop = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration
{
    TwoPaneViewWideModeConfiguration_SinglePane = 0,
    TwoPaneViewWideModeConfiguration_LeftRight = 1,
    TwoPaneViewWideModeConfiguration_RightLeft = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode
{
    VirtualizationMode_Standard = 0,
    VirtualizationMode_Recycling = 1,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode
{
    WebViewExecutionMode_SameThread = 0,
    WebViewExecutionMode_SeparateThread = 1,
    WebViewExecutionMode_SeparateProcess = 2,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState
{
    WebViewPermissionState_Unknown = 0,
    WebViewPermissionState_Defer = 1,
    WebViewPermissionState_Allow = 2,
    WebViewPermissionState_Deny = 3,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType
{
    WebViewPermissionType_Geolocation = 0,
    WebViewPermissionType_UnlimitedIndexedDBQuota = 1,
    WebViewPermissionType_Media = 2,
    WebViewPermissionType_PointerLock = 3,
    WebViewPermissionType_WebNotifications = 4,
    WebViewPermissionType_Screen = 5,
    WebViewPermissionType_ImmersiveView = 6,
};
enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode
{
    ZoomMode_Disabled = 0,
    ZoomMode_Enabled = 1,
};
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__deref_out_opt HSTRING * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,item,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler * This,
                  __RPC__in HSTRING key,
                           __RPC__deref_out_opt __FIAsyncOperation_1_IInspectable * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,key,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler;
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject);
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This);
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
    ( (This)->lpVtbl->Invoke(This,sender,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAnchorRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Anchor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Anchor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AnchorCandidates )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CUIElement * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Anchor(This,value) )
    ( (This)->lpVtbl->put_Anchor(This,value) )
    ( (This)->lpVtbl->get_AnchorCandidates(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBar[] = L"Windows.UI.Xaml.Controls.IAppBar";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSticky )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSticky )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsOpen(This,value) )
    ( (This)->lpVtbl->put_IsOpen(This,value) )
    ( (This)->lpVtbl->get_IsSticky(This,value) )
    ( (This)->lpVtbl->put_IsSticky(This,value) )
    ( (This)->lpVtbl->add_Opened(This,handler,token) )
    ( (This)->lpVtbl->remove_Opened(This,token) )
    ( (This)->lpVtbl->add_Closed(This,handler,token) )
    ( (This)->lpVtbl->remove_Closed(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBar2[] = L"Windows.UI.Xaml.Controls.IAppBar2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ClosedDisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ClosedDisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ClosedDisplayMode(This,value) )
    ( (This)->lpVtbl->put_ClosedDisplayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBar3[] = L"Windows.UI.Xaml.Controls.IAppBar3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Opening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Opening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Closing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Closing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->add_Opening(This,handler,token) )
    ( (This)->lpVtbl->remove_Opening(This,token) )
    ( (This)->lpVtbl->add_Closing(This,handler,token) )
    ( (This)->lpVtbl->remove_Closing(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBar4[] = L"Windows.UI.Xaml.Controls.IAppBar4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->put_LightDismissOverlayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButton[] = L"Windows.UI.Xaml.Controls.IAppBarButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Label )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Label )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Label(This,value) )
    ( (This)->lpVtbl->put_Label(This,value) )
    ( (This)->lpVtbl->get_Icon(This,value) )
    ( (This)->lpVtbl->put_Icon(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButton3[] = L"Windows.UI.Xaml.Controls.IAppBarButton3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LabelPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LabelPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LabelPosition(This,value) )
    ( (This)->lpVtbl->put_LabelPosition(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButton4[] = L"Windows.UI.Xaml.Controls.IAppBarButton4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorTextOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_KeyboardAcceleratorTextOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_KeyboardAcceleratorTextOverride(This,value) )
    ( (This)->lpVtbl->put_KeyboardAcceleratorTextOverride(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButton5[] = L"Windows.UI.Xaml.Controls.IAppBarButton5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButtonFactory[] = L"Windows.UI.Xaml.Controls.IAppBarButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButtonStatics[] = L"Windows.UI.Xaml.Controls.IAppBarButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LabelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IconProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LabelProperty(This,value) )
    ( (This)->lpVtbl->get_IconProperty(This,value) )
    ( (This)->lpVtbl->get_IsCompactProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButtonStatics3[] = L"Windows.UI.Xaml.Controls.IAppBarButtonStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LabelPositionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsInOverflowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DynamicOverflowOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LabelPositionProperty(This,value) )
    ( (This)->lpVtbl->get_IsInOverflowProperty(This,value) )
    ( (This)->lpVtbl->get_DynamicOverflowOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButtonStatics4[] = L"Windows.UI.Xaml.Controls.IAppBarButtonStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorTextOverrideProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_KeyboardAcceleratorTextOverrideProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarElementContainer[] = L"Windows.UI.Xaml.Controls.IAppBarElementContainer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarElementContainerFactory[] = L"Windows.UI.Xaml.Controls.IAppBarElementContainerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarElementContainerStatics[] = L"Windows.UI.Xaml.Controls.IAppBarElementContainerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsInOverflowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DynamicOverflowOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsCompactProperty(This,value) )
    ( (This)->lpVtbl->get_IsInOverflowProperty(This,value) )
    ( (This)->lpVtbl->get_DynamicOverflowOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarFactory[] = L"Windows.UI.Xaml.Controls.IAppBarFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarOverrides[] = L"Windows.UI.Xaml.Controls.IAppBarOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
                  __RPC__in_opt IInspectable * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
                  __RPC__in_opt IInspectable * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnClosed(This,e) )
    ( (This)->lpVtbl->OnOpened(This,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarOverrides3[] = L"Windows.UI.Xaml.Controls.IAppBarOverrides3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnClosing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This,
                  __RPC__in_opt IInspectable * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 * This,
                  __RPC__in_opt IInspectable * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnClosing(This,e) )
    ( (This)->lpVtbl->OnOpening(This,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarSeparator[] = L"Windows.UI.Xaml.Controls.IAppBarSeparator";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarSeparatorFactory[] = L"Windows.UI.Xaml.Controls.IAppBarSeparatorFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarSeparatorStatics[] = L"Windows.UI.Xaml.Controls.IAppBarSeparatorStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsCompactProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarSeparatorStatics3[] = L"Windows.UI.Xaml.Controls.IAppBarSeparatorStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsInOverflowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DynamicOverflowOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsInOverflowProperty(This,value) )
    ( (This)->lpVtbl->get_DynamicOverflowOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarStatics[] = L"Windows.UI.Xaml.Controls.IAppBarStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsStickyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsOpenProperty(This,value) )
    ( (This)->lpVtbl->get_IsStickyProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarStatics2[] = L"Windows.UI.Xaml.Controls.IAppBarStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ClosedDisplayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ClosedDisplayModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarStatics4[] = L"Windows.UI.Xaml.Controls.IAppBarStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButton[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Label )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Label )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Label(This,value) )
    ( (This)->lpVtbl->put_Label(This,value) )
    ( (This)->lpVtbl->get_Icon(This,value) )
    ( (This)->lpVtbl->put_Icon(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButton3[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButton3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LabelPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LabelPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LabelPosition(This,value) )
    ( (This)->lpVtbl->put_LabelPosition(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButton4[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButton4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorTextOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_KeyboardAcceleratorTextOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_KeyboardAcceleratorTextOverride(This,value) )
    ( (This)->lpVtbl->put_KeyboardAcceleratorTextOverride(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButton5[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButton5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButtonFactory[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButtonStatics[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LabelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IconProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LabelProperty(This,value) )
    ( (This)->lpVtbl->get_IconProperty(This,value) )
    ( (This)->lpVtbl->get_IsCompactProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButtonStatics3[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LabelPositionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsInOverflowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DynamicOverflowOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LabelPositionProperty(This,value) )
    ( (This)->lpVtbl->get_IsInOverflowProperty(This,value) )
    ( (This)->lpVtbl->get_DynamicOverflowOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButtonStatics4[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorTextOverrideProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_KeyboardAcceleratorTextOverrideProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBox[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MaxSuggestionListHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxSuggestionListHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSuggestionListOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSuggestionListOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextMemberPath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextMemberPath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_UpdateTextOnSelect )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_UpdateTextOnSelect )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoMaximizeSuggestionArea )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AutoMaximizeSuggestionArea )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextBoxStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextBoxStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SuggestionChosen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SuggestionChosen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MaxSuggestionListHeight(This,value) )
    ( (This)->lpVtbl->put_MaxSuggestionListHeight(This,value) )
    ( (This)->lpVtbl->get_IsSuggestionListOpen(This,value) )
    ( (This)->lpVtbl->put_IsSuggestionListOpen(This,value) )
    ( (This)->lpVtbl->get_TextMemberPath(This,value) )
    ( (This)->lpVtbl->put_TextMemberPath(This,value) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->put_Text(This,value) )
    ( (This)->lpVtbl->get_UpdateTextOnSelect(This,value) )
    ( (This)->lpVtbl->put_UpdateTextOnSelect(This,value) )
    ( (This)->lpVtbl->get_PlaceholderText(This,value) )
    ( (This)->lpVtbl->put_PlaceholderText(This,value) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_AutoMaximizeSuggestionArea(This,value) )
    ( (This)->lpVtbl->put_AutoMaximizeSuggestionArea(This,value) )
    ( (This)->lpVtbl->get_TextBoxStyle(This,value) )
    ( (This)->lpVtbl->put_TextBoxStyle(This,value) )
    ( (This)->lpVtbl->add_SuggestionChosen(This,handler,token) )
    ( (This)->lpVtbl->remove_SuggestionChosen(This,token) )
    ( (This)->lpVtbl->add_TextChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_TextChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBox2[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBox2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_QueryIcon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_QueryIcon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_QuerySubmitted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CAutoSuggestBox_Windows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_QuerySubmitted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_QueryIcon(This,value) )
    ( (This)->lpVtbl->put_QueryIcon(This,value) )
    ( (This)->lpVtbl->add_QuerySubmitted(This,handler,token) )
    ( (This)->lpVtbl->remove_QuerySubmitted(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBox3[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBox3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->put_LightDismissOverlayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBox4[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBox4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 * This,
                  __RPC__in_opt IInspectable * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Description(This,value) )
    ( (This)->lpVtbl->put_Description(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxQuerySubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_QueryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChosenSuggestion )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_QueryText(This,value) )
    ( (This)->lpVtbl->get_ChosenSuggestion(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxStatics[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MaxSuggestionListHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSuggestionListOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextMemberPathProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_UpdateTextOnSelectProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoMaximizeSuggestionAreaProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextBoxStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MaxSuggestionListHeightProperty(This,value) )
    ( (This)->lpVtbl->get_IsSuggestionListOpenProperty(This,value) )
    ( (This)->lpVtbl->get_TextMemberPathProperty(This,value) )
    ( (This)->lpVtbl->get_TextProperty(This,value) )
    ( (This)->lpVtbl->get_UpdateTextOnSelectProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderTextProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_AutoMaximizeSuggestionAreaProperty(This,value) )
    ( (This)->lpVtbl->get_TextBoxStyleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxStatics2[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_QueryIconProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_QueryIconProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxStatics3[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxStatics4[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DescriptionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DescriptionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxSuggestionChosenEventArgs[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedItem(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxTextChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Reason )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Reason )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason value
        );
    HRESULT ( STDMETHODCALLTYPE *CheckCurrent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs * This,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Reason(This,value) )
    ( (This)->lpVtbl->put_Reason(This,value) )
    ( (This)->lpVtbl->CheckCurrent(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAutoSuggestBoxTextChangedEventArgsStatics[] = L"Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ReasonProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ReasonProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBackClickEventArgs[] = L"Windows.UI.Xaml.Controls.IBackClickEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIcon[] = L"Windows.UI.Xaml.Controls.IBitmapIcon";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UriSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_UriSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UriSource(This,value) )
    ( (This)->lpVtbl->put_UriSource(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIcon2[] = L"Windows.UI.Xaml.Controls.IBitmapIcon2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ShowAsMonochrome )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ShowAsMonochrome )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ShowAsMonochrome(This,value) )
    ( (This)->lpVtbl->put_ShowAsMonochrome(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconFactory[] = L"Windows.UI.Xaml.Controls.IBitmapIconFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconSource[] = L"Windows.UI.Xaml.Controls.IBitmapIconSource";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UriSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_UriSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShowAsMonochrome )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ShowAsMonochrome )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UriSource(This,value) )
    ( (This)->lpVtbl->put_UriSource(This,value) )
    ( (This)->lpVtbl->get_ShowAsMonochrome(This,value) )
    ( (This)->lpVtbl->put_ShowAsMonochrome(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconSourceFactory[] = L"Windows.UI.Xaml.Controls.IBitmapIconSourceFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconSourceStatics[] = L"Windows.UI.Xaml.Controls.IBitmapIconSourceStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UriSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShowAsMonochromeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UriSourceProperty(This,value) )
    ( (This)->lpVtbl->get_ShowAsMonochromeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconStatics[] = L"Windows.UI.Xaml.Controls.IBitmapIconStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UriSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UriSourceProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconStatics2[] = L"Windows.UI.Xaml.Controls.IBitmapIconStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ShowAsMonochromeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ShowAsMonochromeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBorder[] = L"Windows.UI.Xaml.Controls.IBorder";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                  __x_ABI_CWindows_CUI_CXaml_CCornerRadius value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Child )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Child )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChildTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ChildTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BorderBrush(This,value) )
    ( (This)->lpVtbl->put_BorderBrush(This,value) )
    ( (This)->lpVtbl->get_BorderThickness(This,value) )
    ( (This)->lpVtbl->put_BorderThickness(This,value) )
    ( (This)->lpVtbl->get_Background(This,value) )
    ( (This)->lpVtbl->put_Background(This,value) )
    ( (This)->lpVtbl->get_CornerRadius(This,value) )
    ( (This)->lpVtbl->put_CornerRadius(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
    ( (This)->lpVtbl->get_Child(This,value) )
    ( (This)->lpVtbl->put_Child(This,value) )
    ( (This)->lpVtbl->get_ChildTransitions(This,value) )
    ( (This)->lpVtbl->put_ChildTransitions(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorder;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBorder2[] = L"Windows.UI.Xaml.Controls.IBorder2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackgroundTransition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIBrushTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundTransition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIBrushTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->put_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->get_BackgroundTransition(This,value) )
    ( (This)->lpVtbl->put_BackgroundTransition(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBorderStatics[] = L"Windows.UI.Xaml.Controls.IBorderStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadiusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChildTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_BorderThicknessProperty(This,value) )
    ( (This)->lpVtbl->get_BackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_CornerRadiusProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
    ( (This)->lpVtbl->get_ChildTransitionsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBorderStatics2[] = L"Windows.UI.Xaml.Controls.IBorderStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButton[] = L"Windows.UI.Xaml.Controls.IButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButtonFactory[] = L"Windows.UI.Xaml.Controls.IButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButtonStaticsWithFlyout[] = L"Windows.UI.Xaml.Controls.IButtonStaticsWithFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FlyoutProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButtonWithFlyout[] = L"Windows.UI.Xaml.Controls.IButtonWithFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Flyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Flyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Flyout(This,value) )
    ( (This)->lpVtbl->put_Flyout(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePicker[] = L"Windows.UI.Xaml.Controls.ICalendarDatePicker";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Date )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Date )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCalendarOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsCalendarOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DateFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DateFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarViewStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarViewStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTodayHighlighted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTodayHighlighted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstDayOfWeek )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CGlobalization_CDayOfWeek * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstDayOfWeek )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __x_ABI_CWindows_CGlobalization_CDayOfWeek value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayOfWeekFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayOfWeekFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOutOfScopeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsOutOfScopeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGroupLabelVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsGroupLabelVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CalendarViewDayItemChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CalendarViewDayItemChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarDatePicker_Windows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SetDisplayDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  __x_ABI_CWindows_CFoundation_CDateTime date
        );
    HRESULT ( STDMETHODCALLTYPE *SetYearDecadeDisplayDimensions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * This,
                  INT32 columns,
                  INT32 rows
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Date(This,value) )
    ( (This)->lpVtbl->put_Date(This,value) )
    ( (This)->lpVtbl->get_IsCalendarOpen(This,value) )
    ( (This)->lpVtbl->put_IsCalendarOpen(This,value) )
    ( (This)->lpVtbl->get_DateFormat(This,value) )
    ( (This)->lpVtbl->put_DateFormat(This,value) )
    ( (This)->lpVtbl->get_PlaceholderText(This,value) )
    ( (This)->lpVtbl->put_PlaceholderText(This,value) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_CalendarViewStyle(This,value) )
    ( (This)->lpVtbl->put_CalendarViewStyle(This,value) )
    ( (This)->lpVtbl->get_MinDate(This,value) )
    ( (This)->lpVtbl->put_MinDate(This,value) )
    ( (This)->lpVtbl->get_MaxDate(This,value) )
    ( (This)->lpVtbl->put_MaxDate(This,value) )
    ( (This)->lpVtbl->get_IsTodayHighlighted(This,value) )
    ( (This)->lpVtbl->put_IsTodayHighlighted(This,value) )
    ( (This)->lpVtbl->get_DisplayMode(This,value) )
    ( (This)->lpVtbl->put_DisplayMode(This,value) )
    ( (This)->lpVtbl->get_FirstDayOfWeek(This,value) )
    ( (This)->lpVtbl->put_FirstDayOfWeek(This,value) )
    ( (This)->lpVtbl->get_DayOfWeekFormat(This,value) )
    ( (This)->lpVtbl->put_DayOfWeekFormat(This,value) )
    ( (This)->lpVtbl->get_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->put_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->get_IsOutOfScopeEnabled(This,value) )
    ( (This)->lpVtbl->put_IsOutOfScopeEnabled(This,value) )
    ( (This)->lpVtbl->get_IsGroupLabelVisible(This,value) )
    ( (This)->lpVtbl->put_IsGroupLabelVisible(This,value) )
    ( (This)->lpVtbl->add_CalendarViewDayItemChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_CalendarViewDayItemChanging(This,token) )
    ( (This)->lpVtbl->add_DateChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_DateChanged(This,token) )
    ( (This)->lpVtbl->add_Opened(This,handler,token) )
    ( (This)->lpVtbl->remove_Opened(This,token) )
    ( (This)->lpVtbl->add_Closed(This,handler,token) )
    ( (This)->lpVtbl->remove_Closed(This,token) )
    ( (This)->lpVtbl->SetDisplayDate(This,date) )
    ( (This)->lpVtbl->SetYearDecadeDisplayDimensions(This,columns,rows) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePicker2[] = L"Windows.UI.Xaml.Controls.ICalendarDatePicker2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->put_LightDismissOverlayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePicker3[] = L"Windows.UI.Xaml.Controls.ICalendarDatePicker3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 * This,
                  __RPC__in_opt IInspectable * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Description(This,value) )
    ( (This)->lpVtbl->put_Description(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePickerDateChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_NewDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OldDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_NewDate(This,value) )
    ( (This)->lpVtbl->get_OldDate(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePickerFactory[] = L"Windows.UI.Xaml.Controls.ICalendarDatePickerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePickerStatics[] = L"Windows.UI.Xaml.Controls.ICalendarDatePickerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCalendarOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DateFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarViewStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinDateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxDateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTodayHighlightedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstDayOfWeekProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayOfWeekFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifierProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOutOfScopeEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGroupLabelVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DateProperty(This,value) )
    ( (This)->lpVtbl->get_IsCalendarOpenProperty(This,value) )
    ( (This)->lpVtbl->get_DateFormatProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderTextProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarViewStyleProperty(This,value) )
    ( (This)->lpVtbl->get_MinDateProperty(This,value) )
    ( (This)->lpVtbl->get_MaxDateProperty(This,value) )
    ( (This)->lpVtbl->get_IsTodayHighlightedProperty(This,value) )
    ( (This)->lpVtbl->get_DisplayModeProperty(This,value) )
    ( (This)->lpVtbl->get_FirstDayOfWeekProperty(This,value) )
    ( (This)->lpVtbl->get_DayOfWeekFormatProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarIdentifierProperty(This,value) )
    ( (This)->lpVtbl->get_IsOutOfScopeEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsGroupLabelVisibleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePickerStatics2[] = L"Windows.UI.Xaml.Controls.ICalendarDatePickerStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarDatePickerStatics3[] = L"Windows.UI.Xaml.Controls.ICalendarDatePickerStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DescriptionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DescriptionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarView[] = L"Windows.UI.Xaml.Controls.ICalendarView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayOfWeekFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayOfWeekFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGroupLabelVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsGroupLabelVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstDayOfWeek )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CGlobalization_CDayOfWeek * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstDayOfWeek )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CGlobalization_CDayOfWeek value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOutOfScopeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsOutOfScopeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTodayHighlighted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTodayHighlighted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NumberOfWeeksInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_NumberOfWeeksInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedDates )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CDateTime * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FocusBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FocusBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedHoverBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedHoverBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedPressedBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedPressedBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HoverBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HoverBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PressedBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PressedBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarItemBorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OutOfScopeBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OutOfScopeBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarItemBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PressedForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PressedForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TodayForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TodayForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BlackoutForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BlackoutForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OutOfScopeForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OutOfScopeForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarItemForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayItemFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayItemFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayItemFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayItemFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TodayFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TodayFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfMonthLabelFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfMonthLabelFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfMonthLabelFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfMonthLabelFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthYearItemFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthYearItemFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthYearItemFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthYearItemFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfYearDecadeLabelFontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfYearDecadeLabelFontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfYearDecadeLabelFontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FirstOfYearDecadeLabelFontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalDayItemAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalDayItemAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalDayItemAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalDayItemAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalFirstOfMonthLabelAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalFirstOfMonthLabelAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalFirstOfMonthLabelAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalFirstOfMonthLabelAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemBorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarItemBorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarViewDayItemStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarViewDayItemStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CalendarViewDayItemChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CalendarViewDayItemChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectedDatesChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectedDatesChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SetDisplayDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  __x_ABI_CWindows_CFoundation_CDateTime date
        );
    HRESULT ( STDMETHODCALLTYPE *SetYearDecadeDisplayDimensions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * This,
                  INT32 columns,
                  INT32 rows
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->put_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->get_DayOfWeekFormat(This,value) )
    ( (This)->lpVtbl->put_DayOfWeekFormat(This,value) )
    ( (This)->lpVtbl->get_IsGroupLabelVisible(This,value) )
    ( (This)->lpVtbl->put_IsGroupLabelVisible(This,value) )
    ( (This)->lpVtbl->get_DisplayMode(This,value) )
    ( (This)->lpVtbl->put_DisplayMode(This,value) )
    ( (This)->lpVtbl->get_FirstDayOfWeek(This,value) )
    ( (This)->lpVtbl->put_FirstDayOfWeek(This,value) )
    ( (This)->lpVtbl->get_IsOutOfScopeEnabled(This,value) )
    ( (This)->lpVtbl->put_IsOutOfScopeEnabled(This,value) )
    ( (This)->lpVtbl->get_IsTodayHighlighted(This,value) )
    ( (This)->lpVtbl->put_IsTodayHighlighted(This,value) )
    ( (This)->lpVtbl->get_MaxDate(This,value) )
    ( (This)->lpVtbl->put_MaxDate(This,value) )
    ( (This)->lpVtbl->get_MinDate(This,value) )
    ( (This)->lpVtbl->put_MinDate(This,value) )
    ( (This)->lpVtbl->get_NumberOfWeeksInView(This,value) )
    ( (This)->lpVtbl->put_NumberOfWeeksInView(This,value) )
    ( (This)->lpVtbl->get_SelectedDates(This,value) )
    ( (This)->lpVtbl->get_SelectionMode(This,value) )
    ( (This)->lpVtbl->put_SelectionMode(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->get_FocusBorderBrush(This,value) )
    ( (This)->lpVtbl->put_FocusBorderBrush(This,value) )
    ( (This)->lpVtbl->get_SelectedHoverBorderBrush(This,value) )
    ( (This)->lpVtbl->put_SelectedHoverBorderBrush(This,value) )
    ( (This)->lpVtbl->get_SelectedPressedBorderBrush(This,value) )
    ( (This)->lpVtbl->put_SelectedPressedBorderBrush(This,value) )
    ( (This)->lpVtbl->get_SelectedBorderBrush(This,value) )
    ( (This)->lpVtbl->put_SelectedBorderBrush(This,value) )
    ( (This)->lpVtbl->get_HoverBorderBrush(This,value) )
    ( (This)->lpVtbl->put_HoverBorderBrush(This,value) )
    ( (This)->lpVtbl->get_PressedBorderBrush(This,value) )
    ( (This)->lpVtbl->put_PressedBorderBrush(This,value) )
    ( (This)->lpVtbl->get_CalendarItemBorderBrush(This,value) )
    ( (This)->lpVtbl->put_CalendarItemBorderBrush(This,value) )
    ( (This)->lpVtbl->get_OutOfScopeBackground(This,value) )
    ( (This)->lpVtbl->put_OutOfScopeBackground(This,value) )
    ( (This)->lpVtbl->get_CalendarItemBackground(This,value) )
    ( (This)->lpVtbl->put_CalendarItemBackground(This,value) )
    ( (This)->lpVtbl->get_PressedForeground(This,value) )
    ( (This)->lpVtbl->put_PressedForeground(This,value) )
    ( (This)->lpVtbl->get_TodayForeground(This,value) )
    ( (This)->lpVtbl->put_TodayForeground(This,value) )
    ( (This)->lpVtbl->get_BlackoutForeground(This,value) )
    ( (This)->lpVtbl->put_BlackoutForeground(This,value) )
    ( (This)->lpVtbl->get_SelectedForeground(This,value) )
    ( (This)->lpVtbl->put_SelectedForeground(This,value) )
    ( (This)->lpVtbl->get_OutOfScopeForeground(This,value) )
    ( (This)->lpVtbl->put_OutOfScopeForeground(This,value) )
    ( (This)->lpVtbl->get_CalendarItemForeground(This,value) )
    ( (This)->lpVtbl->put_CalendarItemForeground(This,value) )
    ( (This)->lpVtbl->get_DayItemFontFamily(This,value) )
    ( (This)->lpVtbl->put_DayItemFontFamily(This,value) )
    ( (This)->lpVtbl->get_DayItemFontSize(This,value) )
    ( (This)->lpVtbl->put_DayItemFontSize(This,value) )
    ( (This)->lpVtbl->get_DayItemFontStyle(This,value) )
    ( (This)->lpVtbl->put_DayItemFontStyle(This,value) )
    ( (This)->lpVtbl->get_DayItemFontWeight(This,value) )
    ( (This)->lpVtbl->put_DayItemFontWeight(This,value) )
    ( (This)->lpVtbl->get_TodayFontWeight(This,value) )
    ( (This)->lpVtbl->put_TodayFontWeight(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontFamily(This,value) )
    ( (This)->lpVtbl->put_FirstOfMonthLabelFontFamily(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontSize(This,value) )
    ( (This)->lpVtbl->put_FirstOfMonthLabelFontSize(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontStyle(This,value) )
    ( (This)->lpVtbl->put_FirstOfMonthLabelFontStyle(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontWeight(This,value) )
    ( (This)->lpVtbl->put_FirstOfMonthLabelFontWeight(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontFamily(This,value) )
    ( (This)->lpVtbl->put_MonthYearItemFontFamily(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontSize(This,value) )
    ( (This)->lpVtbl->put_MonthYearItemFontSize(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontStyle(This,value) )
    ( (This)->lpVtbl->put_MonthYearItemFontStyle(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontWeight(This,value) )
    ( (This)->lpVtbl->put_MonthYearItemFontWeight(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontFamily(This,value) )
    ( (This)->lpVtbl->put_FirstOfYearDecadeLabelFontFamily(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontSize(This,value) )
    ( (This)->lpVtbl->put_FirstOfYearDecadeLabelFontSize(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontStyle(This,value) )
    ( (This)->lpVtbl->put_FirstOfYearDecadeLabelFontStyle(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontWeight(This,value) )
    ( (This)->lpVtbl->put_FirstOfYearDecadeLabelFontWeight(This,value) )
    ( (This)->lpVtbl->get_HorizontalDayItemAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalDayItemAlignment(This,value) )
    ( (This)->lpVtbl->get_VerticalDayItemAlignment(This,value) )
    ( (This)->lpVtbl->put_VerticalDayItemAlignment(This,value) )
    ( (This)->lpVtbl->get_HorizontalFirstOfMonthLabelAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalFirstOfMonthLabelAlignment(This,value) )
    ( (This)->lpVtbl->get_VerticalFirstOfMonthLabelAlignment(This,value) )
    ( (This)->lpVtbl->put_VerticalFirstOfMonthLabelAlignment(This,value) )
    ( (This)->lpVtbl->get_CalendarItemBorderThickness(This,value) )
    ( (This)->lpVtbl->put_CalendarItemBorderThickness(This,value) )
    ( (This)->lpVtbl->get_CalendarViewDayItemStyle(This,value) )
    ( (This)->lpVtbl->put_CalendarViewDayItemStyle(This,value) )
    ( (This)->lpVtbl->add_CalendarViewDayItemChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_CalendarViewDayItemChanging(This,token) )
    ( (This)->lpVtbl->add_SelectedDatesChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectedDatesChanged(This,token) )
    ( (This)->lpVtbl->SetDisplayDate(This,date) )
    ( (This)->lpVtbl->SetYearDecadeDisplayDimensions(This,columns,rows) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarViewDayItem[] = L"Windows.UI.Xaml.Controls.ICalendarViewDayItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsBlackout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsBlackout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Date )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
    HRESULT ( STDMETHODCALLTYPE *SetDensityColors )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * This,
                  __RPC__in_opt __FIIterable_1_Windows__CUI__CColor * colors
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsBlackout(This,value) )
    ( (This)->lpVtbl->put_IsBlackout(This,value) )
    ( (This)->lpVtbl->get_Date(This,value) )
    ( (This)->lpVtbl->SetDensityColors(This,colors) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarViewDayItemChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InRecycleQueue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Phase )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                           __RPC__out UINT32 * value
        );
                    HRESULT ( STDMETHODCALLTYPE *RegisterUpdateCallback )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs * callback
        );
                    HRESULT ( STDMETHODCALLTYPE *RegisterUpdateCallbackWithPhase )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs * This,
                  UINT32 callbackPhase,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCalendarView_Windows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs * callback
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InRecycleQueue(This,value) )
    ( (This)->lpVtbl->get_Item(This,value) )
    ( (This)->lpVtbl->get_Phase(This,value) )
    ( (This)->lpVtbl->RegisterUpdateCallback(This,callback) )
    ( (This)->lpVtbl->RegisterUpdateCallbackWithPhase(This,callbackPhase,callback) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarViewDayItemFactory[] = L"Windows.UI.Xaml.Controls.ICalendarViewDayItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarViewDayItemStatics[] = L"Windows.UI.Xaml.Controls.ICalendarViewDayItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsBlackoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsBlackoutProperty(This,value) )
    ( (This)->lpVtbl->get_DateProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarViewFactory[] = L"Windows.UI.Xaml.Controls.ICalendarViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarViewSelectedDatesChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AddedDates )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This,
                           __RPC__deref_out_opt __FIVectorView_1_Windows__CFoundation__CDateTime * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RemovedDates )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs * This,
                           __RPC__deref_out_opt __FIVectorView_1_Windows__CFoundation__CDateTime * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AddedDates(This,value) )
    ( (This)->lpVtbl->get_RemovedDates(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICalendarViewStatics[] = L"Windows.UI.Xaml.Controls.ICalendarViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifierProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayOfWeekFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGroupLabelVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstDayOfWeekProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOutOfScopeEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTodayHighlightedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxDateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinDateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NumberOfWeeksInViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedDatesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettingsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FocusBorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedHoverBorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedPressedBorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedBorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HoverBorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PressedBorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemBorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OutOfScopeBackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemBackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PressedForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TodayForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BlackoutForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OutOfScopeForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayItemFontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TodayFontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfMonthLabelFontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthYearItemFontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstOfYearDecadeLabelFontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalDayItemAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalDayItemAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalFirstOfMonthLabelAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalFirstOfMonthLabelAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarItemBorderThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarViewDayItemStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CalendarIdentifierProperty(This,value) )
    ( (This)->lpVtbl->get_DayOfWeekFormatProperty(This,value) )
    ( (This)->lpVtbl->get_IsGroupLabelVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_DisplayModeProperty(This,value) )
    ( (This)->lpVtbl->get_FirstDayOfWeekProperty(This,value) )
    ( (This)->lpVtbl->get_IsOutOfScopeEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsTodayHighlightedProperty(This,value) )
    ( (This)->lpVtbl->get_MaxDateProperty(This,value) )
    ( (This)->lpVtbl->get_MinDateProperty(This,value) )
    ( (This)->lpVtbl->get_NumberOfWeeksInViewProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedDatesProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionModeProperty(This,value) )
    ( (This)->lpVtbl->get_TemplateSettingsProperty(This,value) )
    ( (This)->lpVtbl->get_FocusBorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedHoverBorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedPressedBorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedBorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_HoverBorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_PressedBorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarItemBorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_OutOfScopeBackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarItemBackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_PressedForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_TodayForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_BlackoutForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_OutOfScopeForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarItemForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_DayItemFontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_DayItemFontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_DayItemFontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_DayItemFontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_TodayFontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfMonthLabelFontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_MonthYearItemFontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_FirstOfYearDecadeLabelFontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalDayItemAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalDayItemAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalFirstOfMonthLabelAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalFirstOfMonthLabelAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarItemBorderThicknessProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarViewDayItemStyleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICandidateWindowBoundsChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CRect * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Bounds(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICanvas[] = L"Windows.UI.Xaml.Controls.ICanvas";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvas;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICanvasFactory[] = L"Windows.UI.Xaml.Controls.ICanvasFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICanvasStatics[] = L"Windows.UI.Xaml.Controls.ICanvasStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LeftProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out DOUBLE * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  DOUBLE length
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetTop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out DOUBLE * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetTop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  DOUBLE length
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LeftProperty(This,value) )
    ( (This)->lpVtbl->GetLeft(This,element,result) )
    ( (This)->lpVtbl->SetLeft(This,element,length) )
    ( (This)->lpVtbl->get_TopProperty(This,value) )
    ( (This)->lpVtbl->GetTop(This,element,result) )
    ( (This)->lpVtbl->SetTop(This,element,length) )
    ( (This)->lpVtbl->get_ZIndexProperty(This,value) )
    ( (This)->lpVtbl->GetZIndex(This,element,result) )
    ( (This)->lpVtbl->SetZIndex(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICaptureElement[] = L"Windows.UI.Xaml.Controls.ICaptureElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Source(This,value) )
    ( (This)->lpVtbl->put_Source(This,value) )
    ( (This)->lpVtbl->get_Stretch(This,value) )
    ( (This)->lpVtbl->put_Stretch(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICaptureElementStatics[] = L"Windows.UI.Xaml.Controls.ICaptureElementStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SourceProperty(This,value) )
    ( (This)->lpVtbl->get_StretchProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICheckBox[] = L"Windows.UI.Xaml.Controls.ICheckBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICheckBoxFactory[] = L"Windows.UI.Xaml.Controls.ICheckBoxFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IChoosingGroupHeaderContainerEventArgs[] = L"Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GroupHeaderContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Group )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GroupHeaderContainer(This,value) )
    ( (This)->lpVtbl->put_GroupHeaderContainer(This,value) )
    ( (This)->lpVtbl->get_GroupIndex(This,value) )
    ( (This)->lpVtbl->get_Group(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IChoosingItemContainerEventArgs[] = L"Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsContainerPrepared )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsContainerPrepared )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemIndex(This,value) )
    ( (This)->lpVtbl->get_Item(This,value) )
    ( (This)->lpVtbl->get_ItemContainer(This,value) )
    ( (This)->lpVtbl->put_ItemContainer(This,value) )
    ( (This)->lpVtbl->get_IsContainerPrepared(This,value) )
    ( (This)->lpVtbl->put_IsContainerPrepared(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICleanUpVirtualizedItemEventArgs[] = L"Windows.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Value )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_UIElement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Value(This,value) )
    ( (This)->lpVtbl->get_UIElement(This,value) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColorChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IColorChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldColor(This,value) )
    ( (This)->lpVtbl->get_NewColor(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColorPicker[] = L"Windows.UI.Xaml.Controls.IColorPicker";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Color )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Color )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  __x_ABI_CWindows_CUI_CColor value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreviousColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CUI__CColor * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PreviousColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  __RPC__in_opt __FIReference_1_Windows__CUI__CColor * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAlphaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsAlphaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorSpectrumVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorSpectrumVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorPreviewVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorPreviewVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorSliderVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorSliderVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAlphaSliderVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsAlphaSliderVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsMoreButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsMoreButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorChannelTextInputVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorChannelTextInputVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAlphaTextInputVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsAlphaTextInputVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHexInputVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHexInputVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinHue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinHue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxHue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxHue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinSaturation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinSaturation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxSaturation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxSaturation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColorSpectrumShape )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ColorSpectrumShape )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColorSpectrumComponents )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ColorSpectrumComponents )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ColorChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CColorPicker_Windows__CUI__CXaml__CControls__CColorChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ColorChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Color(This,value) )
    ( (This)->lpVtbl->put_Color(This,value) )
    ( (This)->lpVtbl->get_PreviousColor(This,value) )
    ( (This)->lpVtbl->put_PreviousColor(This,value) )
    ( (This)->lpVtbl->get_IsAlphaEnabled(This,value) )
    ( (This)->lpVtbl->put_IsAlphaEnabled(This,value) )
    ( (This)->lpVtbl->get_IsColorSpectrumVisible(This,value) )
    ( (This)->lpVtbl->put_IsColorSpectrumVisible(This,value) )
    ( (This)->lpVtbl->get_IsColorPreviewVisible(This,value) )
    ( (This)->lpVtbl->put_IsColorPreviewVisible(This,value) )
    ( (This)->lpVtbl->get_IsColorSliderVisible(This,value) )
    ( (This)->lpVtbl->put_IsColorSliderVisible(This,value) )
    ( (This)->lpVtbl->get_IsAlphaSliderVisible(This,value) )
    ( (This)->lpVtbl->put_IsAlphaSliderVisible(This,value) )
    ( (This)->lpVtbl->get_IsMoreButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsMoreButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsColorChannelTextInputVisible(This,value) )
    ( (This)->lpVtbl->put_IsColorChannelTextInputVisible(This,value) )
    ( (This)->lpVtbl->get_IsAlphaTextInputVisible(This,value) )
    ( (This)->lpVtbl->put_IsAlphaTextInputVisible(This,value) )
    ( (This)->lpVtbl->get_IsHexInputVisible(This,value) )
    ( (This)->lpVtbl->put_IsHexInputVisible(This,value) )
    ( (This)->lpVtbl->get_MinHue(This,value) )
    ( (This)->lpVtbl->put_MinHue(This,value) )
    ( (This)->lpVtbl->get_MaxHue(This,value) )
    ( (This)->lpVtbl->put_MaxHue(This,value) )
    ( (This)->lpVtbl->get_MinSaturation(This,value) )
    ( (This)->lpVtbl->put_MinSaturation(This,value) )
    ( (This)->lpVtbl->get_MaxSaturation(This,value) )
    ( (This)->lpVtbl->put_MaxSaturation(This,value) )
    ( (This)->lpVtbl->get_MinValue(This,value) )
    ( (This)->lpVtbl->put_MinValue(This,value) )
    ( (This)->lpVtbl->get_MaxValue(This,value) )
    ( (This)->lpVtbl->put_MaxValue(This,value) )
    ( (This)->lpVtbl->get_ColorSpectrumShape(This,value) )
    ( (This)->lpVtbl->put_ColorSpectrumShape(This,value) )
    ( (This)->lpVtbl->get_ColorSpectrumComponents(This,value) )
    ( (This)->lpVtbl->put_ColorSpectrumComponents(This,value) )
    ( (This)->lpVtbl->add_ColorChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ColorChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColorPickerFactory[] = L"Windows.UI.Xaml.Controls.IColorPickerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColorPickerStatics[] = L"Windows.UI.Xaml.Controls.IColorPickerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreviousColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAlphaEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorSpectrumVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorPreviewVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorSliderVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAlphaSliderVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsMoreButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorChannelTextInputVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAlphaTextInputVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHexInputVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinHueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxHueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinSaturationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxSaturationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinValueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxValueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColorSpectrumShapeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColorSpectrumComponentsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ColorProperty(This,value) )
    ( (This)->lpVtbl->get_PreviousColorProperty(This,value) )
    ( (This)->lpVtbl->get_IsAlphaEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorSpectrumVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorPreviewVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorSliderVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsAlphaSliderVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsMoreButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorChannelTextInputVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsAlphaTextInputVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsHexInputVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_MinHueProperty(This,value) )
    ( (This)->lpVtbl->get_MaxHueProperty(This,value) )
    ( (This)->lpVtbl->get_MinSaturationProperty(This,value) )
    ( (This)->lpVtbl->get_MaxSaturationProperty(This,value) )
    ( (This)->lpVtbl->get_MinValueProperty(This,value) )
    ( (This)->lpVtbl->get_MaxValueProperty(This,value) )
    ( (This)->lpVtbl->get_ColorSpectrumShapeProperty(This,value) )
    ( (This)->lpVtbl->get_ColorSpectrumComponentsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColumnDefinition[] = L"Windows.UI.Xaml.Controls.IColumnDefinition";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Width )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Width )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                  __x_ABI_CWindows_CUI_CXaml_CGridLength value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ActualWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
                           __RPC__out DOUBLE * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Width(This,value) )
    ( (This)->lpVtbl->put_Width(This,value) )
    ( (This)->lpVtbl->get_MaxWidth(This,value) )
    ( (This)->lpVtbl->put_MaxWidth(This,value) )
    ( (This)->lpVtbl->get_MinWidth(This,value) )
    ( (This)->lpVtbl->put_MinWidth(This,value) )
    ( (This)->lpVtbl->get_ActualWidth(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColumnDefinitionStatics[] = L"Windows.UI.Xaml.Controls.IColumnDefinitionStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_WidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_WidthProperty(This,value) )
    ( (This)->lpVtbl->get_MaxWidthProperty(This,value) )
    ( (This)->lpVtbl->get_MinWidthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox[] = L"Windows.UI.Xaml.Controls.IComboBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDropDownOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDropDownOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsEditable )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSelectionBoxHighlighted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxDropDownHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxDropDownHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionBoxItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionBoxItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DropDownClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DropDownClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DropDownOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DropDownOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDropDownOpen(This,value) )
    ( (This)->lpVtbl->put_IsDropDownOpen(This,value) )
    ( (This)->lpVtbl->get_IsEditable(This,value) )
    ( (This)->lpVtbl->get_IsSelectionBoxHighlighted(This,value) )
    ( (This)->lpVtbl->get_MaxDropDownHeight(This,value) )
    ( (This)->lpVtbl->put_MaxDropDownHeight(This,value) )
    ( (This)->lpVtbl->get_SelectionBoxItem(This,value) )
    ( (This)->lpVtbl->get_SelectionBoxItemTemplate(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->add_DropDownClosed(This,handler,token) )
    ( (This)->lpVtbl->remove_DropDownClosed(This,token) )
    ( (This)->lpVtbl->add_DropDownOpened(This,handler,token) )
    ( (This)->lpVtbl->remove_DropDownOpened(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox2[] = L"Windows.UI.Xaml.Controls.IComboBox2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_PlaceholderText(This,value) )
    ( (This)->lpVtbl->put_PlaceholderText(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox3[] = L"Windows.UI.Xaml.Controls.IComboBox3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextSearchEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextSearchEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->put_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->get_IsTextSearchEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextSearchEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox4[] = L"Windows.UI.Xaml.Controls.IComboBox4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionChangedTrigger )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionChangedTrigger )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionChangedTrigger(This,value) )
    ( (This)->lpVtbl->put_SelectionChangedTrigger(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox5[] = L"Windows.UI.Xaml.Controls.IComboBox5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PlaceholderForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PlaceholderForeground(This,value) )
    ( (This)->lpVtbl->put_PlaceholderForeground(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox6[] = L"Windows.UI.Xaml.Controls.IComboBox6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *put_IsEditable )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextBoxStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextBoxStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                  __RPC__in_opt IInspectable * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextSubmitted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CComboBox_Windows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextSubmitted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->put_IsEditable(This,value) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->put_Text(This,value) )
    ( (This)->lpVtbl->get_TextBoxStyle(This,value) )
    ( (This)->lpVtbl->put_TextBoxStyle(This,value) )
    ( (This)->lpVtbl->get_Description(This,value) )
    ( (This)->lpVtbl->put_Description(This,value) )
    ( (This)->lpVtbl->add_TextSubmitted(This,handler,token) )
    ( (This)->lpVtbl->remove_TextSubmitted(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxFactory[] = L"Windows.UI.Xaml.Controls.IComboBoxFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxItem[] = L"Windows.UI.Xaml.Controls.IComboBoxItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxItemFactory[] = L"Windows.UI.Xaml.Controls.IComboBoxItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxOverrides[] = L"Windows.UI.Xaml.Controls.IComboBoxOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnDropDownClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
                  __RPC__in_opt IInspectable * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnDropDownOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
                  __RPC__in_opt IInspectable * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnDropDownClosed(This,e) )
    ( (This)->lpVtbl->OnDropDownOpened(This,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDropDownOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxDropDownHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDropDownOpenProperty(This,value) )
    ( (This)->lpVtbl->get_MaxDropDownHeightProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics2[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderTextProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics3[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextSearchEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayModeProperty(This,value) )
    ( (This)->lpVtbl->get_IsTextSearchEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics4[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionChangedTriggerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionChangedTriggerProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics5[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PlaceholderForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PlaceholderForegroundProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics6[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsEditableProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextBoxStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DescriptionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsEditableProperty(This,value) )
    ( (This)->lpVtbl->get_TextProperty(This,value) )
    ( (This)->lpVtbl->get_TextBoxStyleProperty(This,value) )
    ( (This)->lpVtbl->get_DescriptionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxTextSubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBar[] = L"Windows.UI.Xaml.Controls.ICommandBar";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PrimaryCommands )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
                           __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryCommands )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
                           __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PrimaryCommands(This,value) )
    ( (This)->lpVtbl->get_SecondaryCommands(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBar2[] = L"Windows.UI.Xaml.Controls.ICommandBar2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CommandBarOverflowPresenterStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CommandBarOverflowPresenterStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandBarTemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CommandBarOverflowPresenterStyle(This,value) )
    ( (This)->lpVtbl->put_CommandBarOverflowPresenterStyle(This,value) )
    ( (This)->lpVtbl->get_CommandBarTemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBar3[] = L"Windows.UI.Xaml.Controls.ICommandBar3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DefaultLabelPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DefaultLabelPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowButtonVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OverflowButtonVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsDynamicOverflowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDynamicOverflowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DynamicOverflowItemsChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CCommandBar_Windows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DynamicOverflowItemsChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DefaultLabelPosition(This,value) )
    ( (This)->lpVtbl->put_DefaultLabelPosition(This,value) )
    ( (This)->lpVtbl->get_OverflowButtonVisibility(This,value) )
    ( (This)->lpVtbl->put_OverflowButtonVisibility(This,value) )
    ( (This)->lpVtbl->get_IsDynamicOverflowEnabled(This,value) )
    ( (This)->lpVtbl->put_IsDynamicOverflowEnabled(This,value) )
    ( (This)->lpVtbl->add_DynamicOverflowItemsChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_DynamicOverflowItemsChanging(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarElement[] = L"Windows.UI.Xaml.Controls.ICommandBarElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsCompact )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsCompact )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsCompact(This,value) )
    ( (This)->lpVtbl->put_IsCompact(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarElement2[] = L"Windows.UI.Xaml.Controls.ICommandBarElement2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsInOverflow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DynamicOverflowOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DynamicOverflowOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 * This,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsInOverflow(This,value) )
    ( (This)->lpVtbl->get_DynamicOverflowOrder(This,value) )
    ( (This)->lpVtbl->put_DynamicOverflowOrder(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarFactory[] = L"Windows.UI.Xaml.Controls.ICommandBarFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarFlyout[] = L"Windows.UI.Xaml.Controls.ICommandBarFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PrimaryCommands )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This,
                           __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryCommands )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * This,
                           __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PrimaryCommands(This,value) )
    ( (This)->lpVtbl->get_SecondaryCommands(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarFlyoutFactory[] = L"Windows.UI.Xaml.Controls.ICommandBarFlyoutFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarOverflowPresenter[] = L"Windows.UI.Xaml.Controls.ICommandBarOverflowPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarOverflowPresenterFactory[] = L"Windows.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarStatics[] = L"Windows.UI.Xaml.Controls.ICommandBarStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PrimaryCommandsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryCommandsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PrimaryCommandsProperty(This,value) )
    ( (This)->lpVtbl->get_SecondaryCommandsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarStatics2[] = L"Windows.UI.Xaml.Controls.ICommandBarStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CommandBarOverflowPresenterStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CommandBarOverflowPresenterStyleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarStatics3[] = L"Windows.UI.Xaml.Controls.ICommandBarStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DefaultLabelPositionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowButtonVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsDynamicOverflowEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DefaultLabelPositionProperty(This,value) )
    ( (This)->lpVtbl->get_OverflowButtonVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_IsDynamicOverflowEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContainerContentChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InRecycleQueue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Phase )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                           __RPC__out UINT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *RegisterUpdateCallback )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * callback
        );
                    HRESULT ( STDMETHODCALLTYPE *RegisterUpdateCallbackWithPhase )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
                  UINT32 callbackPhase,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * callback
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemContainer(This,value) )
    ( (This)->lpVtbl->get_InRecycleQueue(This,value) )
    ( (This)->lpVtbl->get_ItemIndex(This,value) )
    ( (This)->lpVtbl->get_Item(This,value) )
    ( (This)->lpVtbl->get_Phase(This,value) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
    ( (This)->lpVtbl->RegisterUpdateCallback(This,callback) )
    ( (This)->lpVtbl->RegisterUpdateCallbackWithPhase(This,callbackPhase,callback) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControl[] = L"Windows.UI.Xaml.Controls.IContentControl";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
    ( (This)->lpVtbl->get_ContentTemplate(This,value) )
    ( (This)->lpVtbl->put_ContentTemplate(This,value) )
    ( (This)->lpVtbl->get_ContentTemplateSelector(This,value) )
    ( (This)->lpVtbl->put_ContentTemplateSelector(This,value) )
    ( (This)->lpVtbl->get_ContentTransitions(This,value) )
    ( (This)->lpVtbl->put_ContentTransitions(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControl2[] = L"Windows.UI.Xaml.Controls.IContentControl2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateRoot )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentTemplateRoot(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControlFactory[] = L"Windows.UI.Xaml.Controls.IContentControlFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControlOverrides[] = L"Windows.UI.Xaml.Controls.IContentControlOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnContentChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
                  __RPC__in_opt IInspectable * oldContent,
                  __RPC__in_opt IInspectable * newContent
        );
    HRESULT ( STDMETHODCALLTYPE *OnContentTemplateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * oldContentTemplate,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * newContentTemplate
        );
    HRESULT ( STDMETHODCALLTYPE *OnContentTemplateSelectorChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * oldContentTemplateSelector,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * newContentTemplateSelector
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnContentChanged(This,oldContent,newContent) )
    ( (This)->lpVtbl->OnContentTemplateChanged(This,oldContentTemplate,newContentTemplate) )
    ( (This)->lpVtbl->OnContentTemplateSelectorChanged(This,oldContentTemplateSelector,newContentTemplateSelector) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControlStatics[] = L"Windows.UI.Xaml.Controls.IContentControlStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
    ( (This)->lpVtbl->get_ContentTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_ContentTemplateSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_ContentTransitionsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialog[] = L"Windows.UI.Xaml.Controls.IContentDialog";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TitleTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TitleTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FullSizeDesired )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FullSizeDesired )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PrimaryButtonText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SecondaryButtonText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonCommand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PrimaryButtonCommand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonCommand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SecondaryButtonCommand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonCommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PrimaryButtonCommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonCommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SecondaryButtonCommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPrimaryButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSecondaryButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSecondaryButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Closing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Closing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogClosedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PrimaryButtonClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PrimaryButtonClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SecondaryButtonClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SecondaryButtonClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Hide )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This
        );
                    HRESULT ( STDMETHODCALLTYPE *ShowAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * This,
                           __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Title(This,value) )
    ( (This)->lpVtbl->put_Title(This,value) )
    ( (This)->lpVtbl->get_TitleTemplate(This,value) )
    ( (This)->lpVtbl->put_TitleTemplate(This,value) )
    ( (This)->lpVtbl->get_FullSizeDesired(This,value) )
    ( (This)->lpVtbl->put_FullSizeDesired(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonText(This,value) )
    ( (This)->lpVtbl->put_PrimaryButtonText(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonText(This,value) )
    ( (This)->lpVtbl->put_SecondaryButtonText(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonCommand(This,value) )
    ( (This)->lpVtbl->put_PrimaryButtonCommand(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonCommand(This,value) )
    ( (This)->lpVtbl->put_SecondaryButtonCommand(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonCommandParameter(This,value) )
    ( (This)->lpVtbl->put_PrimaryButtonCommandParameter(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonCommandParameter(This,value) )
    ( (This)->lpVtbl->put_SecondaryButtonCommandParameter(This,value) )
    ( (This)->lpVtbl->get_IsPrimaryButtonEnabled(This,value) )
    ( (This)->lpVtbl->put_IsPrimaryButtonEnabled(This,value) )
    ( (This)->lpVtbl->get_IsSecondaryButtonEnabled(This,value) )
    ( (This)->lpVtbl->put_IsSecondaryButtonEnabled(This,value) )
    ( (This)->lpVtbl->add_Closing(This,handler,token) )
    ( (This)->lpVtbl->remove_Closing(This,token) )
    ( (This)->lpVtbl->add_Closed(This,handler,token) )
    ( (This)->lpVtbl->remove_Closed(This,token) )
    ( (This)->lpVtbl->add_Opened(This,handler,token) )
    ( (This)->lpVtbl->remove_Opened(This,token) )
    ( (This)->lpVtbl->add_PrimaryButtonClick(This,handler,token) )
    ( (This)->lpVtbl->remove_PrimaryButtonClick(This,token) )
    ( (This)->lpVtbl->add_SecondaryButtonClick(This,handler,token) )
    ( (This)->lpVtbl->remove_SecondaryButtonClick(This,token) )
    ( (This)->lpVtbl->Hide(This) )
    ( (This)->lpVtbl->ShowAsync(This,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialog2[] = L"Windows.UI.Xaml.Controls.IContentDialog2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CloseButtonText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CloseButtonText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CloseButtonCommand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CloseButtonCommand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CloseButtonCommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CloseButtonCommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PrimaryButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SecondaryButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CloseButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CloseButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultButton )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DefaultButton )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CloseButtonClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CContentDialog_Windows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CloseButtonClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CloseButtonText(This,value) )
    ( (This)->lpVtbl->put_CloseButtonText(This,value) )
    ( (This)->lpVtbl->get_CloseButtonCommand(This,value) )
    ( (This)->lpVtbl->put_CloseButtonCommand(This,value) )
    ( (This)->lpVtbl->get_CloseButtonCommandParameter(This,value) )
    ( (This)->lpVtbl->put_CloseButtonCommandParameter(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonStyle(This,value) )
    ( (This)->lpVtbl->put_PrimaryButtonStyle(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonStyle(This,value) )
    ( (This)->lpVtbl->put_SecondaryButtonStyle(This,value) )
    ( (This)->lpVtbl->get_CloseButtonStyle(This,value) )
    ( (This)->lpVtbl->put_CloseButtonStyle(This,value) )
    ( (This)->lpVtbl->get_DefaultButton(This,value) )
    ( (This)->lpVtbl->put_DefaultButton(This,value) )
    ( (This)->lpVtbl->add_CloseButtonClick(This,handler,token) )
    ( (This)->lpVtbl->remove_CloseButtonClick(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialog3[] = L"Windows.UI.Xaml.Controls.IContentDialog3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *ShowAsyncWithPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement placement,
                           __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CContentDialogResult * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->ShowAsyncWithPlacement(This,placement,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogButtonClickDeferral[] = L"Windows.UI.Xaml.Controls.IContentDialogButtonClickDeferral";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferralVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Complete )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferralVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferralVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->Complete(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogButtonClickEventArgs[] = L"Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This,
                  boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
    ( (This)->lpVtbl->GetDeferral(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogClosedEventArgs[] = L"Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Result )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Result(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogClosingDeferral[] = L"Windows.UI.Xaml.Controls.IContentDialogClosingDeferral";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferralVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Complete )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferralVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferralVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->Complete(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogClosingEventArgs[] = L"Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Result )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
                  boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Result(This,value) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
    ( (This)->lpVtbl->GetDeferral(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogFactory[] = L"Windows.UI.Xaml.Controls.IContentDialogFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogOpenedEventArgs[] = L"Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogStatics[] = L"Windows.UI.Xaml.Controls.IContentDialogStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TitleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TitleTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FullSizeDesiredProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonCommandProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonCommandProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonCommandParameterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonCommandParameterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryButtonEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSecondaryButtonEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TitleProperty(This,value) )
    ( (This)->lpVtbl->get_TitleTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_FullSizeDesiredProperty(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonTextProperty(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonTextProperty(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonCommandProperty(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonCommandProperty(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonCommandParameterProperty(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonCommandParameterProperty(This,value) )
    ( (This)->lpVtbl->get_IsPrimaryButtonEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsSecondaryButtonEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentDialogStatics2[] = L"Windows.UI.Xaml.Controls.IContentDialogStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CloseButtonTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CloseButtonCommandProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CloseButtonCommandParameterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PrimaryButtonStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryButtonStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CloseButtonStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultButtonProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CloseButtonTextProperty(This,value) )
    ( (This)->lpVtbl->get_CloseButtonCommandProperty(This,value) )
    ( (This)->lpVtbl->get_CloseButtonCommandParameterProperty(This,value) )
    ( (This)->lpVtbl->get_PrimaryButtonStyleProperty(This,value) )
    ( (This)->lpVtbl->get_SecondaryButtonStyleProperty(This,value) )
    ( (This)->lpVtbl->get_CloseButtonStyleProperty(This,value) )
    ( (This)->lpVtbl->get_DefaultButtonProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentLinkChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ChangeKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentLinkInfo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CText_CIContentLinkInfo * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextRange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ChangeKind(This,value) )
    ( (This)->lpVtbl->get_ContentLinkInfo(This,value) )
    ( (This)->lpVtbl->get_TextRange(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenter[] = L"Windows.UI.Xaml.Controls.IContentPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __x_ABI_CWindows_CUI_CText_CFontStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
    ( (This)->lpVtbl->get_ContentTemplate(This,value) )
    ( (This)->lpVtbl->put_ContentTemplate(This,value) )
    ( (This)->lpVtbl->get_ContentTemplateSelector(This,value) )
    ( (This)->lpVtbl->put_ContentTemplateSelector(This,value) )
    ( (This)->lpVtbl->get_ContentTransitions(This,value) )
    ( (This)->lpVtbl->put_ContentTransitions(This,value) )
    ( (This)->lpVtbl->get_FontSize(This,value) )
    ( (This)->lpVtbl->put_FontSize(This,value) )
    ( (This)->lpVtbl->get_FontFamily(This,value) )
    ( (This)->lpVtbl->put_FontFamily(This,value) )
    ( (This)->lpVtbl->get_FontWeight(This,value) )
    ( (This)->lpVtbl->put_FontWeight(This,value) )
    ( (This)->lpVtbl->get_FontStyle(This,value) )
    ( (This)->lpVtbl->put_FontStyle(This,value) )
    ( (This)->lpVtbl->get_FontStretch(This,value) )
    ( (This)->lpVtbl->put_FontStretch(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->put_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->get_Foreground(This,value) )
    ( (This)->lpVtbl->put_Foreground(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenter2[] = L"Windows.UI.Xaml.Controls.IContentPresenter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OpticalMarginAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
                  __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextLineBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextLineBounds * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextLineBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OpticalMarginAlignment(This,value) )
    ( (This)->lpVtbl->put_OpticalMarginAlignment(This,value) )
    ( (This)->lpVtbl->get_TextLineBounds(This,value) )
    ( (This)->lpVtbl->put_TextLineBounds(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenter3[] = L"Windows.UI.Xaml.Controls.IContentPresenter3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextScaleFactorEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenter4[] = L"Windows.UI.Xaml.Controls.IContentPresenter4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextWrapping value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategy )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LineStackingStrategy )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LineHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CCornerRadius value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextWrapping(This,value) )
    ( (This)->lpVtbl->put_TextWrapping(This,value) )
    ( (This)->lpVtbl->get_MaxLines(This,value) )
    ( (This)->lpVtbl->put_MaxLines(This,value) )
    ( (This)->lpVtbl->get_LineStackingStrategy(This,value) )
    ( (This)->lpVtbl->put_LineStackingStrategy(This,value) )
    ( (This)->lpVtbl->get_LineHeight(This,value) )
    ( (This)->lpVtbl->put_LineHeight(This,value) )
    ( (This)->lpVtbl->get_BorderBrush(This,value) )
    ( (This)->lpVtbl->put_BorderBrush(This,value) )
    ( (This)->lpVtbl->get_BorderThickness(This,value) )
    ( (This)->lpVtbl->put_BorderThickness(This,value) )
    ( (This)->lpVtbl->get_CornerRadius(This,value) )
    ( (This)->lpVtbl->put_CornerRadius(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
    ( (This)->lpVtbl->get_Background(This,value) )
    ( (This)->lpVtbl->put_Background(This,value) )
    ( (This)->lpVtbl->get_HorizontalContentAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalContentAlignment(This,value) )
    ( (This)->lpVtbl->get_VerticalContentAlignment(This,value) )
    ( (This)->lpVtbl->put_VerticalContentAlignment(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenter5[] = L"Windows.UI.Xaml.Controls.IContentPresenter5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundTransition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIBrushTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundTransition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIBrushTransition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundTransition(This,value) )
    ( (This)->lpVtbl->put_BackgroundTransition(This,value) )
    ( (This)->lpVtbl->get_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->put_BackgroundSizing(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterFactory[] = L"Windows.UI.Xaml.Controls.IContentPresenterFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterOverrides[] = L"Windows.UI.Xaml.Controls.IContentPresenterOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnContentTemplateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * oldContentTemplate,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * newContentTemplate
        );
    HRESULT ( STDMETHODCALLTYPE *OnContentTemplateSelectorChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * oldContentTemplateSelector,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * newContentTemplateSelector
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnContentTemplateChanged(This,oldContentTemplate,newContentTemplate) )
    ( (This)->lpVtbl->OnContentTemplateSelectorChanged(This,oldContentTemplateSelector,newContentTemplateSelector) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterStatics[] = L"Windows.UI.Xaml.Controls.IContentPresenterStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
    ( (This)->lpVtbl->get_ContentTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_ContentTemplateSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_ContentTransitionsProperty(This,value) )
    ( (This)->lpVtbl->get_FontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_FontStretchProperty(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacingProperty(This,value) )
    ( (This)->lpVtbl->get_ForegroundProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterStatics2[] = L"Windows.UI.Xaml.Controls.IContentPresenterStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextLineBoundsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OpticalMarginAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_TextLineBoundsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterStatics3[] = L"Windows.UI.Xaml.Controls.IContentPresenterStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterStatics4[] = L"Windows.UI.Xaml.Controls.IContentPresenterStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLinesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadiusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalContentAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalContentAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextWrappingProperty(This,value) )
    ( (This)->lpVtbl->get_MaxLinesProperty(This,value) )
    ( (This)->lpVtbl->get_LineStackingStrategyProperty(This,value) )
    ( (This)->lpVtbl->get_LineHeightProperty(This,value) )
    ( (This)->lpVtbl->get_BorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_BorderThicknessProperty(This,value) )
    ( (This)->lpVtbl->get_CornerRadiusProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
    ( (This)->lpVtbl->get_BackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalContentAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalContentAlignmentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterStatics5[] = L"Windows.UI.Xaml.Controls.IContentPresenterStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContextMenuEventArgs[] = L"Windows.UI.Xaml.Controls.IContextMenuEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CursorLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CursorTop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
                           __RPC__out DOUBLE * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
    ( (This)->lpVtbl->get_CursorLeft(This,value) )
    ( (This)->lpVtbl->get_CursorTop(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControl[] = L"Windows.UI.Xaml.Controls.IControl";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CText_CFontStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTabStop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTabStop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TabIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TabIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TabNavigation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TabNavigation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Template )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Template )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalContentAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FocusState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CFocusState * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_IsEnabledChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_IsEnabledChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *ApplyTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *Focus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
                  __x_ABI_CWindows_CUI_CXaml_CFocusState value,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FontSize(This,value) )
    ( (This)->lpVtbl->put_FontSize(This,value) )
    ( (This)->lpVtbl->get_FontFamily(This,value) )
    ( (This)->lpVtbl->put_FontFamily(This,value) )
    ( (This)->lpVtbl->get_FontWeight(This,value) )
    ( (This)->lpVtbl->put_FontWeight(This,value) )
    ( (This)->lpVtbl->get_FontStyle(This,value) )
    ( (This)->lpVtbl->put_FontStyle(This,value) )
    ( (This)->lpVtbl->get_FontStretch(This,value) )
    ( (This)->lpVtbl->put_FontStretch(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->put_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->get_Foreground(This,value) )
    ( (This)->lpVtbl->put_Foreground(This,value) )
    ( (This)->lpVtbl->get_IsTabStop(This,value) )
    ( (This)->lpVtbl->put_IsTabStop(This,value) )
    ( (This)->lpVtbl->get_IsEnabled(This,value) )
    ( (This)->lpVtbl->put_IsEnabled(This,value) )
    ( (This)->lpVtbl->get_TabIndex(This,value) )
    ( (This)->lpVtbl->put_TabIndex(This,value) )
    ( (This)->lpVtbl->get_TabNavigation(This,value) )
    ( (This)->lpVtbl->put_TabNavigation(This,value) )
    ( (This)->lpVtbl->get_Template(This,value) )
    ( (This)->lpVtbl->put_Template(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
    ( (This)->lpVtbl->get_HorizontalContentAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalContentAlignment(This,value) )
    ( (This)->lpVtbl->get_VerticalContentAlignment(This,value) )
    ( (This)->lpVtbl->put_VerticalContentAlignment(This,value) )
    ( (This)->lpVtbl->get_Background(This,value) )
    ( (This)->lpVtbl->put_Background(This,value) )
    ( (This)->lpVtbl->get_BorderThickness(This,value) )
    ( (This)->lpVtbl->put_BorderThickness(This,value) )
    ( (This)->lpVtbl->get_BorderBrush(This,value) )
    ( (This)->lpVtbl->put_BorderBrush(This,value) )
    ( (This)->lpVtbl->get_FocusState(This,value) )
    ( (This)->lpVtbl->add_IsEnabledChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_IsEnabledChanged(This,token) )
    ( (This)->lpVtbl->ApplyTemplate(This,result) )
    ( (This)->lpVtbl->Focus(This,value,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControl2[] = L"Windows.UI.Xaml.Controls.IControl2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextScaleFactorEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControl3[] = L"Windows.UI.Xaml.Controls.IControl3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UseSystemFocusVisuals )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_UseSystemFocusVisuals )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UseSystemFocusVisuals(This,value) )
    ( (This)->lpVtbl->put_UseSystemFocusVisuals(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControl4[] = L"Windows.UI.Xaml.Controls.IControl4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsFocusEngagementEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFocusEngagementEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFocusEngaged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFocusEngaged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RequiresPointer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_RequiresPointer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusRight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusRight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ElementSoundMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CElementSoundMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ElementSoundMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CElementSoundMode value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_FocusEngaged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusEngagedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_FocusEngaged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_FocusDisengaged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CControl_Windows__CUI__CXaml__CControls__CFocusDisengagedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_FocusDisengaged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveFocusEngagement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsFocusEngagementEnabled(This,value) )
    ( (This)->lpVtbl->put_IsFocusEngagementEnabled(This,value) )
    ( (This)->lpVtbl->get_IsFocusEngaged(This,value) )
    ( (This)->lpVtbl->put_IsFocusEngaged(This,value) )
    ( (This)->lpVtbl->get_RequiresPointer(This,value) )
    ( (This)->lpVtbl->put_RequiresPointer(This,value) )
    ( (This)->lpVtbl->get_XYFocusLeft(This,value) )
    ( (This)->lpVtbl->put_XYFocusLeft(This,value) )
    ( (This)->lpVtbl->get_XYFocusRight(This,value) )
    ( (This)->lpVtbl->put_XYFocusRight(This,value) )
    ( (This)->lpVtbl->get_XYFocusUp(This,value) )
    ( (This)->lpVtbl->put_XYFocusUp(This,value) )
    ( (This)->lpVtbl->get_XYFocusDown(This,value) )
    ( (This)->lpVtbl->put_XYFocusDown(This,value) )
    ( (This)->lpVtbl->get_ElementSoundMode(This,value) )
    ( (This)->lpVtbl->put_ElementSoundMode(This,value) )
    ( (This)->lpVtbl->add_FocusEngaged(This,handler,token) )
    ( (This)->lpVtbl->remove_FocusEngaged(This,token) )
    ( (This)->lpVtbl->add_FocusDisengaged(This,handler,token) )
    ( (This)->lpVtbl->remove_FocusDisengaged(This,token) )
    ( (This)->lpVtbl->RemoveFocusEngagement(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControl5[] = L"Windows.UI.Xaml.Controls.IControl5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DefaultStyleResourceUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DefaultStyleResourceUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DefaultStyleResourceUri(This,value) )
    ( (This)->lpVtbl->put_DefaultStyleResourceUri(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControl7[] = L"Windows.UI.Xaml.Controls.IControl7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 * This,
                  __x_ABI_CWindows_CUI_CXaml_CCornerRadius value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->put_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->get_CornerRadius(This,value) )
    ( (This)->lpVtbl->put_CornerRadius(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlFactory[] = L"Windows.UI.Xaml.Controls.IControlFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlOverrides[] = L"Windows.UI.Xaml.Controls.IControlOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnPointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPointerPressed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPointerMoved )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPointerReleased )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPointerCaptureLost )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPointerCanceled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPointerWheelChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnDoubleTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnHolding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnRightTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnManipulationStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnManipulationInertiaStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnManipulationStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnManipulationDelta )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnManipulationCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnKeyUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnKeyDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnGotFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnLostFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnDragEnter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnDragLeave )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnDragOver )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnDrop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnPointerEntered(This,e) )
    ( (This)->lpVtbl->OnPointerPressed(This,e) )
    ( (This)->lpVtbl->OnPointerMoved(This,e) )
    ( (This)->lpVtbl->OnPointerReleased(This,e) )
    ( (This)->lpVtbl->OnPointerExited(This,e) )
    ( (This)->lpVtbl->OnPointerCaptureLost(This,e) )
    ( (This)->lpVtbl->OnPointerCanceled(This,e) )
    ( (This)->lpVtbl->OnPointerWheelChanged(This,e) )
    ( (This)->lpVtbl->OnTapped(This,e) )
    ( (This)->lpVtbl->OnDoubleTapped(This,e) )
    ( (This)->lpVtbl->OnHolding(This,e) )
    ( (This)->lpVtbl->OnRightTapped(This,e) )
    ( (This)->lpVtbl->OnManipulationStarting(This,e) )
    ( (This)->lpVtbl->OnManipulationInertiaStarting(This,e) )
    ( (This)->lpVtbl->OnManipulationStarted(This,e) )
    ( (This)->lpVtbl->OnManipulationDelta(This,e) )
    ( (This)->lpVtbl->OnManipulationCompleted(This,e) )
    ( (This)->lpVtbl->OnKeyUp(This,e) )
    ( (This)->lpVtbl->OnKeyDown(This,e) )
    ( (This)->lpVtbl->OnGotFocus(This,e) )
    ( (This)->lpVtbl->OnLostFocus(This,e) )
    ( (This)->lpVtbl->OnDragEnter(This,e) )
    ( (This)->lpVtbl->OnDragLeave(This,e) )
    ( (This)->lpVtbl->OnDragOver(This,e) )
    ( (This)->lpVtbl->OnDrop(This,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlOverrides6[] = L"Windows.UI.Xaml.Controls.IControlOverrides6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnPreviewKeyDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnPreviewKeyUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnCharacterReceived )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnPreviewKeyDown(This,e) )
    ( (This)->lpVtbl->OnPreviewKeyUp(This,e) )
    ( (This)->lpVtbl->OnCharacterReceived(This,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlProtected[] = L"Windows.UI.Xaml.Controls.IControlProtected";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DefaultStyleKey )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DefaultStyleKey )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
                  __RPC__in_opt IInspectable * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetTemplateChild )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
                  __RPC__in HSTRING childName,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DefaultStyleKey(This,value) )
    ( (This)->lpVtbl->put_DefaultStyleKey(This,value) )
    ( (This)->lpVtbl->GetTemplateChild(This,childName,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlStatics[] = L"Windows.UI.Xaml.Controls.IControlStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTabStopProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TabIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TabNavigationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalContentAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalContentAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultStyleKeyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FocusStateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_FontStretchProperty(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacingProperty(This,value) )
    ( (This)->lpVtbl->get_ForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_IsTabStopProperty(This,value) )
    ( (This)->lpVtbl->get_IsEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_TabIndexProperty(This,value) )
    ( (This)->lpVtbl->get_TabNavigationProperty(This,value) )
    ( (This)->lpVtbl->get_TemplateProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalContentAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalContentAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_BackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_BorderThicknessProperty(This,value) )
    ( (This)->lpVtbl->get_BorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_DefaultStyleKeyProperty(This,value) )
    ( (This)->lpVtbl->get_FocusStateProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlStatics2[] = L"Windows.UI.Xaml.Controls.IControlStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlStatics3[] = L"Windows.UI.Xaml.Controls.IControlStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UseSystemFocusVisualsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTemplateFocusTargetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsTemplateFocusTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsTemplateFocusTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UseSystemFocusVisualsProperty(This,value) )
    ( (This)->lpVtbl->get_IsTemplateFocusTargetProperty(This,value) )
    ( (This)->lpVtbl->GetIsTemplateFocusTarget(This,element,result) )
    ( (This)->lpVtbl->SetIsTemplateFocusTarget(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlStatics4[] = L"Windows.UI.Xaml.Controls.IControlStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsFocusEngagementEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFocusEngagedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RequiresPointerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeftProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusRightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusUpProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusDownProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ElementSoundModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsFocusEngagementEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsFocusEngagedProperty(This,value) )
    ( (This)->lpVtbl->get_RequiresPointerProperty(This,value) )
    ( (This)->lpVtbl->get_XYFocusLeftProperty(This,value) )
    ( (This)->lpVtbl->get_XYFocusRightProperty(This,value) )
    ( (This)->lpVtbl->get_XYFocusUpProperty(This,value) )
    ( (This)->lpVtbl->get_XYFocusDownProperty(This,value) )
    ( (This)->lpVtbl->get_ElementSoundModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlStatics5[] = L"Windows.UI.Xaml.Controls.IControlStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DefaultStyleResourceUriProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTemplateKeyTipTargetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsTemplateKeyTipTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsTemplateKeyTipTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DefaultStyleResourceUriProperty(This,value) )
    ( (This)->lpVtbl->get_IsTemplateKeyTipTargetProperty(This,value) )
    ( (This)->lpVtbl->GetIsTemplateKeyTipTarget(This,element,result) )
    ( (This)->lpVtbl->SetIsTemplateKeyTipTarget(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlStatics7[] = L"Windows.UI.Xaml.Controls.IControlStatics7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadiusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizingProperty(This,value) )
    ( (This)->lpVtbl->get_CornerRadiusProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlTemplate[] = L"Windows.UI.Xaml.Controls.IControlTemplate";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TargetType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TargetType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
                  __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TargetType(This,value) )
    ( (This)->lpVtbl->put_TargetType(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelector[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelector";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SelectTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
                  __RPC__in_opt IInspectable * item,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectTemplate(This,item,container,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelector2[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelector2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *SelectTemplateForItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectTemplateForItem(This,item,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelectorFactory[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelectorOverrides[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SelectTemplateCore )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
                  __RPC__in_opt IInspectable * item,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectTemplateCore(This,item,container,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelectorOverrides2[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *SelectTemplateForItemCore )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectTemplateForItemCore(This,item,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickedEventArgs[] = L"Windows.UI.Xaml.Controls.IDatePickedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldDate(This,value) )
    ( (This)->lpVtbl->get_NewDate(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePicker[] = L"Windows.UI.Xaml.Controls.IDatePicker";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Date )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Date )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_YearVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_YearFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->put_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->get_Date(This,value) )
    ( (This)->lpVtbl->put_Date(This,value) )
    ( (This)->lpVtbl->get_DayVisible(This,value) )
    ( (This)->lpVtbl->put_DayVisible(This,value) )
    ( (This)->lpVtbl->get_MonthVisible(This,value) )
    ( (This)->lpVtbl->put_MonthVisible(This,value) )
    ( (This)->lpVtbl->get_YearVisible(This,value) )
    ( (This)->lpVtbl->put_YearVisible(This,value) )
    ( (This)->lpVtbl->get_DayFormat(This,value) )
    ( (This)->lpVtbl->put_DayFormat(This,value) )
    ( (This)->lpVtbl->get_MonthFormat(This,value) )
    ( (This)->lpVtbl->put_MonthFormat(This,value) )
    ( (This)->lpVtbl->get_YearFormat(This,value) )
    ( (This)->lpVtbl->put_YearFormat(This,value) )
    ( (This)->lpVtbl->get_MinYear(This,value) )
    ( (This)->lpVtbl->put_MinYear(This,value) )
    ( (This)->lpVtbl->get_MaxYear(This,value) )
    ( (This)->lpVtbl->put_MaxYear(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->add_DateChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_DateChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePicker2[] = L"Windows.UI.Xaml.Controls.IDatePicker2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->put_LightDismissOverlayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePicker3[] = L"Windows.UI.Xaml.Controls.IDatePicker3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
                  __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectedDateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePicker_Windows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectedDateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedDate(This,value) )
    ( (This)->lpVtbl->put_SelectedDate(This,value) )
    ( (This)->lpVtbl->add_SelectedDateChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectedDateChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFactory[] = L"Windows.UI.Xaml.Controls.IDatePickerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyout[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CalendarIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Date )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Date )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_YearVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxYear )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  __x_ABI_CWindows_CFoundation_CDateTime value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DatePicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CDatePickerFlyout_Windows__CUI__CXaml__CControls__CDatePickedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DatePicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *ShowAtAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * target,
                           __RPC__deref_out_opt __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CDateTime * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->put_CalendarIdentifier(This,value) )
    ( (This)->lpVtbl->get_Date(This,value) )
    ( (This)->lpVtbl->put_Date(This,value) )
    ( (This)->lpVtbl->get_DayVisible(This,value) )
    ( (This)->lpVtbl->put_DayVisible(This,value) )
    ( (This)->lpVtbl->get_MonthVisible(This,value) )
    ( (This)->lpVtbl->put_MonthVisible(This,value) )
    ( (This)->lpVtbl->get_YearVisible(This,value) )
    ( (This)->lpVtbl->put_YearVisible(This,value) )
    ( (This)->lpVtbl->get_MinYear(This,value) )
    ( (This)->lpVtbl->put_MinYear(This,value) )
    ( (This)->lpVtbl->get_MaxYear(This,value) )
    ( (This)->lpVtbl->put_MaxYear(This,value) )
    ( (This)->lpVtbl->add_DatePicked(This,handler,token) )
    ( (This)->lpVtbl->remove_DatePicked(This,token) )
    ( (This)->lpVtbl->ShowAtAsync(This,target,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyout2[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyout2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DayFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DayFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MonthFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_YearFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DayFormat(This,value) )
    ( (This)->lpVtbl->put_DayFormat(This,value) )
    ( (This)->lpVtbl->get_MonthFormat(This,value) )
    ( (This)->lpVtbl->put_MonthFormat(This,value) )
    ( (This)->lpVtbl->get_YearFormat(This,value) )
    ( (This)->lpVtbl->put_YearFormat(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyoutItem[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyoutItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PrimaryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PrimaryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SecondaryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PrimaryText(This,value) )
    ( (This)->lpVtbl->put_PrimaryText(This,value) )
    ( (This)->lpVtbl->get_SecondaryText(This,value) )
    ( (This)->lpVtbl->put_SecondaryText(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyoutItemStatics[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyoutItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PrimaryTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SecondaryTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PrimaryTextProperty(This,value) )
    ( (This)->lpVtbl->get_SecondaryTextProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyoutPresenter2[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabled(This,value) )
    ( (This)->lpVtbl->put_IsDefaultShadowEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyoutPresenterStatics2[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyoutStatics[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifierProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinYearProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxYearProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CalendarIdentifierProperty(This,value) )
    ( (This)->lpVtbl->get_DateProperty(This,value) )
    ( (This)->lpVtbl->get_DayVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_MonthVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_YearVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_MinYearProperty(This,value) )
    ( (This)->lpVtbl->get_MaxYearProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFlyoutStatics2[] = L"Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DayFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DayFormatProperty(This,value) )
    ( (This)->lpVtbl->get_MonthFormatProperty(This,value) )
    ( (This)->lpVtbl->get_YearFormatProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerSelectedValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldDate(This,value) )
    ( (This)->lpVtbl->get_NewDate(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerStatics[] = L"Windows.UI.Xaml.Controls.IDatePickerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifierProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DayFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MonthFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_YearFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinYearProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxYearProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_CalendarIdentifierProperty(This,value) )
    ( (This)->lpVtbl->get_DateProperty(This,value) )
    ( (This)->lpVtbl->get_DayVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_MonthVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_YearVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_DayFormatProperty(This,value) )
    ( (This)->lpVtbl->get_MonthFormatProperty(This,value) )
    ( (This)->lpVtbl->get_YearFormatProperty(This,value) )
    ( (This)->lpVtbl->get_MinYearProperty(This,value) )
    ( (This)->lpVtbl->get_MaxYearProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerStatics2[] = L"Windows.UI.Xaml.Controls.IDatePickerStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerStatics3[] = L"Windows.UI.Xaml.Controls.IDatePickerStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedDateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedDateProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewDate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CDateTime * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldDate(This,value) )
    ( (This)->lpVtbl->get_NewDate(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDragItemsCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This,
                           __RPC__deref_out_opt __FIVectorView_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DropResult )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Items(This,value) )
    ( (This)->lpVtbl->get_DropResult(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDragItemsStartingEventArgs[] = L"Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Data )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
    ( (This)->lpVtbl->get_Items(This,value) )
    ( (This)->lpVtbl->get_Data(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDropDownButton[] = L"Windows.UI.Xaml.Controls.IDropDownButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDropDownButtonAutomationPeer[] = L"Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDropDownButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * owner,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,owner,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDropDownButtonFactory[] = L"Windows.UI.Xaml.Controls.IDropDownButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDynamicOverflowItemsChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Action )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Action(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipView[] = L"Windows.UI.Xaml.Controls.IFlipView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipView2[] = L"Windows.UI.Xaml.Controls.IFlipView2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UseTouchAnimationsForAllNavigation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_UseTouchAnimationsForAllNavigation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UseTouchAnimationsForAllNavigation(This,value) )
    ( (This)->lpVtbl->put_UseTouchAnimationsForAllNavigation(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewFactory[] = L"Windows.UI.Xaml.Controls.IFlipViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewItem[] = L"Windows.UI.Xaml.Controls.IFlipViewItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewItemFactory[] = L"Windows.UI.Xaml.Controls.IFlipViewItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewStatics2[] = L"Windows.UI.Xaml.Controls.IFlipViewStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_UseTouchAnimationsForAllNavigationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_UseTouchAnimationsForAllNavigationProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyout[] = L"Windows.UI.Xaml.Controls.IFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FlyoutPresenterStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FlyoutPresenterStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
    ( (This)->lpVtbl->get_FlyoutPresenterStyle(This,value) )
    ( (This)->lpVtbl->put_FlyoutPresenterStyle(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutFactory[] = L"Windows.UI.Xaml.Controls.IFlyoutFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.IFlyoutPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutPresenter2[] = L"Windows.UI.Xaml.Controls.IFlyoutPresenter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabled(This,value) )
    ( (This)->lpVtbl->put_IsDefaultShadowEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutPresenterFactory[] = L"Windows.UI.Xaml.Controls.IFlyoutPresenterFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutPresenterStatics2[] = L"Windows.UI.Xaml.Controls.IFlyoutPresenterStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutStatics[] = L"Windows.UI.Xaml.Controls.IFlyoutStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FlyoutPresenterStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
    ( (This)->lpVtbl->get_FlyoutPresenterStyleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFocusDisengagedEventArgs[] = L"Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFocusEngagedEventArgs[] = L"Windows.UI.Xaml.Controls.IFocusEngagedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFocusEngagedEventArgs2[] = L"Windows.UI.Xaml.Controls.IFocusEngagedEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIcon[] = L"Windows.UI.Xaml.Controls.IFontIcon";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Glyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Glyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Glyph(This,value) )
    ( (This)->lpVtbl->put_Glyph(This,value) )
    ( (This)->lpVtbl->get_FontSize(This,value) )
    ( (This)->lpVtbl->put_FontSize(This,value) )
    ( (This)->lpVtbl->get_FontFamily(This,value) )
    ( (This)->lpVtbl->put_FontFamily(This,value) )
    ( (This)->lpVtbl->get_FontWeight(This,value) )
    ( (This)->lpVtbl->put_FontWeight(This,value) )
    ( (This)->lpVtbl->get_FontStyle(This,value) )
    ( (This)->lpVtbl->put_FontStyle(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIcon2[] = L"Windows.UI.Xaml.Controls.IFontIcon2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextScaleFactorEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIcon3[] = L"Windows.UI.Xaml.Controls.IFontIcon3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MirroredWhenRightToLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MirroredWhenRightToLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MirroredWhenRightToLeft(This,value) )
    ( (This)->lpVtbl->put_MirroredWhenRightToLeft(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconFactory[] = L"Windows.UI.Xaml.Controls.IFontIconFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconSource[] = L"Windows.UI.Xaml.Controls.IFontIconSource";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Glyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Glyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MirroredWhenRightToLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MirroredWhenRightToLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Glyph(This,value) )
    ( (This)->lpVtbl->put_Glyph(This,value) )
    ( (This)->lpVtbl->get_FontSize(This,value) )
    ( (This)->lpVtbl->put_FontSize(This,value) )
    ( (This)->lpVtbl->get_FontFamily(This,value) )
    ( (This)->lpVtbl->put_FontFamily(This,value) )
    ( (This)->lpVtbl->get_FontWeight(This,value) )
    ( (This)->lpVtbl->put_FontWeight(This,value) )
    ( (This)->lpVtbl->get_FontStyle(This,value) )
    ( (This)->lpVtbl->put_FontStyle(This,value) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextScaleFactorEnabled(This,value) )
    ( (This)->lpVtbl->get_MirroredWhenRightToLeft(This,value) )
    ( (This)->lpVtbl->put_MirroredWhenRightToLeft(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconSourceFactory[] = L"Windows.UI.Xaml.Controls.IFontIconSourceFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconSourceStatics[] = L"Windows.UI.Xaml.Controls.IFontIconSourceStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MirroredWhenRightToLeftProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GlyphProperty(This,value) )
    ( (This)->lpVtbl->get_FontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_MirroredWhenRightToLeftProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconStatics[] = L"Windows.UI.Xaml.Controls.IFontIconStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GlyphProperty(This,value) )
    ( (This)->lpVtbl->get_FontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FontStyleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconStatics2[] = L"Windows.UI.Xaml.Controls.IFontIconStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconStatics3[] = L"Windows.UI.Xaml.Controls.IFontIconStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MirroredWhenRightToLeftProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MirroredWhenRightToLeftProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrame[] = L"Windows.UI.Xaml.Controls.IFrame";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CacheSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CacheSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CurrentSourcePageType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SourcePageType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SourcePageType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackStackDepth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                           __RPC__out INT32 * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Navigated )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Navigated )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Navigating )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Navigating )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_NavigationFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_NavigationFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_NavigationStopped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_NavigationStopped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *GoBack )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This
        );
    HRESULT ( STDMETHODCALLTYPE *GoForward )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This
        );
    HRESULT ( STDMETHODCALLTYPE *Navigate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
                  __RPC__in_opt IInspectable * parameter,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetNavigationState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                           __RPC__deref_out_opt HSTRING * result
        );
                    HRESULT ( STDMETHODCALLTYPE *SetNavigationState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
                  __RPC__in HSTRING navigationState
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CacheSize(This,value) )
    ( (This)->lpVtbl->put_CacheSize(This,value) )
    ( (This)->lpVtbl->get_CanGoBack(This,value) )
    ( (This)->lpVtbl->get_CanGoForward(This,value) )
    ( (This)->lpVtbl->get_CurrentSourcePageType(This,value) )
    ( (This)->lpVtbl->get_SourcePageType(This,value) )
    ( (This)->lpVtbl->put_SourcePageType(This,value) )
    ( (This)->lpVtbl->get_BackStackDepth(This,value) )
    ( (This)->lpVtbl->add_Navigated(This,handler,token) )
    ( (This)->lpVtbl->remove_Navigated(This,token) )
    ( (This)->lpVtbl->add_Navigating(This,handler,token) )
    ( (This)->lpVtbl->remove_Navigating(This,token) )
    ( (This)->lpVtbl->add_NavigationFailed(This,handler,token) )
    ( (This)->lpVtbl->remove_NavigationFailed(This,token) )
    ( (This)->lpVtbl->add_NavigationStopped(This,handler,token) )
    ( (This)->lpVtbl->remove_NavigationStopped(This,token) )
    ( (This)->lpVtbl->GoBack(This) )
    ( (This)->lpVtbl->GoForward(This) )
    ( (This)->lpVtbl->Navigate(This,sourcePageType,parameter,result) )
    ( (This)->lpVtbl->GetNavigationState(This,result) )
    ( (This)->lpVtbl->SetNavigationState(This,navigationState) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrame2[] = L"Windows.UI.Xaml.Controls.IFrame2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackStack )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ForwardStack )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry * * value
        );
    HRESULT ( STDMETHODCALLTYPE *Navigate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
                  __RPC__in_opt IInspectable * parameter,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * infoOverride,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackStack(This,value) )
    ( (This)->lpVtbl->get_ForwardStack(This,value) )
    ( (This)->lpVtbl->Navigate(This,sourcePageType,parameter,infoOverride,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrame3[] = L"Windows.UI.Xaml.Controls.IFrame3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GoBack )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * transitionInfoOverride
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GoBack(This,transitionInfoOverride) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrame4[] = L"Windows.UI.Xaml.Controls.IFrame4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *SetNavigationStateWithNavigationControl )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 * This,
                  __RPC__in HSTRING navigationState,
                  boolean suppressNavigate
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SetNavigationStateWithNavigationControl(This,navigationState,suppressNavigate) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrame5[] = L"Windows.UI.Xaml.Controls.IFrame5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsNavigationStackEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsNavigationStackEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This,
                  boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *NavigateToType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 * This,
                  __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
                  __RPC__in_opt IInspectable * parameter,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions * navigationOptions,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsNavigationStackEnabled(This,value) )
    ( (This)->lpVtbl->put_IsNavigationStackEnabled(This,value) )
    ( (This)->lpVtbl->NavigateToType(This,sourcePageType,parameter,navigationOptions,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrameFactory[] = L"Windows.UI.Xaml.Controls.IFrameFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrameStatics[] = L"Windows.UI.Xaml.Controls.IFrameStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CacheSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanGoBackProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanGoForwardProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CurrentSourcePageTypeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SourcePageTypeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackStackDepthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CacheSizeProperty(This,value) )
    ( (This)->lpVtbl->get_CanGoBackProperty(This,value) )
    ( (This)->lpVtbl->get_CanGoForwardProperty(This,value) )
    ( (This)->lpVtbl->get_CurrentSourcePageTypeProperty(This,value) )
    ( (This)->lpVtbl->get_SourcePageTypeProperty(This,value) )
    ( (This)->lpVtbl->get_BackStackDepthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrameStatics2[] = L"Windows.UI.Xaml.Controls.IFrameStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackStackProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ForwardStackProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackStackProperty(This,value) )
    ( (This)->lpVtbl->get_ForwardStackProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrameStatics5[] = L"Windows.UI.Xaml.Controls.IFrameStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsNavigationStackEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsNavigationStackEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGrid[] = L"Windows.UI.Xaml.Controls.IGrid";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_RowDefinitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColumnDefinitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_RowDefinitions(This,value) )
    ( (This)->lpVtbl->get_ColumnDefinitions(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGrid2[] = L"Windows.UI.Xaml.Controls.IGrid2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CCornerRadius value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BorderBrush(This,value) )
    ( (This)->lpVtbl->put_BorderBrush(This,value) )
    ( (This)->lpVtbl->get_BorderThickness(This,value) )
    ( (This)->lpVtbl->put_BorderThickness(This,value) )
    ( (This)->lpVtbl->get_CornerRadius(This,value) )
    ( (This)->lpVtbl->put_CornerRadius(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGrid3[] = L"Windows.UI.Xaml.Controls.IGrid3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_RowSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_RowSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColumnSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ColumnSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 * This,
                  DOUBLE value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_RowSpacing(This,value) )
    ( (This)->lpVtbl->put_RowSpacing(This,value) )
    ( (This)->lpVtbl->get_ColumnSpacing(This,value) )
    ( (This)->lpVtbl->put_ColumnSpacing(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGrid4[] = L"Windows.UI.Xaml.Controls.IGrid4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->put_BackgroundSizing(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridFactory[] = L"Windows.UI.Xaml.Controls.IGridFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridStatics[] = L"Windows.UI.Xaml.Controls.IGridStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_RowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetRow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetRow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColumnProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetColumn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetColumn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RowSpanProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetRowSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetRowSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColumnSpanProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetColumnSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetColumnSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_RowProperty(This,value) )
    ( (This)->lpVtbl->GetRow(This,element,result) )
    ( (This)->lpVtbl->SetRow(This,element,value) )
    ( (This)->lpVtbl->get_ColumnProperty(This,value) )
    ( (This)->lpVtbl->GetColumn(This,element,result) )
    ( (This)->lpVtbl->SetColumn(This,element,value) )
    ( (This)->lpVtbl->get_RowSpanProperty(This,value) )
    ( (This)->lpVtbl->GetRowSpan(This,element,result) )
    ( (This)->lpVtbl->SetRowSpan(This,element,value) )
    ( (This)->lpVtbl->get_ColumnSpanProperty(This,value) )
    ( (This)->lpVtbl->GetColumnSpan(This,element,result) )
    ( (This)->lpVtbl->SetColumnSpan(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridStatics2[] = L"Windows.UI.Xaml.Controls.IGridStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadiusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_BorderThicknessProperty(This,value) )
    ( (This)->lpVtbl->get_CornerRadiusProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridStatics3[] = L"Windows.UI.Xaml.Controls.IGridStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_RowSpacingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColumnSpacingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_RowSpacingProperty(This,value) )
    ( (This)->lpVtbl->get_ColumnSpacingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridStatics4[] = L"Windows.UI.Xaml.Controls.IGridStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridView[] = L"Windows.UI.Xaml.Controls.IGridView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewFactory[] = L"Windows.UI.Xaml.Controls.IGridViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewHeaderItem[] = L"Windows.UI.Xaml.Controls.IGridViewHeaderItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewHeaderItemFactory[] = L"Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewItem[] = L"Windows.UI.Xaml.Controls.IGridViewItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewItemFactory[] = L"Windows.UI.Xaml.Controls.IGridViewItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupItem[] = L"Windows.UI.Xaml.Controls.IGroupItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupItemFactory[] = L"Windows.UI.Xaml.Controls.IGroupItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyle[] = L"Windows.UI.Xaml.Controls.IGroupStyle";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Panel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Panel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * value
        );
    DEPRECATED("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
                               HRESULT ( STDMETHODCALLTYPE *get_ContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
    DEPRECATED("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
                               HRESULT ( STDMETHODCALLTYPE *put_ContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
    DEPRECATED("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
                               HRESULT ( STDMETHODCALLTYPE *get_ContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * * value
        );
    DEPRECATED("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
                               HRESULT ( STDMETHODCALLTYPE *put_ContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HidesIfEmpty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HidesIfEmpty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Panel(This,value) )
    ( (This)->lpVtbl->put_Panel(This,value) )
DEPRECATED("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
    ( (This)->lpVtbl->get_ContainerStyle(This,value) )
DEPRECATED("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
    ( (This)->lpVtbl->put_ContainerStyle(This,value) )
DEPRECATED("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
    ( (This)->lpVtbl->get_ContainerStyleSelector(This,value) )
DEPRECATED("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.")
    ( (This)->lpVtbl->put_ContainerStyleSelector(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateSelector(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplateSelector(This,value) )
    ( (This)->lpVtbl->get_HidesIfEmpty(This,value) )
    ( (This)->lpVtbl->put_HidesIfEmpty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyle2[] = L"Windows.UI.Xaml.Controls.IGroupStyle2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderContainerStyle(This,value) )
    ( (This)->lpVtbl->put_HeaderContainerStyle(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleFactory[] = L"Windows.UI.Xaml.Controls.IGroupStyleFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleSelector[] = L"Windows.UI.Xaml.Controls.IGroupStyleSelector";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SelectGroupStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
                  __RPC__in_opt IInspectable * group,
                  UINT32 level,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectGroupStyle(This,group,level,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleSelectorFactory[] = L"Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleSelectorOverrides[] = L"Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SelectGroupStyleCore )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
                  __RPC__in_opt IInspectable * group,
                  UINT32 level,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectGroupStyleCore(This,group,level,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHandwritingPanelClosedEventArgs[] = L"Windows.UI.Xaml.Controls.IHandwritingPanelClosedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHandwritingPanelOpenedEventArgs[] = L"Windows.UI.Xaml.Controls.IHandwritingPanelOpenedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHandwritingView[] = L"Windows.UI.Xaml.Controls.IHandwritingView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PlacementTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlacementTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlacementAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlacementAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AreCandidatesEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AreCandidatesEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CHandwritingView_Windows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *TryClose )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * This,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PlacementTarget(This,value) )
    ( (This)->lpVtbl->put_PlacementTarget(This,value) )
    ( (This)->lpVtbl->get_PlacementAlignment(This,value) )
    ( (This)->lpVtbl->put_PlacementAlignment(This,value) )
    ( (This)->lpVtbl->get_IsOpen(This,value) )
    ( (This)->lpVtbl->get_AreCandidatesEnabled(This,value) )
    ( (This)->lpVtbl->put_AreCandidatesEnabled(This,value) )
    ( (This)->lpVtbl->add_Opened(This,handler,token) )
    ( (This)->lpVtbl->remove_Opened(This,token) )
    ( (This)->lpVtbl->add_Closed(This,handler,token) )
    ( (This)->lpVtbl->remove_Closed(This,token) )
    ( (This)->lpVtbl->TryClose(This,result) )
    ( (This)->lpVtbl->TryOpen(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHandwritingViewFactory[] = L"Windows.UI.Xaml.Controls.IHandwritingViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHandwritingViewStatics[] = L"Windows.UI.Xaml.Controls.IHandwritingViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PlacementTargetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlacementAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AreCandidatesEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PlacementTargetProperty(This,value) )
    ( (This)->lpVtbl->get_PlacementAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_IsOpenProperty(This,value) )
    ( (This)->lpVtbl->get_AreCandidatesEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHub[] = L"Windows.UI.Xaml.Controls.IHub";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultSectionIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DefaultSectionIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Sections )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SectionsInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SectionHeaders )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                           __RPC__deref_out_opt __FIObservableVector_1_IInspectable * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SectionHeaderClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SectionHeaderClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SectionsInViewChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SectionsInViewChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *ScrollToSection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * section
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHub
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->get_DefaultSectionIndex(This,value) )
    ( (This)->lpVtbl->put_DefaultSectionIndex(This,value) )
    ( (This)->lpVtbl->get_Sections(This,value) )
    ( (This)->lpVtbl->get_SectionsInView(This,value) )
    ( (This)->lpVtbl->get_SectionHeaders(This,value) )
    ( (This)->lpVtbl->add_SectionHeaderClick(This,handler,token) )
    ( (This)->lpVtbl->remove_SectionHeaderClick(This,token) )
    ( (This)->lpVtbl->add_SectionsInViewChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SectionsInViewChanged(This,token) )
    ( (This)->lpVtbl->ScrollToSection(This,section) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHub;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubFactory[] = L"Windows.UI.Xaml.Controls.IHubFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSection[] = L"Windows.UI.Xaml.Controls.IHubSection";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHeaderInteractive )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHeaderInteractive )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_ContentTemplate(This,value) )
    ( (This)->lpVtbl->put_ContentTemplate(This,value) )
    ( (This)->lpVtbl->get_IsHeaderInteractive(This,value) )
    ( (This)->lpVtbl->put_IsHeaderInteractive(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSectionFactory[] = L"Windows.UI.Xaml.Controls.IHubSectionFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSectionHeaderClickEventArgs[] = L"Windows.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Section )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Section(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSectionStatics[] = L"Windows.UI.Xaml.Controls.IHubSectionStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHeaderInteractiveProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_ContentTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_IsHeaderInteractiveProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubStatics[] = L"Windows.UI.Xaml.Controls.IHubStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultSectionIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SemanticZoomOwnerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsActiveViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_DefaultSectionIndexProperty(This,value) )
    ( (This)->lpVtbl->get_SemanticZoomOwnerProperty(This,value) )
    ( (This)->lpVtbl->get_IsActiveViewProperty(This,value) )
    ( (This)->lpVtbl->get_IsZoomedInViewProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHyperlinkButton[] = L"Windows.UI.Xaml.Controls.IHyperlinkButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_NavigateUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_NavigateUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_NavigateUri(This,value) )
    ( (This)->lpVtbl->put_NavigateUri(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHyperlinkButtonFactory[] = L"Windows.UI.Xaml.Controls.IHyperlinkButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHyperlinkButtonStatics[] = L"Windows.UI.Xaml.Controls.IHyperlinkButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_NavigateUriProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_NavigateUriProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconElement[] = L"Windows.UI.Xaml.Controls.IIconElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Foreground(This,value) )
    ( (This)->lpVtbl->put_Foreground(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconElementFactory[] = L"Windows.UI.Xaml.Controls.IIconElementFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconElementStatics[] = L"Windows.UI.Xaml.Controls.IIconElementStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ForegroundProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconSource[] = L"Windows.UI.Xaml.Controls.IIconSource";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Foreground(This,value) )
    ( (This)->lpVtbl->put_Foreground(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconSourceElement[] = L"Windows.UI.Xaml.Controls.IIconSourceElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IconSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IconSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IconSource(This,value) )
    ( (This)->lpVtbl->put_IconSource(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconSourceElementFactory[] = L"Windows.UI.Xaml.Controls.IIconSourceElementFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconSourceElementStatics[] = L"Windows.UI.Xaml.Controls.IIconSourceElementStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IconSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IconSourceProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconSourceFactory[] = L"Windows.UI.Xaml.Controls.IIconSourceFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconSourceStatics[] = L"Windows.UI.Xaml.Controls.IIconSourceStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ForegroundProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IImage[] = L"Windows.UI.Xaml.Controls.IImage";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NineGrid )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_NineGrid )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
    DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
                               HRESULT ( STDMETHODCALLTYPE *get_PlayToSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ImageFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ImageFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ImageOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ImageOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Source(This,value) )
    ( (This)->lpVtbl->put_Source(This,value) )
    ( (This)->lpVtbl->get_Stretch(This,value) )
    ( (This)->lpVtbl->put_Stretch(This,value) )
    ( (This)->lpVtbl->get_NineGrid(This,value) )
    ( (This)->lpVtbl->put_NineGrid(This,value) )
DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
    ( (This)->lpVtbl->get_PlayToSource(This,value) )
    ( (This)->lpVtbl->add_ImageFailed(This,handler,token) )
    ( (This)->lpVtbl->remove_ImageFailed(This,token) )
    ( (This)->lpVtbl->add_ImageOpened(This,handler,token) )
    ( (This)->lpVtbl->remove_ImageOpened(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImage;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IImage2[] = L"Windows.UI.Xaml.Controls.IImage2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetAsCastingSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCasting_CICastingSource * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetAsCastingSource(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImage2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IImage3[] = L"Windows.UI.Xaml.Controls.IImage3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetAlphaMask )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CComposition_CICompositionBrush * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetAlphaMask(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImage3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IImageStatics[] = L"Windows.UI.Xaml.Controls.IImageStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NineGridProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
                               HRESULT ( STDMETHODCALLTYPE *get_PlayToSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SourceProperty(This,value) )
    ( (This)->lpVtbl->get_StretchProperty(This,value) )
    ( (This)->lpVtbl->get_NineGridProperty(This,value) )
DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
    ( (This)->lpVtbl->get_PlayToSourceProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkCanvas[] = L"Windows.UI.Xaml.Controls.IInkCanvas";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InkPresenter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InkPresenter(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkCanvasFactory[] = L"Windows.UI.Xaml.Controls.IInkCanvasFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbar[] = L"Windows.UI.Xaml.Controls.IInkToolbar";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InitialControls )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_InitialControls )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Children )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                           __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ActiveTool )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ActiveTool )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InkDrawingAttributes )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRulerButtonChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsRulerButtonChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TargetInkCanvas )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TargetInkCanvas )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ActiveToolChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ActiveToolChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_InkDrawingAttributesChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_InkDrawingAttributesChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_EraseAllClicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_EraseAllClicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  EventRegistrationToken token
        );
    DEPRECATED("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.")
                                HRESULT ( STDMETHODCALLTYPE *add_IsRulerButtonCheckedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
    DEPRECATED("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.")
                                   HRESULT ( STDMETHODCALLTYPE *remove_IsRulerButtonCheckedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *GetToolButton )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool tool,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetToggleButton )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle tool,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InitialControls(This,value) )
    ( (This)->lpVtbl->put_InitialControls(This,value) )
    ( (This)->lpVtbl->get_Children(This,value) )
    ( (This)->lpVtbl->get_ActiveTool(This,value) )
    ( (This)->lpVtbl->put_ActiveTool(This,value) )
    ( (This)->lpVtbl->get_InkDrawingAttributes(This,value) )
    ( (This)->lpVtbl->get_IsRulerButtonChecked(This,value) )
    ( (This)->lpVtbl->put_IsRulerButtonChecked(This,value) )
    ( (This)->lpVtbl->get_TargetInkCanvas(This,value) )
    ( (This)->lpVtbl->put_TargetInkCanvas(This,value) )
    ( (This)->lpVtbl->add_ActiveToolChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ActiveToolChanged(This,token) )
    ( (This)->lpVtbl->add_InkDrawingAttributesChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_InkDrawingAttributesChanged(This,token) )
    ( (This)->lpVtbl->add_EraseAllClicked(This,handler,token) )
    ( (This)->lpVtbl->remove_EraseAllClicked(This,token) )
DEPRECATED("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.")
    ( (This)->lpVtbl->add_IsRulerButtonCheckedChanged(This,handler,token) )
DEPRECATED("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.")
    ( (This)->lpVtbl->remove_IsRulerButtonCheckedChanged(This,token) )
    ( (This)->lpVtbl->GetToolButton(This,tool,result) )
    ( (This)->lpVtbl->GetToggleButton(This,tool,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbar2[] = L"Windows.UI.Xaml.Controls.IInkToolbar2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsStencilButtonChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsStencilButtonChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ButtonFlyoutPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ButtonFlyoutPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_IsStencilButtonCheckedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbar_Windows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_IsStencilButtonCheckedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *GetMenuButton )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind menu,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsStencilButtonChecked(This,value) )
    ( (This)->lpVtbl->put_IsStencilButtonChecked(This,value) )
    ( (This)->lpVtbl->get_ButtonFlyoutPlacement(This,value) )
    ( (This)->lpVtbl->put_ButtonFlyoutPlacement(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->add_IsStencilButtonCheckedChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_IsStencilButtonCheckedChanged(This,token) )
    ( (This)->lpVtbl->GetMenuButton(This,menu,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbar3[] = L"Windows.UI.Xaml.Controls.IInkToolbar3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TargetInkPresenter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TargetInkPresenter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TargetInkPresenter(This,value) )
    ( (This)->lpVtbl->put_TargetInkPresenter(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarBallpointPenButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarBallpointPenButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomPen[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomPen";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInkDrawingAttributes )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * brush,
                  DOUBLE strokeWidth,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInkDrawingAttributes(This,brush,strokeWidth,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomPenButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomPenButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CustomPen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CustomPen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ConfigurationContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ConfigurationContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CustomPen(This,value) )
    ( (This)->lpVtbl->put_CustomPen(This,value) )
    ( (This)->lpVtbl->get_ConfigurationContent(This,value) )
    ( (This)->lpVtbl->put_ConfigurationContent(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomPenButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomPenButtonStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CustomPenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ConfigurationContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CustomPenProperty(This,value) )
    ( (This)->lpVtbl->get_ConfigurationContentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomPenFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomPenFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomPenOverrides[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomPenOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInkDrawingAttributesCore )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * brush,
                  DOUBLE strokeWidth,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInkDrawingAttributesCore(This,brush,strokeWidth,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomToggleButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomToggleButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomToolButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomToolButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ConfigurationContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ConfigurationContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ConfigurationContent(This,value) )
    ( (This)->lpVtbl->put_ConfigurationContent(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomToolButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarCustomToolButtonStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ConfigurationContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ConfigurationContentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarEraserButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarEraserButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarEraserButton2[] = L"Windows.UI.Xaml.Controls.IInkToolbarEraserButton2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsClearAllVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsClearAllVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsClearAllVisible(This,value) )
    ( (This)->lpVtbl->put_IsClearAllVisible(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarEraserButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarEraserButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarEraserButtonStatics2[] = L"Windows.UI.Xaml.Controls.IInkToolbarEraserButtonStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsClearAllVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsClearAllVisibleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarFlyoutItem[] = L"Windows.UI.Xaml.Controls.IInkToolbarFlyoutItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Kind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Kind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Checked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Checked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Unchecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Unchecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Kind(This,value) )
    ( (This)->lpVtbl->put_Kind(This,value) )
    ( (This)->lpVtbl->get_IsChecked(This,value) )
    ( (This)->lpVtbl->put_IsChecked(This,value) )
    ( (This)->lpVtbl->add_Checked(This,handler,token) )
    ( (This)->lpVtbl->remove_Checked(This,token) )
    ( (This)->lpVtbl->add_Unchecked(This,handler,token) )
    ( (This)->lpVtbl->remove_Unchecked(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarFlyoutItemFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarFlyoutItemStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_KindProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCheckedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_KindProperty(This,value) )
    ( (This)->lpVtbl->get_IsCheckedProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarHighlighterButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarHighlighterButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarHighlighterButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarHighlighterButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarIsStencilButtonCheckedChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_StencilButton )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StencilKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_StencilButton(This,value) )
    ( (This)->lpVtbl->get_StencilKind(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarMenuButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarMenuButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MenuKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsExtensionGlyphShown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsExtensionGlyphShown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MenuKind(This,value) )
    ( (This)->lpVtbl->get_IsExtensionGlyphShown(This,value) )
    ( (This)->lpVtbl->put_IsExtensionGlyphShown(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarMenuButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarMenuButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarMenuButtonStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarMenuButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsExtensionGlyphShownProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsExtensionGlyphShownProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPenButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarPenButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Palette )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Palette )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinStrokeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinStrokeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxStrokeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxStrokeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedBrushIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedBrushIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedStrokeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedStrokeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * This,
                  DOUBLE value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Palette(This,value) )
    ( (This)->lpVtbl->put_Palette(This,value) )
    ( (This)->lpVtbl->get_MinStrokeWidth(This,value) )
    ( (This)->lpVtbl->put_MinStrokeWidth(This,value) )
    ( (This)->lpVtbl->get_MaxStrokeWidth(This,value) )
    ( (This)->lpVtbl->put_MaxStrokeWidth(This,value) )
    ( (This)->lpVtbl->get_SelectedBrush(This,value) )
    ( (This)->lpVtbl->get_SelectedBrushIndex(This,value) )
    ( (This)->lpVtbl->put_SelectedBrushIndex(This,value) )
    ( (This)->lpVtbl->get_SelectedStrokeWidth(This,value) )
    ( (This)->lpVtbl->put_SelectedStrokeWidth(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPenButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarPenButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPenButtonStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarPenButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PaletteProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinStrokeWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxStrokeWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedBrushIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedStrokeWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PaletteProperty(This,value) )
    ( (This)->lpVtbl->get_MinStrokeWidthProperty(This,value) )
    ( (This)->lpVtbl->get_MaxStrokeWidthProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedBrushProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedBrushIndexProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedStrokeWidthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPenConfigurationControl[] = L"Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControl";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PenButton )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PenButton(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPenConfigurationControlFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPenConfigurationControlStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PenButtonProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PenButtonProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPencilButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarPencilButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarPencilButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarPencilButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarRulerButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarRulerButton";
typedef struct
DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
    DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
                               HRESULT ( STDMETHODCALLTYPE *get_Ruler )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
    ( (This)->lpVtbl->get_Ruler(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarRulerButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarRulerButtonFactory";
typedef struct
DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
    DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
                      HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarRulerButtonStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarRulerButtonStatics";
typedef struct
DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
    DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
                               HRESULT ( STDMETHODCALLTYPE *get_RulerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
    ( (This)->lpVtbl->get_RulerProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InitialControlsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChildrenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ActiveToolProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InkDrawingAttributesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRulerButtonCheckedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TargetInkCanvasProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InitialControlsProperty(This,value) )
    ( (This)->lpVtbl->get_ChildrenProperty(This,value) )
    ( (This)->lpVtbl->get_ActiveToolProperty(This,value) )
    ( (This)->lpVtbl->get_InkDrawingAttributesProperty(This,value) )
    ( (This)->lpVtbl->get_IsRulerButtonCheckedProperty(This,value) )
    ( (This)->lpVtbl->get_TargetInkCanvasProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarStatics2[] = L"Windows.UI.Xaml.Controls.IInkToolbarStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsStencilButtonCheckedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ButtonFlyoutPlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsStencilButtonCheckedProperty(This,value) )
    ( (This)->lpVtbl->get_ButtonFlyoutPlacementProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarStatics3[] = L"Windows.UI.Xaml.Controls.IInkToolbarStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TargetInkPresenterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TargetInkPresenterProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarStencilButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarStencilButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Ruler )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Protractor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedStencil )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedStencil )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRulerItemVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsRulerItemVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsProtractorItemVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsProtractorItemVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Ruler(This,value) )
    ( (This)->lpVtbl->get_Protractor(This,value) )
    ( (This)->lpVtbl->get_SelectedStencil(This,value) )
    ( (This)->lpVtbl->put_SelectedStencil(This,value) )
    ( (This)->lpVtbl->get_IsRulerItemVisible(This,value) )
    ( (This)->lpVtbl->put_IsRulerItemVisible(This,value) )
    ( (This)->lpVtbl->get_IsProtractorItemVisible(This,value) )
    ( (This)->lpVtbl->put_IsProtractorItemVisible(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarStencilButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarStencilButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarStencilButtonStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarStencilButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_RulerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProtractorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedStencilProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRulerItemVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsProtractorItemVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_RulerProperty(This,value) )
    ( (This)->lpVtbl->get_ProtractorProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedStencilProperty(This,value) )
    ( (This)->lpVtbl->get_IsRulerItemVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsProtractorItemVisibleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarToggleButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarToggleButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ToggleKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ToggleKind(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarToggleButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarToggleButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarToolButton[] = L"Windows.UI.Xaml.Controls.IInkToolbarToolButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ToolKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsExtensionGlyphShown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsExtensionGlyphShown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ToolKind(This,value) )
    ( (This)->lpVtbl->get_IsExtensionGlyphShown(This,value) )
    ( (This)->lpVtbl->put_IsExtensionGlyphShown(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarToolButtonFactory[] = L"Windows.UI.Xaml.Controls.IInkToolbarToolButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInkToolbarToolButtonStatics[] = L"Windows.UI.Xaml.Controls.IInkToolbarToolButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsExtensionGlyphShownProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsExtensionGlyphShownProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IInsertionPanel[] = L"Windows.UI.Xaml.Controls.IInsertionPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetInsertionIndexes )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel * This,
                  __x_ABI_CWindows_CFoundation_CPoint position,
                   __RPC__out INT32 * first,
                   __RPC__out INT32 * second
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetInsertionIndexes(This,position,first,second) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIsTextTrimmedChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemClickEventArgs[] = L"Windows.UI.Xaml.Controls.IItemClickEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ClickedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ClickedItem(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemContainerGenerator[] = L"Windows.UI.Xaml.Controls.IItemContainerGenerator";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_ItemsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ItemsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  EventRegistrationToken token
        );
    DEPRECATED("ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.")
                      HRESULT ( STDMETHODCALLTYPE *ItemFromContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt IInspectable * * result
        );
    DEPRECATED("ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.")
                      HRESULT ( STDMETHODCALLTYPE *ContainerFromItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    DEPRECATED("IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.")
                      HRESULT ( STDMETHODCALLTYPE *IndexFromContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__out INT32 * result
        );
    DEPRECATED("ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.")
                      HRESULT ( STDMETHODCALLTYPE *ContainerFromIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  INT32 index,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetItemContainerGeneratorForPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * panel,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * * result
        );
    HRESULT ( STDMETHODCALLTYPE *StartAt )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection direction,
                  boolean allowStartAtRealizedItem
        );
    HRESULT ( STDMETHODCALLTYPE *Stop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This
        );
    HRESULT ( STDMETHODCALLTYPE *GenerateNext )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                   __RPC__out boolean * isNewlyRealized,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * returnValue
        );
    HRESULT ( STDMETHODCALLTYPE *PrepareItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This
        );
    HRESULT ( STDMETHODCALLTYPE *Remove )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
                  INT32 count
        );
    HRESULT ( STDMETHODCALLTYPE *GeneratorPositionFromIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  INT32 itemIndex,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition * result
        );
    HRESULT ( STDMETHODCALLTYPE *IndexFromGeneratorPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *Recycle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
                  INT32 count
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_ItemsChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ItemsChanged(This,token) )
DEPRECATED("ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.")
    ( (This)->lpVtbl->ItemFromContainer(This,container,result) )
DEPRECATED("ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.")
    ( (This)->lpVtbl->ContainerFromItem(This,item,result) )
DEPRECATED("IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.")
    ( (This)->lpVtbl->IndexFromContainer(This,container,result) )
DEPRECATED("ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.")
    ( (This)->lpVtbl->ContainerFromIndex(This,index,result) )
    ( (This)->lpVtbl->GetItemContainerGeneratorForPanel(This,panel,result) )
    ( (This)->lpVtbl->StartAt(This,position,direction,allowStartAtRealizedItem) )
    ( (This)->lpVtbl->Stop(This) )
    ( (This)->lpVtbl->GenerateNext(This,isNewlyRealized,returnValue) )
    ( (This)->lpVtbl->PrepareItemContainer(This,container) )
    ( (This)->lpVtbl->RemoveAll(This) )
    ( (This)->lpVtbl->Remove(This,position,count) )
    ( (This)->lpVtbl->GeneratorPositionFromIndex(This,itemIndex,result) )
    ( (This)->lpVtbl->IndexFromGeneratorPosition(This,position,result) )
    ( (This)->lpVtbl->Recycle(This,position,count) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemContainerMapping[] = L"Windows.UI.Xaml.Controls.IItemContainerMapping";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *ItemFromContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ContainerFromItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    HRESULT ( STDMETHODCALLTYPE *IndexFromContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *ContainerFromIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
                  INT32 index,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->ItemFromContainer(This,container,result) )
    ( (This)->lpVtbl->ContainerFromItem(This,item,result) )
    ( (This)->lpVtbl->IndexFromContainer(This,container,result) )
    ( (This)->lpVtbl->ContainerFromIndex(This,index,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControl[] = L"Windows.UI.Xaml.Controls.IItemsControl";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __FIObservableVector_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemsPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMemberPath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisplayMemberPath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerGenerator )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemContainerTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GroupStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGrouping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemsSource(This,value) )
    ( (This)->lpVtbl->put_ItemsSource(This,value) )
    ( (This)->lpVtbl->get_Items(This,value) )
    ( (This)->lpVtbl->get_ItemTemplate(This,value) )
    ( (This)->lpVtbl->put_ItemTemplate(This,value) )
    ( (This)->lpVtbl->get_ItemTemplateSelector(This,value) )
    ( (This)->lpVtbl->put_ItemTemplateSelector(This,value) )
    ( (This)->lpVtbl->get_ItemsPanel(This,value) )
    ( (This)->lpVtbl->put_ItemsPanel(This,value) )
    ( (This)->lpVtbl->get_DisplayMemberPath(This,value) )
    ( (This)->lpVtbl->put_DisplayMemberPath(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyle(This,value) )
    ( (This)->lpVtbl->put_ItemContainerStyle(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyleSelector(This,value) )
    ( (This)->lpVtbl->put_ItemContainerStyleSelector(This,value) )
    ( (This)->lpVtbl->get_ItemContainerGenerator(This,value) )
    ( (This)->lpVtbl->get_ItemContainerTransitions(This,value) )
    ( (This)->lpVtbl->put_ItemContainerTransitions(This,value) )
    ( (This)->lpVtbl->get_GroupStyle(This,value) )
    ( (This)->lpVtbl->get_GroupStyleSelector(This,value) )
    ( (This)->lpVtbl->put_GroupStyleSelector(This,value) )
    ( (This)->lpVtbl->get_IsGrouping(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControl2[] = L"Windows.UI.Xaml.Controls.IItemsControl2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemsPanelRoot )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemsPanelRoot(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControl3[] = L"Windows.UI.Xaml.Controls.IItemsControl3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GroupHeaderContainerFromItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * itemContainer,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GroupHeaderContainerFromItemContainer(This,itemContainer,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControlFactory[] = L"Windows.UI.Xaml.Controls.IItemsControlFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControlOverrides[] = L"Windows.UI.Xaml.Controls.IItemsControlOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *IsItemItsOwnContainerOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetContainerForItemOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ClearContainerForItemOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __RPC__in_opt IInspectable * item
        );
    HRESULT ( STDMETHODCALLTYPE *PrepareContainerForItemOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __RPC__in_opt IInspectable * item
        );
    HRESULT ( STDMETHODCALLTYPE *OnItemsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt IInspectable * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnItemContainerStyleChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * oldItemContainerStyle,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * newItemContainerStyle
        );
    HRESULT ( STDMETHODCALLTYPE *OnItemContainerStyleSelectorChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * oldItemContainerStyleSelector,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * newItemContainerStyleSelector
        );
    HRESULT ( STDMETHODCALLTYPE *OnItemTemplateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * oldItemTemplate,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * newItemTemplate
        );
    HRESULT ( STDMETHODCALLTYPE *OnItemTemplateSelectorChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * oldItemTemplateSelector,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * newItemTemplateSelector
        );
    HRESULT ( STDMETHODCALLTYPE *OnGroupStyleSelectorChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * oldGroupStyleSelector,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * newGroupStyleSelector
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->IsItemItsOwnContainerOverride(This,item,result) )
    ( (This)->lpVtbl->GetContainerForItemOverride(This,result) )
    ( (This)->lpVtbl->ClearContainerForItemOverride(This,element,item) )
    ( (This)->lpVtbl->PrepareContainerForItemOverride(This,element,item) )
    ( (This)->lpVtbl->OnItemsChanged(This,e) )
    ( (This)->lpVtbl->OnItemContainerStyleChanged(This,oldItemContainerStyle,newItemContainerStyle) )
    ( (This)->lpVtbl->OnItemContainerStyleSelectorChanged(This,oldItemContainerStyleSelector,newItemContainerStyleSelector) )
    ( (This)->lpVtbl->OnItemTemplateChanged(This,oldItemTemplate,newItemTemplate) )
    ( (This)->lpVtbl->OnItemTemplateSelectorChanged(This,oldItemTemplateSelector,newItemTemplateSelector) )
    ( (This)->lpVtbl->OnGroupStyleSelectorChanged(This,oldGroupStyleSelector,newGroupStyleSelector) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControlStatics[] = L"Windows.UI.Xaml.Controls.IItemsControlStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemsSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsPanelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMemberPathProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupStyleSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGroupingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetItemsOwner )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ItemsControlFromItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemsSourceProperty(This,value) )
    ( (This)->lpVtbl->get_ItemTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_ItemTemplateSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_ItemsPanelProperty(This,value) )
    ( (This)->lpVtbl->get_DisplayMemberPathProperty(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyleProperty(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyleSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_ItemContainerTransitionsProperty(This,value) )
    ( (This)->lpVtbl->get_GroupStyleSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_IsGroupingProperty(This,value) )
    ( (This)->lpVtbl->GetItemsOwner(This,element,result) )
    ( (This)->lpVtbl->ItemsControlFromItemContainer(This,container,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPanelTemplate[] = L"Windows.UI.Xaml.Controls.IItemsPanelTemplate";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPickedEventArgs[] = L"Windows.UI.Xaml.Controls.IItemsPickedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AddedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RemovedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AddedItems(This,value) )
    ( (This)->lpVtbl->get_RemovedItems(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenter[] = L"Windows.UI.Xaml.Controls.IItemsPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_HeaderTransitions(This,value) )
    ( (This)->lpVtbl->put_HeaderTransitions(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenter2[] = L"Windows.UI.Xaml.Controls.IItemsPresenter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Footer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Footer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FooterTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FooterTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Footer(This,value) )
    ( (This)->lpVtbl->put_Footer(This,value) )
    ( (This)->lpVtbl->get_FooterTemplate(This,value) )
    ( (This)->lpVtbl->put_FooterTemplate(This,value) )
    ( (This)->lpVtbl->get_FooterTransitions(This,value) )
    ( (This)->lpVtbl->put_FooterTransitions(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenterStatics[] = L"Windows.UI.Xaml.Controls.IItemsPresenterStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTransitionsProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenterStatics2[] = L"Windows.UI.Xaml.Controls.IItemsPresenterStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FooterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FooterProperty(This,value) )
    ( (This)->lpVtbl->get_FooterTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_FooterTransitionsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsStackPanel[] = L"Windows.UI.Xaml.Controls.IItemsStackPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GroupPadding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GroupPadding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstCacheIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstVisibleIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LastVisibleIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LastCacheIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ScrollingDirection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GroupHeaderPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsUpdatingScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemsUpdatingScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CacheLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CacheLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
                  DOUBLE value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GroupPadding(This,value) )
    ( (This)->lpVtbl->put_GroupPadding(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->get_FirstCacheIndex(This,value) )
    ( (This)->lpVtbl->get_FirstVisibleIndex(This,value) )
    ( (This)->lpVtbl->get_LastVisibleIndex(This,value) )
    ( (This)->lpVtbl->get_LastCacheIndex(This,value) )
    ( (This)->lpVtbl->get_ScrollingDirection(This,value) )
    ( (This)->lpVtbl->get_GroupHeaderPlacement(This,value) )
    ( (This)->lpVtbl->put_GroupHeaderPlacement(This,value) )
    ( (This)->lpVtbl->get_ItemsUpdatingScrollMode(This,value) )
    ( (This)->lpVtbl->put_ItemsUpdatingScrollMode(This,value) )
    ( (This)->lpVtbl->get_CacheLength(This,value) )
    ( (This)->lpVtbl->put_CacheLength(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsStackPanel2[] = L"Windows.UI.Xaml.Controls.IItemsStackPanel2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreStickyGroupHeadersEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AreStickyGroupHeadersEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreStickyGroupHeadersEnabled(This,value) )
    ( (This)->lpVtbl->put_AreStickyGroupHeadersEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsStackPanelStatics[] = L"Windows.UI.Xaml.Controls.IItemsStackPanelStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GroupPaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CacheLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GroupPaddingProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_GroupHeaderPlacementProperty(This,value) )
    ( (This)->lpVtbl->get_CacheLengthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsStackPanelStatics2[] = L"Windows.UI.Xaml.Controls.IItemsStackPanelStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreStickyGroupHeadersEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreStickyGroupHeadersEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsWrapGrid[] = L"Windows.UI.Xaml.Controls.IItemsWrapGrid";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GroupPadding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GroupPadding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumns )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaximumRowsOrColumns )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstCacheIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FirstVisibleIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LastVisibleIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LastCacheIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ScrollingDirection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GroupHeaderPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CacheLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CacheLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
                  DOUBLE value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GroupPadding(This,value) )
    ( (This)->lpVtbl->put_GroupPadding(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->get_MaximumRowsOrColumns(This,value) )
    ( (This)->lpVtbl->put_MaximumRowsOrColumns(This,value) )
    ( (This)->lpVtbl->get_ItemWidth(This,value) )
    ( (This)->lpVtbl->put_ItemWidth(This,value) )
    ( (This)->lpVtbl->get_ItemHeight(This,value) )
    ( (This)->lpVtbl->put_ItemHeight(This,value) )
    ( (This)->lpVtbl->get_FirstCacheIndex(This,value) )
    ( (This)->lpVtbl->get_FirstVisibleIndex(This,value) )
    ( (This)->lpVtbl->get_LastVisibleIndex(This,value) )
    ( (This)->lpVtbl->get_LastCacheIndex(This,value) )
    ( (This)->lpVtbl->get_ScrollingDirection(This,value) )
    ( (This)->lpVtbl->get_GroupHeaderPlacement(This,value) )
    ( (This)->lpVtbl->put_GroupHeaderPlacement(This,value) )
    ( (This)->lpVtbl->get_CacheLength(This,value) )
    ( (This)->lpVtbl->put_CacheLength(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsWrapGrid2[] = L"Windows.UI.Xaml.Controls.IItemsWrapGrid2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreStickyGroupHeadersEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AreStickyGroupHeadersEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreStickyGroupHeadersEnabled(This,value) )
    ( (This)->lpVtbl->put_AreStickyGroupHeadersEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsWrapGridStatics[] = L"Windows.UI.Xaml.Controls.IItemsWrapGridStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GroupPaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumnsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CacheLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GroupPaddingProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_MaximumRowsOrColumnsProperty(This,value) )
    ( (This)->lpVtbl->get_ItemWidthProperty(This,value) )
    ( (This)->lpVtbl->get_ItemHeightProperty(This,value) )
    ( (This)->lpVtbl->get_GroupHeaderPlacementProperty(This,value) )
    ( (This)->lpVtbl->get_CacheLengthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsWrapGridStatics2[] = L"Windows.UI.Xaml.Controls.IItemsWrapGridStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreStickyGroupHeadersEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreStickyGroupHeadersEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBox[] = L"Windows.UI.Xaml.Controls.IListBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode value
        );
    HRESULT ( STDMETHODCALLTYPE *ScrollIntoView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
                  __RPC__in_opt IInspectable * item
        );
    HRESULT ( STDMETHODCALLTYPE *SelectAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedItems(This,value) )
    ( (This)->lpVtbl->get_SelectionMode(This,value) )
    ( (This)->lpVtbl->put_SelectionMode(This,value) )
    ( (This)->lpVtbl->ScrollIntoView(This,item) )
    ( (This)->lpVtbl->SelectAll(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBox2[] = L"Windows.UI.Xaml.Controls.IListBox2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SingleSelectionFollowsFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SingleSelectionFollowsFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SingleSelectionFollowsFocus(This,value) )
    ( (This)->lpVtbl->put_SingleSelectionFollowsFocus(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxFactory[] = L"Windows.UI.Xaml.Controls.IListBoxFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxItem[] = L"Windows.UI.Xaml.Controls.IListBoxItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxItemFactory[] = L"Windows.UI.Xaml.Controls.IListBoxItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxStatics[] = L"Windows.UI.Xaml.Controls.IListBoxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxStatics2[] = L"Windows.UI.Xaml.Controls.IListBoxStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SingleSelectionFollowsFocusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SingleSelectionFollowsFocusProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListPickerFlyout[] = L"Windows.UI.Xaml.Controls.IListPickerFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMemberPath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisplayMemberPath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedValuePath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedValuePath )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ItemsPicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListPickerFlyout_Windows__CUI__CXaml__CControls__CItemsPickedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ItemsPicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *ShowAtAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * target,
                           __RPC__deref_out_opt __FIAsyncOperation_1___FIVectorView_1_IInspectable * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemsSource(This,value) )
    ( (This)->lpVtbl->put_ItemsSource(This,value) )
    ( (This)->lpVtbl->get_ItemTemplate(This,value) )
    ( (This)->lpVtbl->put_ItemTemplate(This,value) )
    ( (This)->lpVtbl->get_DisplayMemberPath(This,value) )
    ( (This)->lpVtbl->put_DisplayMemberPath(This,value) )
    ( (This)->lpVtbl->get_SelectionMode(This,value) )
    ( (This)->lpVtbl->put_SelectionMode(This,value) )
    ( (This)->lpVtbl->get_SelectedIndex(This,value) )
    ( (This)->lpVtbl->put_SelectedIndex(This,value) )
    ( (This)->lpVtbl->get_SelectedItem(This,value) )
    ( (This)->lpVtbl->put_SelectedItem(This,value) )
    ( (This)->lpVtbl->get_SelectedValue(This,value) )
    ( (This)->lpVtbl->put_SelectedValue(This,value) )
    ( (This)->lpVtbl->get_SelectedValuePath(This,value) )
    ( (This)->lpVtbl->put_SelectedValuePath(This,value) )
    ( (This)->lpVtbl->get_SelectedItems(This,value) )
    ( (This)->lpVtbl->add_ItemsPicked(This,handler,token) )
    ( (This)->lpVtbl->remove_ItemsPicked(This,token) )
    ( (This)->lpVtbl->ShowAtAsync(This,target,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListPickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.IListPickerFlyoutPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListPickerFlyoutStatics[] = L"Windows.UI.Xaml.Controls.IListPickerFlyoutStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemsSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMemberPathProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedItemProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedValueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedValuePathProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemsSourceProperty(This,value) )
    ( (This)->lpVtbl->get_ItemTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_DisplayMemberPathProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionModeProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedIndexProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedItemProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedValueProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedValuePathProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListView[] = L"Windows.UI.Xaml.Controls.IListView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase[] = L"Windows.UI.Xaml.Controls.IListViewBase";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSwipeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSwipeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanDragItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanDragItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanReorderItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanReorderItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsItemClickEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsItemClickEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DataFetchSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DataFetchSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingThreshold )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IncrementalLoadingThreshold )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingTrigger )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IncrementalLoadingTrigger )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ItemClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ItemClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DragItemsStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DragItemsStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *ScrollIntoView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __RPC__in_opt IInspectable * item
        );
    HRESULT ( STDMETHODCALLTYPE *SelectAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This
        );
    HRESULT ( STDMETHODCALLTYPE *LoadMoreItemsAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult * * operation
        );
                    HRESULT ( STDMETHODCALLTYPE *ScrollIntoViewWithAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __RPC__in_opt IInspectable * item,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment alignment
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedItems(This,value) )
    ( (This)->lpVtbl->get_SelectionMode(This,value) )
    ( (This)->lpVtbl->put_SelectionMode(This,value) )
    ( (This)->lpVtbl->get_IsSwipeEnabled(This,value) )
    ( (This)->lpVtbl->put_IsSwipeEnabled(This,value) )
    ( (This)->lpVtbl->get_CanDragItems(This,value) )
    ( (This)->lpVtbl->put_CanDragItems(This,value) )
    ( (This)->lpVtbl->get_CanReorderItems(This,value) )
    ( (This)->lpVtbl->put_CanReorderItems(This,value) )
    ( (This)->lpVtbl->get_IsItemClickEnabled(This,value) )
    ( (This)->lpVtbl->put_IsItemClickEnabled(This,value) )
    ( (This)->lpVtbl->get_DataFetchSize(This,value) )
    ( (This)->lpVtbl->put_DataFetchSize(This,value) )
    ( (This)->lpVtbl->get_IncrementalLoadingThreshold(This,value) )
    ( (This)->lpVtbl->put_IncrementalLoadingThreshold(This,value) )
    ( (This)->lpVtbl->get_IncrementalLoadingTrigger(This,value) )
    ( (This)->lpVtbl->put_IncrementalLoadingTrigger(This,value) )
    ( (This)->lpVtbl->add_ItemClick(This,handler,token) )
    ( (This)->lpVtbl->remove_ItemClick(This,token) )
    ( (This)->lpVtbl->add_DragItemsStarting(This,handler,token) )
    ( (This)->lpVtbl->remove_DragItemsStarting(This,token) )
    ( (This)->lpVtbl->ScrollIntoView(This,item) )
    ( (This)->lpVtbl->SelectAll(This) )
    ( (This)->lpVtbl->LoadMoreItemsAsync(This,operation) )
    ( (This)->lpVtbl->ScrollIntoViewWithAlignment(This,item,alignment) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_HeaderTransitions(This,value) )
    ( (This)->lpVtbl->put_HeaderTransitions(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase2[] = L"Windows.UI.Xaml.Controls.IListViewBase2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ShowsScrollingPlaceholders )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ShowsScrollingPlaceholders )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContainerContentChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContainerContentChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SetDesiredContainerUpdateDuration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                  __x_ABI_CWindows_CFoundation_CTimeSpan duration
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Footer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Footer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FooterTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FooterTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ShowsScrollingPlaceholders(This,value) )
    ( (This)->lpVtbl->put_ShowsScrollingPlaceholders(This,value) )
    ( (This)->lpVtbl->add_ContainerContentChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_ContainerContentChanging(This,token) )
    ( (This)->lpVtbl->SetDesiredContainerUpdateDuration(This,duration) )
    ( (This)->lpVtbl->get_Footer(This,value) )
    ( (This)->lpVtbl->put_Footer(This,value) )
    ( (This)->lpVtbl->get_FooterTemplate(This,value) )
    ( (This)->lpVtbl->put_FooterTemplate(This,value) )
    ( (This)->lpVtbl->get_FooterTransitions(This,value) )
    ( (This)->lpVtbl->put_FooterTransitions(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase3[] = L"Windows.UI.Xaml.Controls.IListViewBase3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ReorderMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ReorderMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ReorderMode(This,value) )
    ( (This)->lpVtbl->put_ReorderMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase4[] = L"Windows.UI.Xaml.Controls.IListViewBase4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedRanges )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                           __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CData__CItemIndexRange * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsMultiSelectCheckBoxEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsMultiSelectCheckBoxEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DragItemsCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DragItemsCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ChoosingItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ChoosingItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ChoosingGroupHeaderContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ChoosingGroupHeaderContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SelectRange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange * itemIndexRange
        );
    HRESULT ( STDMETHODCALLTYPE *DeselectRange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange * itemIndexRange
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedRanges(This,value) )
    ( (This)->lpVtbl->get_IsMultiSelectCheckBoxEnabled(This,value) )
    ( (This)->lpVtbl->put_IsMultiSelectCheckBoxEnabled(This,value) )
    ( (This)->lpVtbl->add_DragItemsCompleted(This,handler,token) )
    ( (This)->lpVtbl->remove_DragItemsCompleted(This,token) )
    ( (This)->lpVtbl->add_ChoosingItemContainer(This,handler,token) )
    ( (This)->lpVtbl->remove_ChoosingItemContainer(This,token) )
    ( (This)->lpVtbl->add_ChoosingGroupHeaderContainer(This,handler,token) )
    ( (This)->lpVtbl->remove_ChoosingGroupHeaderContainer(This,token) )
    ( (This)->lpVtbl->SelectRange(This,itemIndexRange) )
    ( (This)->lpVtbl->DeselectRange(This,itemIndexRange) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase5[] = L"Windows.UI.Xaml.Controls.IListViewBase5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SingleSelectionFollowsFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SingleSelectionFollowsFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This,
                  boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *IsDragSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 * This,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SingleSelectionFollowsFocus(This,value) )
    ( (This)->lpVtbl->put_SingleSelectionFollowsFocus(This,value) )
    ( (This)->lpVtbl->IsDragSource(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase6[] = L"Windows.UI.Xaml.Controls.IListViewBase6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *TryStartConnectedAnimationAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation * animation,
                  __RPC__in_opt IInspectable * item,
                  __RPC__in HSTRING elementName,
                           __RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *PrepareConnectedAnimation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 * This,
                  __RPC__in HSTRING key,
                  __RPC__in_opt IInspectable * item,
                  __RPC__in HSTRING elementName,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->TryStartConnectedAnimationAsync(This,animation,item,elementName,operation) )
    ( (This)->lpVtbl->PrepareConnectedAnimation(This,key,item,elementName,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseFactory[] = L"Windows.UI.Xaml.Controls.IListViewBaseFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseHeaderItem[] = L"Windows.UI.Xaml.Controls.IListViewBaseHeaderItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseHeaderItemFactory[] = L"Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseStatics[] = L"Windows.UI.Xaml.Controls.IListViewBaseStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSwipeEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanDragItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanReorderItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsItemClickEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DataFetchSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingThresholdProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingTriggerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SemanticZoomOwnerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsActiveViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionModeProperty(This,value) )
    ( (This)->lpVtbl->get_IsSwipeEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_CanDragItemsProperty(This,value) )
    ( (This)->lpVtbl->get_CanReorderItemsProperty(This,value) )
    ( (This)->lpVtbl->get_IsItemClickEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_DataFetchSizeProperty(This,value) )
    ( (This)->lpVtbl->get_IncrementalLoadingThresholdProperty(This,value) )
    ( (This)->lpVtbl->get_IncrementalLoadingTriggerProperty(This,value) )
    ( (This)->lpVtbl->get_SemanticZoomOwnerProperty(This,value) )
    ( (This)->lpVtbl->get_IsActiveViewProperty(This,value) )
    ( (This)->lpVtbl->get_IsZoomedInViewProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTransitionsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseStatics2[] = L"Windows.UI.Xaml.Controls.IListViewBaseStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ShowsScrollingPlaceholdersProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FooterTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ShowsScrollingPlaceholdersProperty(This,value) )
    ( (This)->lpVtbl->get_FooterProperty(This,value) )
    ( (This)->lpVtbl->get_FooterTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_FooterTransitionsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseStatics3[] = L"Windows.UI.Xaml.Controls.IListViewBaseStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ReorderModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ReorderModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseStatics4[] = L"Windows.UI.Xaml.Controls.IListViewBaseStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsMultiSelectCheckBoxEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsMultiSelectCheckBoxEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseStatics5[] = L"Windows.UI.Xaml.Controls.IListViewBaseStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SingleSelectionFollowsFocusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SingleSelectionFollowsFocusProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewFactory[] = L"Windows.UI.Xaml.Controls.IListViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewHeaderItem[] = L"Windows.UI.Xaml.Controls.IListViewHeaderItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewHeaderItemFactory[] = L"Windows.UI.Xaml.Controls.IListViewHeaderItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewItem[] = L"Windows.UI.Xaml.Controls.IListViewItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewItemFactory[] = L"Windows.UI.Xaml.Controls.IListViewItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewPersistenceHelper[] = L"Windows.UI.Xaml.Controls.IListViewPersistenceHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewPersistenceHelperStatics[] = L"Windows.UI.Xaml.Controls.IListViewPersistenceHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetRelativeScrollPosition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * listViewBase,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler * itemToKeyHandler,
                           __RPC__deref_out_opt HSTRING * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetRelativeScrollPositionAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * listViewBase,
                  __RPC__in HSTRING relativeScrollPosition,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler * keyToItemHandler,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIAsyncAction * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetRelativeScrollPosition(This,listViewBase,itemToKeyHandler,result) )
    ( (This)->lpVtbl->SetRelativeScrollPositionAsync(This,listViewBase,relativeScrollPosition,keyToItemHandler,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElement[] = L"Windows.UI.Xaml.Controls.IMediaElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PosterSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PosterSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsMuted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsMuted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAudioOnly )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoPlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AutoPlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Volume )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Volume )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Balance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Balance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NaturalDuration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __x_ABI_CWindows_CFoundation_CTimeSpan value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DownloadProgress )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BufferingProgress )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DownloadProgressOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CurrentState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Markers )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanSeek )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanPause )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioStreamCount )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioStreamIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__deref_out_opt __FIReference_1_int * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AudioStreamIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __FIReference_1_int * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaybackRate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaybackRate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsLooping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsLooping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  boolean value
        );
    DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
                               HRESULT ( STDMETHODCALLTYPE *get_PlayToSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultPlaybackRate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DefaultPlaybackRate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AspectRatioWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AspectRatioHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RealTimePlayback )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_RealTimePlayback )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioCategory )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AudioCategory )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioDeviceType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AudioDeviceType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProtectionManager )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ProtectionManager )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoPackingMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stereo3DVideoPackingMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoRenderMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stereo3DVideoRenderMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsStereo3DVideo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out boolean * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_MediaOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_MediaOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_MediaEnded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_MediaEnded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_MediaFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_MediaFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DownloadProgressChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DownloadProgressChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_BufferingProgressChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_BufferingProgressChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CurrentStateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CurrentStateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_MarkerReached )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_MarkerReached )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_RateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_RateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_VolumeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_VolumeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SeekCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SeekCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Stop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This
        );
    HRESULT ( STDMETHODCALLTYPE *Play )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This
        );
    HRESULT ( STDMETHODCALLTYPE *Pause )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This
        );
    HRESULT ( STDMETHODCALLTYPE *CanPlayType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in HSTRING type,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream * stream,
                  __RPC__in HSTRING mimeType
        );
    HRESULT ( STDMETHODCALLTYPE *GetAudioStreamLanguage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in_opt __FIReference_1_int * index,
                           __RPC__deref_out_opt HSTRING * result
        );
    HRESULT ( STDMETHODCALLTYPE *AddAudioEffect )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in HSTRING effectID,
                  boolean effectOptional,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet * effectConfiguration
        );
    HRESULT ( STDMETHODCALLTYPE *AddVideoEffect )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                  __RPC__in HSTRING effectID,
                  boolean effectOptional,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet * effectConfiguration
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveAllEffects )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ActualStereo3DVideoPackingMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PosterSource(This,value) )
    ( (This)->lpVtbl->put_PosterSource(This,value) )
    ( (This)->lpVtbl->get_Source(This,value) )
    ( (This)->lpVtbl->put_Source(This,value) )
    ( (This)->lpVtbl->get_IsMuted(This,value) )
    ( (This)->lpVtbl->put_IsMuted(This,value) )
    ( (This)->lpVtbl->get_IsAudioOnly(This,value) )
    ( (This)->lpVtbl->get_AutoPlay(This,value) )
    ( (This)->lpVtbl->put_AutoPlay(This,value) )
    ( (This)->lpVtbl->get_Volume(This,value) )
    ( (This)->lpVtbl->put_Volume(This,value) )
    ( (This)->lpVtbl->get_Balance(This,value) )
    ( (This)->lpVtbl->put_Balance(This,value) )
    ( (This)->lpVtbl->get_NaturalVideoHeight(This,value) )
    ( (This)->lpVtbl->get_NaturalVideoWidth(This,value) )
    ( (This)->lpVtbl->get_NaturalDuration(This,value) )
    ( (This)->lpVtbl->get_Position(This,value) )
    ( (This)->lpVtbl->put_Position(This,value) )
    ( (This)->lpVtbl->get_DownloadProgress(This,value) )
    ( (This)->lpVtbl->get_BufferingProgress(This,value) )
    ( (This)->lpVtbl->get_DownloadProgressOffset(This,value) )
    ( (This)->lpVtbl->get_CurrentState(This,value) )
    ( (This)->lpVtbl->get_Markers(This,value) )
    ( (This)->lpVtbl->get_CanSeek(This,value) )
    ( (This)->lpVtbl->get_CanPause(This,value) )
    ( (This)->lpVtbl->get_AudioStreamCount(This,value) )
    ( (This)->lpVtbl->get_AudioStreamIndex(This,value) )
    ( (This)->lpVtbl->put_AudioStreamIndex(This,value) )
    ( (This)->lpVtbl->get_PlaybackRate(This,value) )
    ( (This)->lpVtbl->put_PlaybackRate(This,value) )
    ( (This)->lpVtbl->get_IsLooping(This,value) )
    ( (This)->lpVtbl->put_IsLooping(This,value) )
DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
    ( (This)->lpVtbl->get_PlayToSource(This,value) )
    ( (This)->lpVtbl->get_DefaultPlaybackRate(This,value) )
    ( (This)->lpVtbl->put_DefaultPlaybackRate(This,value) )
    ( (This)->lpVtbl->get_AspectRatioWidth(This,value) )
    ( (This)->lpVtbl->get_AspectRatioHeight(This,value) )
    ( (This)->lpVtbl->get_RealTimePlayback(This,value) )
    ( (This)->lpVtbl->put_RealTimePlayback(This,value) )
    ( (This)->lpVtbl->get_AudioCategory(This,value) )
    ( (This)->lpVtbl->put_AudioCategory(This,value) )
    ( (This)->lpVtbl->get_AudioDeviceType(This,value) )
    ( (This)->lpVtbl->put_AudioDeviceType(This,value) )
    ( (This)->lpVtbl->get_ProtectionManager(This,value) )
    ( (This)->lpVtbl->put_ProtectionManager(This,value) )
    ( (This)->lpVtbl->get_Stereo3DVideoPackingMode(This,value) )
    ( (This)->lpVtbl->put_Stereo3DVideoPackingMode(This,value) )
    ( (This)->lpVtbl->get_Stereo3DVideoRenderMode(This,value) )
    ( (This)->lpVtbl->put_Stereo3DVideoRenderMode(This,value) )
    ( (This)->lpVtbl->get_IsStereo3DVideo(This,value) )
    ( (This)->lpVtbl->add_MediaOpened(This,handler,token) )
    ( (This)->lpVtbl->remove_MediaOpened(This,token) )
    ( (This)->lpVtbl->add_MediaEnded(This,handler,token) )
    ( (This)->lpVtbl->remove_MediaEnded(This,token) )
    ( (This)->lpVtbl->add_MediaFailed(This,handler,token) )
    ( (This)->lpVtbl->remove_MediaFailed(This,token) )
    ( (This)->lpVtbl->add_DownloadProgressChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_DownloadProgressChanged(This,token) )
    ( (This)->lpVtbl->add_BufferingProgressChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_BufferingProgressChanged(This,token) )
    ( (This)->lpVtbl->add_CurrentStateChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_CurrentStateChanged(This,token) )
    ( (This)->lpVtbl->add_MarkerReached(This,handler,token) )
    ( (This)->lpVtbl->remove_MarkerReached(This,token) )
    ( (This)->lpVtbl->add_RateChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_RateChanged(This,token) )
    ( (This)->lpVtbl->add_VolumeChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_VolumeChanged(This,token) )
    ( (This)->lpVtbl->add_SeekCompleted(This,handler,token) )
    ( (This)->lpVtbl->remove_SeekCompleted(This,token) )
    ( (This)->lpVtbl->Stop(This) )
    ( (This)->lpVtbl->Play(This) )
    ( (This)->lpVtbl->Pause(This) )
    ( (This)->lpVtbl->CanPlayType(This,type,result) )
    ( (This)->lpVtbl->SetSource(This,stream,mimeType) )
    ( (This)->lpVtbl->GetAudioStreamLanguage(This,index,result) )
    ( (This)->lpVtbl->AddAudioEffect(This,effectID,effectOptional,effectConfiguration) )
    ( (This)->lpVtbl->AddVideoEffect(This,effectID,effectOptional,effectConfiguration) )
    ( (This)->lpVtbl->RemoveAllEffects(This) )
    ( (This)->lpVtbl->get_ActualStereo3DVideoPackingMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElement2[] = L"Windows.UI.Xaml.Controls.IMediaElement2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreTransportControlsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AreTransportControlsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFullWindow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                  boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *SetMediaStreamSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource * source
        );
    DEPRECATED("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.")
                               HRESULT ( STDMETHODCALLTYPE *get_PlayToPreferredSourceUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    DEPRECATED("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.")
                               HRESULT ( STDMETHODCALLTYPE *put_PlayToPreferredSourceUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreTransportControlsEnabled(This,value) )
    ( (This)->lpVtbl->put_AreTransportControlsEnabled(This,value) )
    ( (This)->lpVtbl->get_Stretch(This,value) )
    ( (This)->lpVtbl->put_Stretch(This,value) )
    ( (This)->lpVtbl->get_IsFullWindow(This,value) )
    ( (This)->lpVtbl->put_IsFullWindow(This,value) )
    ( (This)->lpVtbl->SetMediaStreamSource(This,source) )
DEPRECATED("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.")
    ( (This)->lpVtbl->get_PlayToPreferredSourceUri(This,value) )
DEPRECATED("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.")
    ( (This)->lpVtbl->put_PlayToPreferredSourceUri(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElement3[] = L"Windows.UI.Xaml.Controls.IMediaElement3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TransportControls )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TransportControls )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PartialMediaFailureDetected )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PartialMediaFailureDetected )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SetPlaybackSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource * source
        );
    HRESULT ( STDMETHODCALLTYPE *GetAsCastingSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCasting_CICastingSource * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TransportControls(This,value) )
    ( (This)->lpVtbl->put_TransportControls(This,value) )
    ( (This)->lpVtbl->add_PartialMediaFailureDetected(This,handler,token) )
    ( (This)->lpVtbl->remove_PartialMediaFailureDetected(This,token) )
    ( (This)->lpVtbl->SetPlaybackSource(This,source) )
    ( (This)->lpVtbl->GetAsCastingSource(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElementStatics[] = L"Windows.UI.Xaml.Controls.IMediaElementStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PosterSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsMutedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsAudioOnlyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoPlayProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VolumeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BalanceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NaturalDurationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PositionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DownloadProgressProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BufferingProgressProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DownloadProgressOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CurrentStateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanSeekProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanPauseProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioStreamCountProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioStreamIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaybackRateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsLoopingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
                               HRESULT ( STDMETHODCALLTYPE *get_PlayToSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultPlaybackRateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AspectRatioWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AspectRatioHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RealTimePlaybackProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioCategoryProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AudioDeviceTypeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProtectionManagerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoPackingModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoRenderModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsStereo3DVideoProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ActualStereo3DVideoPackingModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PosterSourceProperty(This,value) )
    ( (This)->lpVtbl->get_SourceProperty(This,value) )
    ( (This)->lpVtbl->get_IsMutedProperty(This,value) )
    ( (This)->lpVtbl->get_IsAudioOnlyProperty(This,value) )
    ( (This)->lpVtbl->get_AutoPlayProperty(This,value) )
    ( (This)->lpVtbl->get_VolumeProperty(This,value) )
    ( (This)->lpVtbl->get_BalanceProperty(This,value) )
    ( (This)->lpVtbl->get_NaturalVideoHeightProperty(This,value) )
    ( (This)->lpVtbl->get_NaturalVideoWidthProperty(This,value) )
    ( (This)->lpVtbl->get_NaturalDurationProperty(This,value) )
    ( (This)->lpVtbl->get_PositionProperty(This,value) )
    ( (This)->lpVtbl->get_DownloadProgressProperty(This,value) )
    ( (This)->lpVtbl->get_BufferingProgressProperty(This,value) )
    ( (This)->lpVtbl->get_DownloadProgressOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_CurrentStateProperty(This,value) )
    ( (This)->lpVtbl->get_CanSeekProperty(This,value) )
    ( (This)->lpVtbl->get_CanPauseProperty(This,value) )
    ( (This)->lpVtbl->get_AudioStreamCountProperty(This,value) )
    ( (This)->lpVtbl->get_AudioStreamIndexProperty(This,value) )
    ( (This)->lpVtbl->get_PlaybackRateProperty(This,value) )
    ( (This)->lpVtbl->get_IsLoopingProperty(This,value) )
DEPRECATED("PlayToSource may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource.")
    ( (This)->lpVtbl->get_PlayToSourceProperty(This,value) )
    ( (This)->lpVtbl->get_DefaultPlaybackRateProperty(This,value) )
    ( (This)->lpVtbl->get_AspectRatioWidthProperty(This,value) )
    ( (This)->lpVtbl->get_AspectRatioHeightProperty(This,value) )
    ( (This)->lpVtbl->get_RealTimePlaybackProperty(This,value) )
    ( (This)->lpVtbl->get_AudioCategoryProperty(This,value) )
    ( (This)->lpVtbl->get_AudioDeviceTypeProperty(This,value) )
    ( (This)->lpVtbl->get_ProtectionManagerProperty(This,value) )
    ( (This)->lpVtbl->get_Stereo3DVideoPackingModeProperty(This,value) )
    ( (This)->lpVtbl->get_Stereo3DVideoRenderModeProperty(This,value) )
    ( (This)->lpVtbl->get_IsStereo3DVideoProperty(This,value) )
    ( (This)->lpVtbl->get_ActualStereo3DVideoPackingModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElementStatics2[] = L"Windows.UI.Xaml.Controls.IMediaElementStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreTransportControlsEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    DEPRECATED("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.")
                               HRESULT ( STDMETHODCALLTYPE *get_PlayToPreferredSourceUriProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreTransportControlsEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_StretchProperty(This,value) )
    ( (This)->lpVtbl->get_IsFullWindowProperty(This,value) )
DEPRECATED("PlayToPreferredSourceUri may be altered or unavailable for releases after Windows 10.0. Instead, use GetAsCastingSource().PreferredSourceUri.")
    ( (This)->lpVtbl->get_PlayToPreferredSourceUriProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaPlayerElement[] = L"Windows.UI.Xaml.Controls.IMediaPlayerElement";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TransportControls )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TransportControls )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AreTransportControlsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AreTransportControlsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PosterSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PosterSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoPlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AutoPlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFullWindow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MediaPlayer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer * * value
        );
    HRESULT ( STDMETHODCALLTYPE *SetMediaPlayer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * This,
                  __RPC__in_opt __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer * mediaPlayer
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Source(This,value) )
    ( (This)->lpVtbl->put_Source(This,value) )
    ( (This)->lpVtbl->get_TransportControls(This,value) )
    ( (This)->lpVtbl->put_TransportControls(This,value) )
    ( (This)->lpVtbl->get_AreTransportControlsEnabled(This,value) )
    ( (This)->lpVtbl->put_AreTransportControlsEnabled(This,value) )
    ( (This)->lpVtbl->get_PosterSource(This,value) )
    ( (This)->lpVtbl->put_PosterSource(This,value) )
    ( (This)->lpVtbl->get_Stretch(This,value) )
    ( (This)->lpVtbl->put_Stretch(This,value) )
    ( (This)->lpVtbl->get_AutoPlay(This,value) )
    ( (This)->lpVtbl->put_AutoPlay(This,value) )
    ( (This)->lpVtbl->get_IsFullWindow(This,value) )
    ( (This)->lpVtbl->put_IsFullWindow(This,value) )
    ( (This)->lpVtbl->get_MediaPlayer(This,value) )
    ( (This)->lpVtbl->SetMediaPlayer(This,mediaPlayer) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaPlayerElementFactory[] = L"Windows.UI.Xaml.Controls.IMediaPlayerElementFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaPlayerElementStatics[] = L"Windows.UI.Xaml.Controls.IMediaPlayerElementStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AreTransportControlsEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PosterSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoPlayProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MediaPlayerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SourceProperty(This,value) )
    ( (This)->lpVtbl->get_AreTransportControlsEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_PosterSourceProperty(This,value) )
    ( (This)->lpVtbl->get_StretchProperty(This,value) )
    ( (This)->lpVtbl->get_AutoPlayProperty(This,value) )
    ( (This)->lpVtbl->get_IsFullWindowProperty(This,value) )
    ( (This)->lpVtbl->get_MediaPlayerProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaPlayerPresenter[] = L"Windows.UI.Xaml.Controls.IMediaPlayerPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MediaPlayer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MediaPlayer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                  __RPC__in_opt __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFullWindow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MediaPlayer(This,value) )
    ( (This)->lpVtbl->put_MediaPlayer(This,value) )
    ( (This)->lpVtbl->get_Stretch(This,value) )
    ( (This)->lpVtbl->put_Stretch(This,value) )
    ( (This)->lpVtbl->get_IsFullWindow(This,value) )
    ( (This)->lpVtbl->put_IsFullWindow(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaPlayerPresenterFactory[] = L"Windows.UI.Xaml.Controls.IMediaPlayerPresenterFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaPlayerPresenterStatics[] = L"Windows.UI.Xaml.Controls.IMediaPlayerPresenterStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MediaPlayerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MediaPlayerProperty(This,value) )
    ( (This)->lpVtbl->get_StretchProperty(This,value) )
    ( (This)->lpVtbl->get_IsFullWindowProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControls[] = L"Windows.UI.Xaml.Controls.IMediaTransportControls";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFullWindowButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFullWindowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsZoomButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsZoomEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastForwardButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFastForwardButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastForwardEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFastForwardEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastRewindButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFastRewindButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastRewindEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsFastRewindEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsStopButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsStopButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsStopEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsStopEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVolumeButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsVolumeButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVolumeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsVolumeEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPlaybackRateButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPlaybackRateButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPlaybackRateEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPlaybackRateEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSeekBarVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSeekBarVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSeekEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSeekEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCompact )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsCompact )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsFullWindowButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsFullWindowButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsFullWindowEnabled(This,value) )
    ( (This)->lpVtbl->put_IsFullWindowEnabled(This,value) )
    ( (This)->lpVtbl->get_IsZoomButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsZoomButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsZoomEnabled(This,value) )
    ( (This)->lpVtbl->put_IsZoomEnabled(This,value) )
    ( (This)->lpVtbl->get_IsFastForwardButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsFastForwardButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsFastForwardEnabled(This,value) )
    ( (This)->lpVtbl->put_IsFastForwardEnabled(This,value) )
    ( (This)->lpVtbl->get_IsFastRewindButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsFastRewindButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsFastRewindEnabled(This,value) )
    ( (This)->lpVtbl->put_IsFastRewindEnabled(This,value) )
    ( (This)->lpVtbl->get_IsStopButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsStopButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsStopEnabled(This,value) )
    ( (This)->lpVtbl->put_IsStopEnabled(This,value) )
    ( (This)->lpVtbl->get_IsVolumeButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsVolumeButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsVolumeEnabled(This,value) )
    ( (This)->lpVtbl->put_IsVolumeEnabled(This,value) )
    ( (This)->lpVtbl->get_IsPlaybackRateButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsPlaybackRateButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsPlaybackRateEnabled(This,value) )
    ( (This)->lpVtbl->put_IsPlaybackRateEnabled(This,value) )
    ( (This)->lpVtbl->get_IsSeekBarVisible(This,value) )
    ( (This)->lpVtbl->put_IsSeekBarVisible(This,value) )
    ( (This)->lpVtbl->get_IsSeekEnabled(This,value) )
    ( (This)->lpVtbl->put_IsSeekEnabled(This,value) )
    ( (This)->lpVtbl->get_IsCompact(This,value) )
    ( (This)->lpVtbl->put_IsCompact(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControls2[] = L"Windows.UI.Xaml.Controls.IMediaTransportControls2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsSkipForwardButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSkipForwardButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSkipForwardEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSkipForwardEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSkipBackwardButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSkipBackwardButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSkipBackwardEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSkipBackwardEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsNextTrackButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsNextTrackButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPreviousTrackButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPreviousTrackButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FastPlayFallbackBehaviour )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FastPlayFallbackBehaviour )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ThumbnailRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaTransportControls_Windows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ThumbnailRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsSkipForwardButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsSkipForwardButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsSkipForwardEnabled(This,value) )
    ( (This)->lpVtbl->put_IsSkipForwardEnabled(This,value) )
    ( (This)->lpVtbl->get_IsSkipBackwardButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsSkipBackwardButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsSkipBackwardEnabled(This,value) )
    ( (This)->lpVtbl->put_IsSkipBackwardEnabled(This,value) )
    ( (This)->lpVtbl->get_IsNextTrackButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsNextTrackButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsPreviousTrackButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsPreviousTrackButtonVisible(This,value) )
    ( (This)->lpVtbl->get_FastPlayFallbackBehaviour(This,value) )
    ( (This)->lpVtbl->put_FastPlayFallbackBehaviour(This,value) )
    ( (This)->lpVtbl->add_ThumbnailRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_ThumbnailRequested(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControls3[] = L"Windows.UI.Xaml.Controls.IMediaTransportControls3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ShowAndHideAutomatically )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ShowAndHideAutomatically )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRepeatEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsRepeatEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRepeatButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsRepeatButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This,
                  boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *Show )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This
        );
    HRESULT ( STDMETHODCALLTYPE *Hide )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ShowAndHideAutomatically(This,value) )
    ( (This)->lpVtbl->put_ShowAndHideAutomatically(This,value) )
    ( (This)->lpVtbl->get_IsRepeatEnabled(This,value) )
    ( (This)->lpVtbl->put_IsRepeatEnabled(This,value) )
    ( (This)->lpVtbl->get_IsRepeatButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsRepeatButtonVisible(This,value) )
    ( (This)->lpVtbl->Show(This) )
    ( (This)->lpVtbl->Hide(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControls4[] = L"Windows.UI.Xaml.Controls.IMediaTransportControls4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsCompactOverlayButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsCompactOverlayButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCompactOverlayEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsCompactOverlayEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsCompactOverlayButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsCompactOverlayButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsCompactOverlayEnabled(This,value) )
    ( (This)->lpVtbl->put_IsCompactOverlayEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControlsFactory[] = L"Windows.UI.Xaml.Controls.IMediaTransportControlsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControlsHelper[] = L"Windows.UI.Xaml.Controls.IMediaTransportControlsHelper";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControlsHelperStatics[] = L"Windows.UI.Xaml.Controls.IMediaTransportControlsHelperStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DropoutOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDropoutOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt __FIReference_1_int * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetDropoutOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt __FIReference_1_int * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DropoutOrderProperty(This,value) )
    ( (This)->lpVtbl->GetDropoutOrder(This,element,result) )
    ( (This)->lpVtbl->SetDropoutOrder(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControlsStatics[] = L"Windows.UI.Xaml.Controls.IMediaTransportControlsStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastForwardButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastForwardEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastRewindButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsFastRewindEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsStopButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsStopEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVolumeButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVolumeEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPlaybackRateButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPlaybackRateEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSeekBarVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSeekEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsFullWindowButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsFullWindowEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsZoomButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsZoomEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsFastForwardButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsFastForwardEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsFastRewindButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsFastRewindEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsStopButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsStopEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsVolumeButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsVolumeEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsPlaybackRateButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsPlaybackRateEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsSeekBarVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsSeekEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsCompactProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControlsStatics2[] = L"Windows.UI.Xaml.Controls.IMediaTransportControlsStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsSkipForwardButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSkipForwardEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSkipBackwardButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSkipBackwardEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsNextTrackButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPreviousTrackButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FastPlayFallbackBehaviourProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsSkipForwardButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsSkipForwardEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsSkipBackwardButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsSkipBackwardEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsNextTrackButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsPreviousTrackButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_FastPlayFallbackBehaviourProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControlsStatics3[] = L"Windows.UI.Xaml.Controls.IMediaTransportControlsStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ShowAndHideAutomaticallyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRepeatEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsRepeatButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ShowAndHideAutomaticallyProperty(This,value) )
    ( (This)->lpVtbl->get_IsRepeatEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsRepeatButtonVisibleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaTransportControlsStatics4[] = L"Windows.UI.Xaml.Controls.IMediaTransportControlsStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsCompactOverlayButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsCompactOverlayEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsCompactOverlayButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsCompactOverlayEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBar[] = L"Windows.UI.Xaml.Controls.IMenuBar";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMenuBarItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Items(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBarFactory[] = L"Windows.UI.Xaml.Controls.IMenuBarFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBarItem[] = L"Windows.UI.Xaml.Controls.IMenuBarItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Title(This,value) )
    ( (This)->lpVtbl->put_Title(This,value) )
    ( (This)->lpVtbl->get_Items(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBarItemFactory[] = L"Windows.UI.Xaml.Controls.IMenuBarItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBarItemFlyout[] = L"Windows.UI.Xaml.Controls.IMenuBarItemFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBarItemFlyoutFactory[] = L"Windows.UI.Xaml.Controls.IMenuBarItemFlyoutFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBarItemStatics[] = L"Windows.UI.Xaml.Controls.IMenuBarItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TitleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TitleProperty(This,value) )
    ( (This)->lpVtbl->get_ItemsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuBarStatics[] = L"Windows.UI.Xaml.Controls.IMenuBarStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyout[] = L"Windows.UI.Xaml.Controls.IMenuFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuFlyoutPresenterStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MenuFlyoutPresenterStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Items(This,value) )
    ( (This)->lpVtbl->get_MenuFlyoutPresenterStyle(This,value) )
    ( (This)->lpVtbl->put_MenuFlyoutPresenterStyle(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyout2[] = L"Windows.UI.Xaml.Controls.IMenuFlyout2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *ShowAt )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * targetElement,
                  __x_ABI_CWindows_CFoundation_CPoint point
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->ShowAt(This,targetElement,point) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Command )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Command )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                  __RPC__in_opt IInspectable * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Click )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Click )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->put_Text(This,value) )
    ( (This)->lpVtbl->get_Command(This,value) )
    ( (This)->lpVtbl->put_Command(This,value) )
    ( (This)->lpVtbl->get_CommandParameter(This,value) )
    ( (This)->lpVtbl->put_CommandParameter(This,value) )
    ( (This)->lpVtbl->add_Click(This,handler,token) )
    ( (This)->lpVtbl->remove_Click(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItem2[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItem2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Icon(This,value) )
    ( (This)->lpVtbl->put_Icon(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItem3[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItem3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorTextOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_KeyboardAcceleratorTextOverride )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_KeyboardAcceleratorTextOverride(This,value) )
    ( (This)->lpVtbl->put_KeyboardAcceleratorTextOverride(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemBase[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemBase";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemBaseFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemStatics[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandParameterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextProperty(This,value) )
    ( (This)->lpVtbl->get_CommandProperty(This,value) )
    ( (This)->lpVtbl->get_CommandParameterProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemStatics2[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IconProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IconProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemStatics3[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorTextOverrideProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_KeyboardAcceleratorTextOverrideProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutPresenter2[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutPresenter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutPresenter3[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutPresenter3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabled(This,value) )
    ( (This)->lpVtbl->put_IsDefaultShadowEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutPresenterFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutPresenterStatics3[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutPresenterStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSeparator[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSeparator";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSeparatorFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutStatics[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MenuFlyoutPresenterStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MenuFlyoutPresenterStyleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSubItem[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSubItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Items(This,value) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->put_Text(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSubItem2[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Icon(This,value) )
    ( (This)->lpVtbl->put_Icon(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSubItemStatics[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSubItemStatics2[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IconProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IconProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigate[] = L"Windows.UI.Xaml.Controls.INavigate";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Navigate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
                  __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->Navigate(This,sourcePageType,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigate;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationView[] = L"Windows.UI.Xaml.Controls.INavigationView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsPaneOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPaneOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactModeThresholdWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CompactModeThresholdWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExpandedModeThresholdWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ExpandedModeThresholdWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneFooter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PaneFooter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSettingsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSettingsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPaneToggleButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPaneToggleButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlwaysShowHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AlwaysShowHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CompactPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpenPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OpenPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneToggleButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PaneToggleButtonStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MenuItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SettingsItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoSuggestBox )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AutoSuggestBox )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MenuItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MenuItemTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MenuItemContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MenuItemContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * value
        );
    HRESULT ( STDMETHODCALLTYPE *MenuItemFromContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ContainerFromMenuItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ItemInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ItemInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DisplayModeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DisplayModeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsPaneOpen(This,value) )
    ( (This)->lpVtbl->put_IsPaneOpen(This,value) )
    ( (This)->lpVtbl->get_CompactModeThresholdWidth(This,value) )
    ( (This)->lpVtbl->put_CompactModeThresholdWidth(This,value) )
    ( (This)->lpVtbl->get_ExpandedModeThresholdWidth(This,value) )
    ( (This)->lpVtbl->put_ExpandedModeThresholdWidth(This,value) )
    ( (This)->lpVtbl->get_PaneFooter(This,value) )
    ( (This)->lpVtbl->put_PaneFooter(This,value) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_DisplayMode(This,value) )
    ( (This)->lpVtbl->get_IsSettingsVisible(This,value) )
    ( (This)->lpVtbl->put_IsSettingsVisible(This,value) )
    ( (This)->lpVtbl->get_IsPaneToggleButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsPaneToggleButtonVisible(This,value) )
    ( (This)->lpVtbl->get_AlwaysShowHeader(This,value) )
    ( (This)->lpVtbl->put_AlwaysShowHeader(This,value) )
    ( (This)->lpVtbl->get_CompactPaneLength(This,value) )
    ( (This)->lpVtbl->put_CompactPaneLength(This,value) )
    ( (This)->lpVtbl->get_OpenPaneLength(This,value) )
    ( (This)->lpVtbl->put_OpenPaneLength(This,value) )
    ( (This)->lpVtbl->get_PaneToggleButtonStyle(This,value) )
    ( (This)->lpVtbl->put_PaneToggleButtonStyle(This,value) )
    ( (This)->lpVtbl->get_SelectedItem(This,value) )
    ( (This)->lpVtbl->put_SelectedItem(This,value) )
    ( (This)->lpVtbl->get_MenuItems(This,value) )
    ( (This)->lpVtbl->get_MenuItemsSource(This,value) )
    ( (This)->lpVtbl->put_MenuItemsSource(This,value) )
    ( (This)->lpVtbl->get_SettingsItem(This,value) )
    ( (This)->lpVtbl->get_AutoSuggestBox(This,value) )
    ( (This)->lpVtbl->put_AutoSuggestBox(This,value) )
    ( (This)->lpVtbl->get_MenuItemTemplate(This,value) )
    ( (This)->lpVtbl->put_MenuItemTemplate(This,value) )
    ( (This)->lpVtbl->get_MenuItemTemplateSelector(This,value) )
    ( (This)->lpVtbl->put_MenuItemTemplateSelector(This,value) )
    ( (This)->lpVtbl->get_MenuItemContainerStyle(This,value) )
    ( (This)->lpVtbl->put_MenuItemContainerStyle(This,value) )
    ( (This)->lpVtbl->get_MenuItemContainerStyleSelector(This,value) )
    ( (This)->lpVtbl->put_MenuItemContainerStyleSelector(This,value) )
    ( (This)->lpVtbl->MenuItemFromContainer(This,container,result) )
    ( (This)->lpVtbl->ContainerFromMenuItem(This,item,result) )
    ( (This)->lpVtbl->add_SelectionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanged(This,token) )
    ( (This)->lpVtbl->add_ItemInvoked(This,handler,token) )
    ( (This)->lpVtbl->remove_ItemInvoked(This,token) )
    ( (This)->lpVtbl->add_DisplayModeChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_DisplayModeChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationView2[] = L"Windows.UI.Xaml.Controls.INavigationView2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsBackButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsBackButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsBackEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsBackEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneTitle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PaneTitle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  __RPC__in HSTRING value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_BackRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_BackRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PaneClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PaneClosing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_Windows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneClosing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PaneOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PaneOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CNavigationView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsBackButtonVisible(This,value) )
    ( (This)->lpVtbl->put_IsBackButtonVisible(This,value) )
    ( (This)->lpVtbl->get_IsBackEnabled(This,value) )
    ( (This)->lpVtbl->put_IsBackEnabled(This,value) )
    ( (This)->lpVtbl->get_PaneTitle(This,value) )
    ( (This)->lpVtbl->put_PaneTitle(This,value) )
    ( (This)->lpVtbl->add_BackRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_BackRequested(This,token) )
    ( (This)->lpVtbl->add_PaneClosed(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneClosed(This,token) )
    ( (This)->lpVtbl->add_PaneClosing(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneClosing(This,token) )
    ( (This)->lpVtbl->add_PaneOpened(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneOpened(This,token) )
    ( (This)->lpVtbl->add_PaneOpening(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneOpening(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationView3[] = L"Windows.UI.Xaml.Controls.INavigationView3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PaneDisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PaneDisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PaneHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneCustomContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PaneCustomContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentOverlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentOverlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPaneVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPaneVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionFollowsFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionFollowsFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShoulderNavigationEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ShoulderNavigationEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowLabelMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OverflowLabelMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PaneDisplayMode(This,value) )
    ( (This)->lpVtbl->put_PaneDisplayMode(This,value) )
    ( (This)->lpVtbl->get_PaneHeader(This,value) )
    ( (This)->lpVtbl->put_PaneHeader(This,value) )
    ( (This)->lpVtbl->get_PaneCustomContent(This,value) )
    ( (This)->lpVtbl->put_PaneCustomContent(This,value) )
    ( (This)->lpVtbl->get_ContentOverlay(This,value) )
    ( (This)->lpVtbl->put_ContentOverlay(This,value) )
    ( (This)->lpVtbl->get_IsPaneVisible(This,value) )
    ( (This)->lpVtbl->put_IsPaneVisible(This,value) )
    ( (This)->lpVtbl->get_SelectionFollowsFocus(This,value) )
    ( (This)->lpVtbl->put_SelectionFollowsFocus(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->get_ShoulderNavigationEnabled(This,value) )
    ( (This)->lpVtbl->put_ShoulderNavigationEnabled(This,value) )
    ( (This)->lpVtbl->get_OverflowLabelMode(This,value) )
    ( (This)->lpVtbl->put_OverflowLabelMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewBackRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewDisplayModeChangedEventArgs[] = L"Windows.UI.Xaml.Controls.INavigationViewDisplayModeChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DisplayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewFactory[] = L"Windows.UI.Xaml.Controls.INavigationViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItem[] = L"Windows.UI.Xaml.Controls.INavigationViewItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Icon )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * This,
                           __RPC__out DOUBLE * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Icon(This,value) )
    ( (This)->lpVtbl->put_Icon(This,value) )
    ( (This)->lpVtbl->get_CompactPaneLength(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItem2[] = L"Windows.UI.Xaml.Controls.INavigationViewItem2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectsOnInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectsOnInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectsOnInvoked(This,value) )
    ( (This)->lpVtbl->put_SelectsOnInvoked(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemBase[] = L"Windows.UI.Xaml.Controls.INavigationViewItemBase";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemBaseFactory[] = L"Windows.UI.Xaml.Controls.INavigationViewItemBaseFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemFactory[] = L"Windows.UI.Xaml.Controls.INavigationViewItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemHeader[] = L"Windows.UI.Xaml.Controls.INavigationViewItemHeader";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemHeaderFactory[] = L"Windows.UI.Xaml.Controls.INavigationViewItemHeaderFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemInvokedEventArgs[] = L"Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InvokedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSettingsInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InvokedItem(This,value) )
    ( (This)->lpVtbl->get_IsSettingsInvoked(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemInvokedEventArgs2[] = L"Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InvokedItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RecommendedNavigationTransitionInfo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InvokedItemContainer(This,value) )
    ( (This)->lpVtbl->get_RecommendedNavigationTransitionInfo(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemSeparator[] = L"Windows.UI.Xaml.Controls.INavigationViewItemSeparator";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemSeparatorFactory[] = L"Windows.UI.Xaml.Controls.INavigationViewItemSeparatorFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemStatics[] = L"Windows.UI.Xaml.Controls.INavigationViewItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IconProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactPaneLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IconProperty(This,value) )
    ( (This)->lpVtbl->get_CompactPaneLengthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewItemStatics2[] = L"Windows.UI.Xaml.Controls.INavigationViewItemStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectsOnInvokedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectsOnInvokedProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewList[] = L"Windows.UI.Xaml.Controls.INavigationViewList";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewListFactory[] = L"Windows.UI.Xaml.Controls.INavigationViewListFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewPaneClosingEventArgs[] = L"Windows.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewSelectionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSettingsSelected )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedItem(This,value) )
    ( (This)->lpVtbl->get_IsSettingsSelected(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewSelectionChangedEventArgs2[] = L"Windows.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedItemContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RecommendedNavigationTransitionInfo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedItemContainer(This,value) )
    ( (This)->lpVtbl->get_RecommendedNavigationTransitionInfo(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewStatics[] = L"Windows.UI.Xaml.Controls.INavigationViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsPaneOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactModeThresholdWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExpandedModeThresholdWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneFooterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSettingsVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPaneToggleButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlwaysShowHeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactPaneLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpenPaneLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneToggleButtonStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemsSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedItemProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SettingsItemProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AutoSuggestBoxProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemTemplateSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemContainerStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MenuItemContainerStyleSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsPaneOpenProperty(This,value) )
    ( (This)->lpVtbl->get_CompactModeThresholdWidthProperty(This,value) )
    ( (This)->lpVtbl->get_ExpandedModeThresholdWidthProperty(This,value) )
    ( (This)->lpVtbl->get_PaneFooterProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_DisplayModeProperty(This,value) )
    ( (This)->lpVtbl->get_IsSettingsVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsPaneToggleButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_AlwaysShowHeaderProperty(This,value) )
    ( (This)->lpVtbl->get_CompactPaneLengthProperty(This,value) )
    ( (This)->lpVtbl->get_OpenPaneLengthProperty(This,value) )
    ( (This)->lpVtbl->get_PaneToggleButtonStyleProperty(This,value) )
    ( (This)->lpVtbl->get_MenuItemsProperty(This,value) )
    ( (This)->lpVtbl->get_MenuItemsSourceProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedItemProperty(This,value) )
    ( (This)->lpVtbl->get_SettingsItemProperty(This,value) )
    ( (This)->lpVtbl->get_AutoSuggestBoxProperty(This,value) )
    ( (This)->lpVtbl->get_MenuItemTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_MenuItemTemplateSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_MenuItemContainerStyleProperty(This,value) )
    ( (This)->lpVtbl->get_MenuItemContainerStyleSelectorProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewStatics2[] = L"Windows.UI.Xaml.Controls.INavigationViewStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsBackButtonVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsBackEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneTitleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsBackButtonVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_IsBackEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_PaneTitleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewStatics3[] = L"Windows.UI.Xaml.Controls.INavigationViewStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PaneDisplayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneHeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneCustomContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentOverlayProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPaneVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionFollowsFocusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettingsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShoulderNavigationEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowLabelModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PaneDisplayModeProperty(This,value) )
    ( (This)->lpVtbl->get_PaneHeaderProperty(This,value) )
    ( (This)->lpVtbl->get_PaneCustomContentProperty(This,value) )
    ( (This)->lpVtbl->get_ContentOverlayProperty(This,value) )
    ( (This)->lpVtbl->get_IsPaneVisibleProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionFollowsFocusProperty(This,value) )
    ( (This)->lpVtbl->get_TemplateSettingsProperty(This,value) )
    ( (This)->lpVtbl->get_ShoulderNavigationEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_OverflowLabelModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewTemplateSettings[] = L"Windows.UI.Xaml.Controls.INavigationViewTemplateSettings";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TopPadding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowButtonVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneToggleButtonVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackButtonVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopPaneVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LeftPaneVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SingleSelectionFollowsFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TopPadding(This,value) )
    ( (This)->lpVtbl->get_OverflowButtonVisibility(This,value) )
    ( (This)->lpVtbl->get_PaneToggleButtonVisibility(This,value) )
    ( (This)->lpVtbl->get_BackButtonVisibility(This,value) )
    ( (This)->lpVtbl->get_TopPaneVisibility(This,value) )
    ( (This)->lpVtbl->get_LeftPaneVisibility(This,value) )
    ( (This)->lpVtbl->get_SingleSelectionFollowsFocus(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewTemplateSettingsFactory[] = L"Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigationViewTemplateSettingsStatics[] = L"Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TopPaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowButtonVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneToggleButtonVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackButtonVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopPaneVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LeftPaneVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SingleSelectionFollowsFocusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TopPaddingProperty(This,value) )
    ( (This)->lpVtbl->get_OverflowButtonVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_PaneToggleButtonVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_BackButtonVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_TopPaneVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_LeftPaneVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_SingleSelectionFollowsFocusProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INotifyEventArgs[] = L"Windows.UI.Xaml.Controls.INotifyEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Value )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Value(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INotifyEventArgs2[] = L"Windows.UI.Xaml.Controls.INotifyEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CallingUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CallingUri(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPage[] = L"Windows.UI.Xaml.Controls.IPage";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Frame )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NavigationCacheMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_NavigationCacheMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                  __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopAppBar )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TopAppBar )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BottomAppBar )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BottomAppBar )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPage
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Frame(This,value) )
    ( (This)->lpVtbl->get_NavigationCacheMode(This,value) )
    ( (This)->lpVtbl->put_NavigationCacheMode(This,value) )
    ( (This)->lpVtbl->get_TopAppBar(This,value) )
    ( (This)->lpVtbl->put_TopAppBar(This,value) )
    ( (This)->lpVtbl->get_BottomAppBar(This,value) )
    ( (This)->lpVtbl->put_BottomAppBar(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPage;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPageFactory[] = L"Windows.UI.Xaml.Controls.IPageFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPageOverrides[] = L"Windows.UI.Xaml.Controls.IPageOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnNavigatedFrom )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnNavigatedTo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *OnNavigatingFrom )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnNavigatedFrom(This,e) )
    ( (This)->lpVtbl->OnNavigatedTo(This,e) )
    ( (This)->lpVtbl->OnNavigatingFrom(This,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPageStatics[] = L"Windows.UI.Xaml.Controls.IPageStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FrameProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopAppBarProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BottomAppBarProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FrameProperty(This,value) )
    ( (This)->lpVtbl->get_TopAppBarProperty(This,value) )
    ( (This)->lpVtbl->get_BottomAppBarProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPanel[] = L"Windows.UI.Xaml.Controls.IPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Children )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsItemsHost )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChildrenTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ChildrenTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Children(This,value) )
    ( (This)->lpVtbl->get_Background(This,value) )
    ( (This)->lpVtbl->put_Background(This,value) )
    ( (This)->lpVtbl->get_IsItemsHost(This,value) )
    ( (This)->lpVtbl->get_ChildrenTransitions(This,value) )
    ( (This)->lpVtbl->put_ChildrenTransitions(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPanel2[] = L"Windows.UI.Xaml.Controls.IPanel2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundTransition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIBrushTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundTransition )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIBrushTransition * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundTransition(This,value) )
    ( (This)->lpVtbl->put_BackgroundTransition(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPanelFactory[] = L"Windows.UI.Xaml.Controls.IPanelFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPanelStatics[] = L"Windows.UI.Xaml.Controls.IPanelStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsItemsHostProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChildrenTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_IsItemsHostProperty(This,value) )
    ( (This)->lpVtbl->get_ChildrenTransitionsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IParallaxView[] = L"Windows.UI.Xaml.Controls.IParallaxView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Child )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Child )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalShift )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalShift )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSourceEndOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalSourceEndOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSourceOffsetKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalSourceOffsetKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSourceStartOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalSourceStartOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalShiftClamped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHorizontalShiftClamped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVerticalShiftClamped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsVerticalShiftClamped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxHorizontalShiftRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxHorizontalShiftRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxVerticalShiftRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxVerticalShiftRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalShift )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalShift )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSourceEndOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalSourceEndOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSourceOffsetKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalSourceOffsetKind )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSourceStartOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalSourceStartOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This,
                  DOUBLE value
        );
    HRESULT ( STDMETHODCALLTYPE *RefreshAutomaticHorizontalOffsets )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This
        );
    HRESULT ( STDMETHODCALLTYPE *RefreshAutomaticVerticalOffsets )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Child(This,value) )
    ( (This)->lpVtbl->put_Child(This,value) )
    ( (This)->lpVtbl->get_HorizontalShift(This,value) )
    ( (This)->lpVtbl->put_HorizontalShift(This,value) )
    ( (This)->lpVtbl->get_HorizontalSourceEndOffset(This,value) )
    ( (This)->lpVtbl->put_HorizontalSourceEndOffset(This,value) )
    ( (This)->lpVtbl->get_HorizontalSourceOffsetKind(This,value) )
    ( (This)->lpVtbl->put_HorizontalSourceOffsetKind(This,value) )
    ( (This)->lpVtbl->get_HorizontalSourceStartOffset(This,value) )
    ( (This)->lpVtbl->put_HorizontalSourceStartOffset(This,value) )
    ( (This)->lpVtbl->get_IsHorizontalShiftClamped(This,value) )
    ( (This)->lpVtbl->put_IsHorizontalShiftClamped(This,value) )
    ( (This)->lpVtbl->get_IsVerticalShiftClamped(This,value) )
    ( (This)->lpVtbl->put_IsVerticalShiftClamped(This,value) )
    ( (This)->lpVtbl->get_MaxHorizontalShiftRatio(This,value) )
    ( (This)->lpVtbl->put_MaxHorizontalShiftRatio(This,value) )
    ( (This)->lpVtbl->get_MaxVerticalShiftRatio(This,value) )
    ( (This)->lpVtbl->put_MaxVerticalShiftRatio(This,value) )
    ( (This)->lpVtbl->get_Source(This,value) )
    ( (This)->lpVtbl->put_Source(This,value) )
    ( (This)->lpVtbl->get_VerticalShift(This,value) )
    ( (This)->lpVtbl->put_VerticalShift(This,value) )
    ( (This)->lpVtbl->get_VerticalSourceEndOffset(This,value) )
    ( (This)->lpVtbl->put_VerticalSourceEndOffset(This,value) )
    ( (This)->lpVtbl->get_VerticalSourceOffsetKind(This,value) )
    ( (This)->lpVtbl->put_VerticalSourceOffsetKind(This,value) )
    ( (This)->lpVtbl->get_VerticalSourceStartOffset(This,value) )
    ( (This)->lpVtbl->put_VerticalSourceStartOffset(This,value) )
    ( (This)->lpVtbl->RefreshAutomaticHorizontalOffsets(This) )
    ( (This)->lpVtbl->RefreshAutomaticVerticalOffsets(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IParallaxViewFactory[] = L"Windows.UI.Xaml.Controls.IParallaxViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IParallaxViewStatics[] = L"Windows.UI.Xaml.Controls.IParallaxViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ChildProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSourceEndOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSourceOffsetKindProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSourceStartOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxHorizontalShiftRatioProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalShiftProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalShiftClampedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVerticalShiftClampedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSourceEndOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSourceOffsetKindProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSourceStartOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxVerticalShiftRatioProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalShiftProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ChildProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalSourceEndOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalSourceOffsetKindProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalSourceStartOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_MaxHorizontalShiftRatioProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalShiftProperty(This,value) )
    ( (This)->lpVtbl->get_IsHorizontalShiftClampedProperty(This,value) )
    ( (This)->lpVtbl->get_IsVerticalShiftClampedProperty(This,value) )
    ( (This)->lpVtbl->get_SourceProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalSourceEndOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalSourceOffsetKindProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalSourceStartOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_MaxVerticalShiftRatioProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalShiftProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBox[] = L"Windows.UI.Xaml.Controls.IPasswordBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Password )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Password )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PasswordChar )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PasswordChar )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  __RPC__in HSTRING value
        );
    DEPRECATED("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.")
                               HRESULT ( STDMETHODCALLTYPE *get_IsPasswordRevealButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                           __RPC__out boolean * value
        );
    DEPRECATED("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.")
                               HRESULT ( STDMETHODCALLTYPE *put_IsPasswordRevealButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  INT32 value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PasswordChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PasswordChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SelectAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Password(This,value) )
    ( (This)->lpVtbl->put_Password(This,value) )
    ( (This)->lpVtbl->get_PasswordChar(This,value) )
    ( (This)->lpVtbl->put_PasswordChar(This,value) )
DEPRECATED("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.")
    ( (This)->lpVtbl->get_IsPasswordRevealButtonEnabled(This,value) )
DEPRECATED("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.")
    ( (This)->lpVtbl->put_IsPasswordRevealButtonEnabled(This,value) )
    ( (This)->lpVtbl->get_MaxLength(This,value) )
    ( (This)->lpVtbl->put_MaxLength(This,value) )
    ( (This)->lpVtbl->add_PasswordChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_PasswordChanged(This,token) )
    ( (This)->lpVtbl->add_ContextMenuOpening(This,handler,token) )
    ( (This)->lpVtbl->remove_ContextMenuOpening(This,token) )
    ( (This)->lpVtbl->SelectAll(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBox2[] = L"Windows.UI.Xaml.Controls.IPasswordBox2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PreventKeyboardDisplayOnProgrammaticFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Paste )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Paste )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_PlaceholderText(This,value) )
    ( (This)->lpVtbl->put_PlaceholderText(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->put_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->get_PreventKeyboardDisplayOnProgrammaticFocus(This,value) )
    ( (This)->lpVtbl->put_PreventKeyboardDisplayOnProgrammaticFocus(This,value) )
    ( (This)->lpVtbl->add_Paste(This,handler,token) )
    ( (This)->lpVtbl->remove_Paste(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBox3[] = L"Windows.UI.Xaml.Controls.IPasswordBox3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PasswordRevealMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PasswordRevealMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InputScope )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_InputScope )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PasswordRevealMode(This,value) )
    ( (This)->lpVtbl->put_PasswordRevealMode(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->put_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->get_InputScope(This,value) )
    ( (This)->lpVtbl->put_InputScope(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBox4[] = L"Windows.UI.Xaml.Controls.IPasswordBox4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_PasswordChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPasswordBox_Windows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PasswordChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_PasswordChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_PasswordChanging(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBox5[] = L"Windows.UI.Xaml.Controls.IPasswordBox5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanPasteClipboardContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This,
                  __RPC__in_opt IInspectable * value
        );
    HRESULT ( STDMETHODCALLTYPE *PasteFromClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanPasteClipboardContent(This,value) )
    ( (This)->lpVtbl->get_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->put_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->get_Description(This,value) )
    ( (This)->lpVtbl->put_Description(This,value) )
    ( (This)->lpVtbl->PasteFromClipboard(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBoxPasswordChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsContentChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsContentChanging(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBoxStatics[] = L"Windows.UI.Xaml.Controls.IPasswordBoxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PasswordProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PasswordCharProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    DEPRECATED("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.")
                               HRESULT ( STDMETHODCALLTYPE *get_IsPasswordRevealButtonEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PasswordProperty(This,value) )
    ( (This)->lpVtbl->get_PasswordCharProperty(This,value) )
DEPRECATED("IsPasswordRevealButtonEnabledProperty may be altered or unavailable for releases after Windows 10.0. Instead, use PasswordRevealModeProperty.")
    ( (This)->lpVtbl->get_IsPasswordRevealButtonEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_MaxLengthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBoxStatics2[] = L"Windows.UI.Xaml.Controls.IPasswordBoxStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderTextProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColorProperty(This,value) )
    ( (This)->lpVtbl->get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBoxStatics3[] = L"Windows.UI.Xaml.Controls.IPasswordBoxStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PasswordRevealModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InputScopeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PasswordRevealModeProperty(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrderProperty(This,value) )
    ( (This)->lpVtbl->get_InputScopeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBoxStatics5[] = L"Windows.UI.Xaml.Controls.IPasswordBoxStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanPasteClipboardContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DescriptionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanPasteClipboardContentProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionFlyoutProperty(This,value) )
    ( (This)->lpVtbl->get_DescriptionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIcon[] = L"Windows.UI.Xaml.Controls.IPathIcon";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Data )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Data )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Data(This,value) )
    ( (This)->lpVtbl->put_Data(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIconFactory[] = L"Windows.UI.Xaml.Controls.IPathIconFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIconSource[] = L"Windows.UI.Xaml.Controls.IPathIconSource";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Data )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Data )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Data(This,value) )
    ( (This)->lpVtbl->put_Data(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIconSourceFactory[] = L"Windows.UI.Xaml.Controls.IPathIconSourceFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIconSourceStatics[] = L"Windows.UI.Xaml.Controls.IPathIconSourceStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DataProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DataProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIconStatics[] = L"Windows.UI.Xaml.Controls.IPathIconStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DataProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DataProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPersonPicture[] = L"Windows.UI.Xaml.Controls.IPersonPicture";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BadgeNumber )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BadgeNumber )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BadgeGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BadgeGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BadgeImageSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BadgeImageSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BadgeText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BadgeText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGroup )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsGroup )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Contact )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CContacts_CIContact * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Contact )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CContacts_CIContact * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisplayName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Initials )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Initials )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreferSmallImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PreferSmallImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProfilePicture )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ProfilePicture )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BadgeNumber(This,value) )
    ( (This)->lpVtbl->put_BadgeNumber(This,value) )
    ( (This)->lpVtbl->get_BadgeGlyph(This,value) )
    ( (This)->lpVtbl->put_BadgeGlyph(This,value) )
    ( (This)->lpVtbl->get_BadgeImageSource(This,value) )
    ( (This)->lpVtbl->put_BadgeImageSource(This,value) )
    ( (This)->lpVtbl->get_BadgeText(This,value) )
    ( (This)->lpVtbl->put_BadgeText(This,value) )
    ( (This)->lpVtbl->get_IsGroup(This,value) )
    ( (This)->lpVtbl->put_IsGroup(This,value) )
    ( (This)->lpVtbl->get_Contact(This,value) )
    ( (This)->lpVtbl->put_Contact(This,value) )
    ( (This)->lpVtbl->get_DisplayName(This,value) )
    ( (This)->lpVtbl->put_DisplayName(This,value) )
    ( (This)->lpVtbl->get_Initials(This,value) )
    ( (This)->lpVtbl->put_Initials(This,value) )
    ( (This)->lpVtbl->get_PreferSmallImage(This,value) )
    ( (This)->lpVtbl->put_PreferSmallImage(This,value) )
    ( (This)->lpVtbl->get_ProfilePicture(This,value) )
    ( (This)->lpVtbl->put_ProfilePicture(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPersonPictureFactory[] = L"Windows.UI.Xaml.Controls.IPersonPictureFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPersonPictureStatics[] = L"Windows.UI.Xaml.Controls.IPersonPictureStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BadgeNumberProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BadgeGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BadgeImageSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BadgeTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsGroupProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContactProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayNameProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InitialsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreferSmallImageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProfilePictureProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BadgeNumberProperty(This,value) )
    ( (This)->lpVtbl->get_BadgeGlyphProperty(This,value) )
    ( (This)->lpVtbl->get_BadgeImageSourceProperty(This,value) )
    ( (This)->lpVtbl->get_BadgeTextProperty(This,value) )
    ( (This)->lpVtbl->get_IsGroupProperty(This,value) )
    ( (This)->lpVtbl->get_ContactProperty(This,value) )
    ( (This)->lpVtbl->get_DisplayNameProperty(This,value) )
    ( (This)->lpVtbl->get_InitialsProperty(This,value) )
    ( (This)->lpVtbl->get_PreferSmallImageProperty(This,value) )
    ( (This)->lpVtbl->get_ProfilePictureProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPickerConfirmedEventArgs[] = L"Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPickerFlyout[] = L"Windows.UI.Xaml.Controls.IPickerFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ConfirmationButtonsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ConfirmationButtonsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Confirmed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPickerFlyout_Windows__CUI__CXaml__CControls__CPickerConfirmedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Confirmed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *ShowAtAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * target,
                           __RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
    ( (This)->lpVtbl->get_ConfirmationButtonsVisible(This,value) )
    ( (This)->lpVtbl->put_ConfirmationButtonsVisible(This,value) )
    ( (This)->lpVtbl->add_Confirmed(This,handler,token) )
    ( (This)->lpVtbl->remove_Confirmed(This,token) )
    ( (This)->lpVtbl->ShowAtAsync(This,target,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.IPickerFlyoutPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPickerFlyoutStatics[] = L"Windows.UI.Xaml.Controls.IPickerFlyoutStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ConfirmationButtonsVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
    ( (This)->lpVtbl->get_ConfirmationButtonsVisibleProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivot[] = L"Windows.UI.Xaml.Controls.IPivot";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TitleTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TitleTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsLocked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsLocked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PivotItemLoading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PivotItemLoading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PivotItemLoaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PivotItemLoaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PivotItemUnloading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PivotItemUnloading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PivotItemUnloaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CPivot_Windows__CUI__CXaml__CControls__CPivotItemEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PivotItemUnloaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Title(This,value) )
    ( (This)->lpVtbl->put_Title(This,value) )
    ( (This)->lpVtbl->get_TitleTemplate(This,value) )
    ( (This)->lpVtbl->put_TitleTemplate(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_SelectedIndex(This,value) )
    ( (This)->lpVtbl->put_SelectedIndex(This,value) )
    ( (This)->lpVtbl->get_SelectedItem(This,value) )
    ( (This)->lpVtbl->put_SelectedItem(This,value) )
    ( (This)->lpVtbl->get_IsLocked(This,value) )
    ( (This)->lpVtbl->put_IsLocked(This,value) )
    ( (This)->lpVtbl->add_SelectionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanged(This,token) )
    ( (This)->lpVtbl->add_PivotItemLoading(This,handler,token) )
    ( (This)->lpVtbl->remove_PivotItemLoading(This,token) )
    ( (This)->lpVtbl->add_PivotItemLoaded(This,handler,token) )
    ( (This)->lpVtbl->remove_PivotItemLoaded(This,token) )
    ( (This)->lpVtbl->add_PivotItemUnloading(This,handler,token) )
    ( (This)->lpVtbl->remove_PivotItemUnloading(This,token) )
    ( (This)->lpVtbl->add_PivotItemUnloaded(This,handler,token) )
    ( (This)->lpVtbl->remove_PivotItemUnloaded(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivot;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivot2[] = L"Windows.UI.Xaml.Controls.IPivot2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LeftHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LeftHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LeftHeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LeftHeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RightHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_RightHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RightHeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_RightHeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LeftHeader(This,value) )
    ( (This)->lpVtbl->put_LeftHeader(This,value) )
    ( (This)->lpVtbl->get_LeftHeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_LeftHeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_RightHeader(This,value) )
    ( (This)->lpVtbl->put_RightHeader(This,value) )
    ( (This)->lpVtbl->get_RightHeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_RightHeaderTemplate(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivot3[] = L"Windows.UI.Xaml.Controls.IPivot3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderFocusVisualPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderFocusVisualPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHeaderItemsCarouselEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHeaderItemsCarouselEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderFocusVisualPlacement(This,value) )
    ( (This)->lpVtbl->put_HeaderFocusVisualPlacement(This,value) )
    ( (This)->lpVtbl->get_IsHeaderItemsCarouselEnabled(This,value) )
    ( (This)->lpVtbl->put_IsHeaderItemsCarouselEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotFactory[] = L"Windows.UI.Xaml.Controls.IPivotFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotItem[] = L"Windows.UI.Xaml.Controls.IPivotItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * This,
                  __RPC__in_opt IInspectable * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotItemEventArgs[] = L"Windows.UI.Xaml.Controls.IPivotItemEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Item(This,value) )
    ( (This)->lpVtbl->put_Item(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotItemFactory[] = L"Windows.UI.Xaml.Controls.IPivotItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotItemStatics[] = L"Windows.UI.Xaml.Controls.IPivotItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotStatics[] = L"Windows.UI.Xaml.Controls.IPivotStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TitleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TitleTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedItemProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsLockedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SlideInAnimationGroupProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetSlideInAnimationGroup )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetSlideInAnimationGroup )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TitleProperty(This,value) )
    ( (This)->lpVtbl->get_TitleTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedIndexProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedItemProperty(This,value) )
    ( (This)->lpVtbl->get_IsLockedProperty(This,value) )
    ( (This)->lpVtbl->get_SlideInAnimationGroupProperty(This,value) )
    ( (This)->lpVtbl->GetSlideInAnimationGroup(This,element,result) )
    ( (This)->lpVtbl->SetSlideInAnimationGroup(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotStatics2[] = L"Windows.UI.Xaml.Controls.IPivotStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LeftHeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LeftHeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RightHeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RightHeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LeftHeaderProperty(This,value) )
    ( (This)->lpVtbl->get_LeftHeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_RightHeaderProperty(This,value) )
    ( (This)->lpVtbl->get_RightHeaderTemplateProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPivotStatics3[] = L"Windows.UI.Xaml.Controls.IPivotStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderFocusVisualPlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHeaderItemsCarouselEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderFocusVisualPlacementProperty(This,value) )
    ( (This)->lpVtbl->get_IsHeaderItemsCarouselEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressBar[] = L"Windows.UI.Xaml.Controls.IProgressBar";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsIndeterminate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsIndeterminate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShowError )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ShowError )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShowPaused )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ShowPaused )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsIndeterminate(This,value) )
    ( (This)->lpVtbl->put_IsIndeterminate(This,value) )
    ( (This)->lpVtbl->get_ShowError(This,value) )
    ( (This)->lpVtbl->put_ShowError(This,value) )
    ( (This)->lpVtbl->get_ShowPaused(This,value) )
    ( (This)->lpVtbl->put_ShowPaused(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressBarFactory[] = L"Windows.UI.Xaml.Controls.IProgressBarFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressBarStatics[] = L"Windows.UI.Xaml.Controls.IProgressBarStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsIndeterminateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShowErrorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ShowPausedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsIndeterminateProperty(This,value) )
    ( (This)->lpVtbl->get_ShowErrorProperty(This,value) )
    ( (This)->lpVtbl->get_ShowPausedProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressRing[] = L"Windows.UI.Xaml.Controls.IProgressRing";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsActive )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsActive )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsActive(This,value) )
    ( (This)->lpVtbl->put_IsActive(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressRingStatics[] = L"Windows.UI.Xaml.Controls.IProgressRingStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsActiveProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsActiveProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRadioButton[] = L"Windows.UI.Xaml.Controls.IRadioButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GroupName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GroupName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GroupName(This,value) )
    ( (This)->lpVtbl->put_GroupName(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRadioButtonFactory[] = L"Windows.UI.Xaml.Controls.IRadioButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRadioButtonStatics[] = L"Windows.UI.Xaml.Controls.IRadioButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GroupNameProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GroupNameProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingControl[] = L"Windows.UI.Xaml.Controls.IRatingControl";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Caption )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Caption )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InitialSetValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_InitialSetValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsClearEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsClearEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsReadOnly )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxRating )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxRating )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemInfo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemInfo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Value )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Value )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  DOUBLE value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ValueChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRatingControl_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ValueChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Caption(This,value) )
    ( (This)->lpVtbl->put_Caption(This,value) )
    ( (This)->lpVtbl->get_InitialSetValue(This,value) )
    ( (This)->lpVtbl->put_InitialSetValue(This,value) )
    ( (This)->lpVtbl->get_IsClearEnabled(This,value) )
    ( (This)->lpVtbl->put_IsClearEnabled(This,value) )
    ( (This)->lpVtbl->get_IsReadOnly(This,value) )
    ( (This)->lpVtbl->put_IsReadOnly(This,value) )
    ( (This)->lpVtbl->get_MaxRating(This,value) )
    ( (This)->lpVtbl->put_MaxRating(This,value) )
    ( (This)->lpVtbl->get_PlaceholderValue(This,value) )
    ( (This)->lpVtbl->put_PlaceholderValue(This,value) )
    ( (This)->lpVtbl->get_ItemInfo(This,value) )
    ( (This)->lpVtbl->put_ItemInfo(This,value) )
    ( (This)->lpVtbl->get_Value(This,value) )
    ( (This)->lpVtbl->put_Value(This,value) )
    ( (This)->lpVtbl->add_ValueChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ValueChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingControlFactory[] = L"Windows.UI.Xaml.Controls.IRatingControlFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingControlStatics[] = L"Windows.UI.Xaml.Controls.IRatingControlStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CaptionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InitialSetValueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsClearEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsReadOnlyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxRatingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderValueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemInfoProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ValueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CaptionProperty(This,value) )
    ( (This)->lpVtbl->get_InitialSetValueProperty(This,value) )
    ( (This)->lpVtbl->get_IsClearEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsReadOnlyProperty(This,value) )
    ( (This)->lpVtbl->get_MaxRatingProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderValueProperty(This,value) )
    ( (This)->lpVtbl->get_ItemInfoProperty(This,value) )
    ( (This)->lpVtbl->get_ValueProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemFontInfo[] = L"Windows.UI.Xaml.Controls.IRatingItemFontInfo";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DisabledGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisabledGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Glyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Glyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PointerOverGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverPlaceholderGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PointerOverPlaceholderGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_UnsetGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_UnsetGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * This,
                  __RPC__in HSTRING value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DisabledGlyph(This,value) )
    ( (This)->lpVtbl->put_DisabledGlyph(This,value) )
    ( (This)->lpVtbl->get_Glyph(This,value) )
    ( (This)->lpVtbl->put_Glyph(This,value) )
    ( (This)->lpVtbl->get_PointerOverGlyph(This,value) )
    ( (This)->lpVtbl->put_PointerOverGlyph(This,value) )
    ( (This)->lpVtbl->get_PointerOverPlaceholderGlyph(This,value) )
    ( (This)->lpVtbl->put_PointerOverPlaceholderGlyph(This,value) )
    ( (This)->lpVtbl->get_PlaceholderGlyph(This,value) )
    ( (This)->lpVtbl->put_PlaceholderGlyph(This,value) )
    ( (This)->lpVtbl->get_UnsetGlyph(This,value) )
    ( (This)->lpVtbl->put_UnsetGlyph(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemFontInfoFactory[] = L"Windows.UI.Xaml.Controls.IRatingItemFontInfoFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemFontInfoStatics[] = L"Windows.UI.Xaml.Controls.IRatingItemFontInfoStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DisabledGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverPlaceholderGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_UnsetGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DisabledGlyphProperty(This,value) )
    ( (This)->lpVtbl->get_GlyphProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderGlyphProperty(This,value) )
    ( (This)->lpVtbl->get_PointerOverGlyphProperty(This,value) )
    ( (This)->lpVtbl->get_PointerOverPlaceholderGlyphProperty(This,value) )
    ( (This)->lpVtbl->get_UnsetGlyphProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemImageInfo[] = L"Windows.UI.Xaml.Controls.IRatingItemImageInfo";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DisabledImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisabledImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Image )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Image )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PointerOverImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverPlaceholderImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PointerOverPlaceholderImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_UnsetImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_UnsetImage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DisabledImage(This,value) )
    ( (This)->lpVtbl->put_DisabledImage(This,value) )
    ( (This)->lpVtbl->get_Image(This,value) )
    ( (This)->lpVtbl->put_Image(This,value) )
    ( (This)->lpVtbl->get_PlaceholderImage(This,value) )
    ( (This)->lpVtbl->put_PlaceholderImage(This,value) )
    ( (This)->lpVtbl->get_PointerOverImage(This,value) )
    ( (This)->lpVtbl->put_PointerOverImage(This,value) )
    ( (This)->lpVtbl->get_PointerOverPlaceholderImage(This,value) )
    ( (This)->lpVtbl->put_PointerOverPlaceholderImage(This,value) )
    ( (This)->lpVtbl->get_UnsetImage(This,value) )
    ( (This)->lpVtbl->put_UnsetImage(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemImageInfoFactory[] = L"Windows.UI.Xaml.Controls.IRatingItemImageInfoFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemImageInfoStatics[] = L"Windows.UI.Xaml.Controls.IRatingItemImageInfoStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DisabledImageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ImageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderImageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverImageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PointerOverPlaceholderImageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_UnsetImageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DisabledImageProperty(This,value) )
    ( (This)->lpVtbl->get_ImageProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderImageProperty(This,value) )
    ( (This)->lpVtbl->get_PointerOverImageProperty(This,value) )
    ( (This)->lpVtbl->get_PointerOverPlaceholderImageProperty(This,value) )
    ( (This)->lpVtbl->get_UnsetImageProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemInfo[] = L"Windows.UI.Xaml.Controls.IRatingItemInfo";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRatingItemInfoFactory[] = L"Windows.UI.Xaml.Controls.IRatingItemInfoFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshContainer[] = L"Windows.UI.Xaml.Controls.IRefreshContainer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Visualizer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Visualizer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PullDirection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PullDirection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_RefreshRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshContainer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_RefreshRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *RequestRefresh )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Visualizer(This,value) )
    ( (This)->lpVtbl->put_Visualizer(This,value) )
    ( (This)->lpVtbl->get_PullDirection(This,value) )
    ( (This)->lpVtbl->put_PullDirection(This,value) )
    ( (This)->lpVtbl->add_RefreshRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_RefreshRequested(This,token) )
    ( (This)->lpVtbl->RequestRefresh(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshContainerFactory[] = L"Windows.UI.Xaml.Controls.IRefreshContainerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshContainerStatics[] = L"Windows.UI.Xaml.Controls.IRefreshContainerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_VisualizerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PullDirectionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_VisualizerProperty(This,value) )
    ( (This)->lpVtbl->get_PullDirectionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshInteractionRatioChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InteractionRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs * This,
                           __RPC__out DOUBLE * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InteractionRatio(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIDeferral * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetDeferral(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshStateChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IRefreshStateChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldState(This,value) )
    ( (This)->lpVtbl->get_NewState(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshVisualizer[] = L"Windows.UI.Xaml.Controls.IRefreshVisualizer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *RequestRefresh )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_State )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_RefreshRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_RefreshRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_RefreshStateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRefreshVisualizer_Windows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_RefreshStateChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->RequestRefresh(This) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
    ( (This)->lpVtbl->get_State(This,value) )
    ( (This)->lpVtbl->add_RefreshRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_RefreshRequested(This,token) )
    ( (This)->lpVtbl->add_RefreshStateChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_RefreshStateChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshVisualizerFactory[] = L"Windows.UI.Xaml.Controls.IRefreshVisualizerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRefreshVisualizerStatics[] = L"Windows.UI.Xaml.Controls.IRefreshVisualizerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InfoProviderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InfoProviderProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
    ( (This)->lpVtbl->get_StateProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRelativePanel[] = L"Windows.UI.Xaml.Controls.IRelativePanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CCornerRadius value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BorderBrush(This,value) )
    ( (This)->lpVtbl->put_BorderBrush(This,value) )
    ( (This)->lpVtbl->get_BorderThickness(This,value) )
    ( (This)->lpVtbl->put_BorderThickness(This,value) )
    ( (This)->lpVtbl->get_CornerRadius(This,value) )
    ( (This)->lpVtbl->put_CornerRadius(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRelativePanel2[] = L"Windows.UI.Xaml.Controls.IRelativePanel2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->put_BackgroundSizing(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRelativePanelFactory[] = L"Windows.UI.Xaml.Controls.IRelativePanelFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRelativePanelStatics[] = L"Windows.UI.Xaml.Controls.IRelativePanelStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LeftOfProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetLeftOf )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetLeftOf )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AboveProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAbove )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAbove )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RightOfProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetRightOf )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetRightOf )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BelowProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetBelow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetBelow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignHorizontalCenterWithProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignHorizontalCenterWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignHorizontalCenterWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignVerticalCenterWithProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignVerticalCenterWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignVerticalCenterWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignLeftWithProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignLeftWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignLeftWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignTopWithProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignTopWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignTopWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignRightWithProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignRightWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignRightWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignBottomWithProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignBottomWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignBottomWith )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignLeftWithPanelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignLeftWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignLeftWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignTopWithPanelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignTopWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignTopWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignRightWithPanelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignRightWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignRightWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignBottomWithPanelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignBottomWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignBottomWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignHorizontalCenterWithPanelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignHorizontalCenterWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignHorizontalCenterWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AlignVerticalCenterWithPanelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetAlignVerticalCenterWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetAlignVerticalCenterWithPanel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadiusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LeftOfProperty(This,value) )
    ( (This)->lpVtbl->GetLeftOf(This,element,result) )
    ( (This)->lpVtbl->SetLeftOf(This,element,value) )
    ( (This)->lpVtbl->get_AboveProperty(This,value) )
    ( (This)->lpVtbl->GetAbove(This,element,result) )
    ( (This)->lpVtbl->SetAbove(This,element,value) )
    ( (This)->lpVtbl->get_RightOfProperty(This,value) )
    ( (This)->lpVtbl->GetRightOf(This,element,result) )
    ( (This)->lpVtbl->SetRightOf(This,element,value) )
    ( (This)->lpVtbl->get_BelowProperty(This,value) )
    ( (This)->lpVtbl->GetBelow(This,element,result) )
    ( (This)->lpVtbl->SetBelow(This,element,value) )
    ( (This)->lpVtbl->get_AlignHorizontalCenterWithProperty(This,value) )
    ( (This)->lpVtbl->GetAlignHorizontalCenterWith(This,element,result) )
    ( (This)->lpVtbl->SetAlignHorizontalCenterWith(This,element,value) )
    ( (This)->lpVtbl->get_AlignVerticalCenterWithProperty(This,value) )
    ( (This)->lpVtbl->GetAlignVerticalCenterWith(This,element,result) )
    ( (This)->lpVtbl->SetAlignVerticalCenterWith(This,element,value) )
    ( (This)->lpVtbl->get_AlignLeftWithProperty(This,value) )
    ( (This)->lpVtbl->GetAlignLeftWith(This,element,result) )
    ( (This)->lpVtbl->SetAlignLeftWith(This,element,value) )
    ( (This)->lpVtbl->get_AlignTopWithProperty(This,value) )
    ( (This)->lpVtbl->GetAlignTopWith(This,element,result) )
    ( (This)->lpVtbl->SetAlignTopWith(This,element,value) )
    ( (This)->lpVtbl->get_AlignRightWithProperty(This,value) )
    ( (This)->lpVtbl->GetAlignRightWith(This,element,result) )
    ( (This)->lpVtbl->SetAlignRightWith(This,element,value) )
    ( (This)->lpVtbl->get_AlignBottomWithProperty(This,value) )
    ( (This)->lpVtbl->GetAlignBottomWith(This,element,result) )
    ( (This)->lpVtbl->SetAlignBottomWith(This,element,value) )
    ( (This)->lpVtbl->get_AlignLeftWithPanelProperty(This,value) )
    ( (This)->lpVtbl->GetAlignLeftWithPanel(This,element,result) )
    ( (This)->lpVtbl->SetAlignLeftWithPanel(This,element,value) )
    ( (This)->lpVtbl->get_AlignTopWithPanelProperty(This,value) )
    ( (This)->lpVtbl->GetAlignTopWithPanel(This,element,result) )
    ( (This)->lpVtbl->SetAlignTopWithPanel(This,element,value) )
    ( (This)->lpVtbl->get_AlignRightWithPanelProperty(This,value) )
    ( (This)->lpVtbl->GetAlignRightWithPanel(This,element,result) )
    ( (This)->lpVtbl->SetAlignRightWithPanel(This,element,value) )
    ( (This)->lpVtbl->get_AlignBottomWithPanelProperty(This,value) )
    ( (This)->lpVtbl->GetAlignBottomWithPanel(This,element,result) )
    ( (This)->lpVtbl->SetAlignBottomWithPanel(This,element,value) )
    ( (This)->lpVtbl->get_AlignHorizontalCenterWithPanelProperty(This,value) )
    ( (This)->lpVtbl->GetAlignHorizontalCenterWithPanel(This,element,result) )
    ( (This)->lpVtbl->SetAlignHorizontalCenterWithPanel(This,element,value) )
    ( (This)->lpVtbl->get_AlignVerticalCenterWithPanelProperty(This,value) )
    ( (This)->lpVtbl->GetAlignVerticalCenterWithPanel(This,element,result) )
    ( (This)->lpVtbl->SetAlignVerticalCenterWithPanel(This,element,value) )
    ( (This)->lpVtbl->get_BorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_BorderThicknessProperty(This,value) )
    ( (This)->lpVtbl->get_CornerRadiusProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRelativePanelStatics2[] = L"Windows.UI.Xaml.Controls.IRelativePanelStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox[] = L"Windows.UI.Xaml.Controls.IRichEditBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsReadOnly )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AcceptsReturn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextWrapping value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSpellCheckEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextPredictionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Document )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CText_CITextDocument * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InputScope )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_InputScope )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsReadOnly(This,value) )
    ( (This)->lpVtbl->put_IsReadOnly(This,value) )
    ( (This)->lpVtbl->get_AcceptsReturn(This,value) )
    ( (This)->lpVtbl->put_AcceptsReturn(This,value) )
    ( (This)->lpVtbl->get_TextAlignment(This,value) )
    ( (This)->lpVtbl->put_TextAlignment(This,value) )
    ( (This)->lpVtbl->get_TextWrapping(This,value) )
    ( (This)->lpVtbl->put_TextWrapping(This,value) )
    ( (This)->lpVtbl->get_IsSpellCheckEnabled(This,value) )
    ( (This)->lpVtbl->put_IsSpellCheckEnabled(This,value) )
    ( (This)->lpVtbl->get_IsTextPredictionEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextPredictionEnabled(This,value) )
    ( (This)->lpVtbl->get_Document(This,value) )
    ( (This)->lpVtbl->get_InputScope(This,value) )
    ( (This)->lpVtbl->put_InputScope(This,value) )
    ( (This)->lpVtbl->add_TextChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_TextChanged(This,token) )
    ( (This)->lpVtbl->add_SelectionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanged(This,token) )
    ( (This)->lpVtbl->add_ContextMenuOpening(This,handler,token) )
    ( (This)->lpVtbl->remove_ContextMenuOpening(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox2[] = L"Windows.UI.Xaml.Controls.IRichEditBox2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PreventKeyboardDisplayOnProgrammaticFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Paste )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Paste )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_PlaceholderText(This,value) )
    ( (This)->lpVtbl->put_PlaceholderText(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->put_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->get_PreventKeyboardDisplayOnProgrammaticFocus(This,value) )
    ( (This)->lpVtbl->put_PreventKeyboardDisplayOnProgrammaticFocus(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->put_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->add_Paste(This,handler,token) )
    ( (This)->lpVtbl->remove_Paste(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox3[] = L"Windows.UI.Xaml.Controls.IRichEditBox3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_TextCompositionStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextCompositionStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextCompositionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextCompositionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextCompositionEnded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextCompositionEnded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  EventRegistrationToken token
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DesiredCandidateWindowAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DesiredCandidateWindowAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CandidateWindowBoundsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CandidateWindowBoundsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_TextCompositionStarted(This,handler,token) )
    ( (This)->lpVtbl->remove_TextCompositionStarted(This,token) )
    ( (This)->lpVtbl->add_TextCompositionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_TextCompositionChanged(This,token) )
    ( (This)->lpVtbl->add_TextCompositionEnded(This,handler,token) )
    ( (This)->lpVtbl->remove_TextCompositionEnded(This,token) )
    ( (This)->lpVtbl->get_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->put_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->get_DesiredCandidateWindowAlignment(This,value) )
    ( (This)->lpVtbl->put_DesiredCandidateWindowAlignment(This,value) )
    ( (This)->lpVtbl->add_CandidateWindowBoundsChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_CandidateWindowBoundsChanged(This,token) )
    ( (This)->lpVtbl->add_TextChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_TextChanging(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox4[] = L"Windows.UI.Xaml.Controls.IRichEditBox4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetLinguisticAlternativesAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This,
                           __RPC__deref_out_opt __FIAsyncOperation_1___FIVectorView_1_HSTRING * * operation
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ClipboardCopyFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ClipboardCopyFormat )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetLinguisticAlternativesAsync(This,operation) )
    ( (This)->lpVtbl->get_ClipboardCopyFormat(This,value) )
    ( (This)->lpVtbl->put_ClipboardCopyFormat(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox5[] = L"Windows.UI.Xaml.Controls.IRichEditBox5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorWhenNotFocused )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColorWhenNotFocused )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 * This,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionHighlightColorWhenNotFocused(This,value) )
    ( (This)->lpVtbl->put_SelectionHighlightColorWhenNotFocused(This,value) )
    ( (This)->lpVtbl->get_MaxLength(This,value) )
    ( (This)->lpVtbl->put_MaxLength(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox6[] = L"Windows.UI.Xaml.Controls.IRichEditBox6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterCasing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CharacterCasing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisabledFormattingAccelerators )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisabledFormattingAccelerators )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CopyingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CopyingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CuttingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CuttingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->get_CharacterCasing(This,value) )
    ( (This)->lpVtbl->put_CharacterCasing(This,value) )
    ( (This)->lpVtbl->get_DisabledFormattingAccelerators(This,value) )
    ( (This)->lpVtbl->put_DisabledFormattingAccelerators(This,value) )
    ( (This)->lpVtbl->add_CopyingToClipboard(This,handler,token) )
    ( (This)->lpVtbl->remove_CopyingToClipboard(This,token) )
    ( (This)->lpVtbl->add_CuttingToClipboard(This,handler,token) )
    ( (This)->lpVtbl->remove_CuttingToClipboard(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox7[] = L"Windows.UI.Xaml.Controls.IRichEditBox7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentLinkForegroundColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentLinkForegroundColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentLinkBackgroundColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentLinkBackgroundColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentLinkProviders )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ContentLinkProviders )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HandwritingView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HandwritingView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHandwritingViewEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHandwritingViewEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContentLinkChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CContentLinkChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContentLinkChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContentLinkInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContentLinkInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentLinkForegroundColor(This,value) )
    ( (This)->lpVtbl->put_ContentLinkForegroundColor(This,value) )
    ( (This)->lpVtbl->get_ContentLinkBackgroundColor(This,value) )
    ( (This)->lpVtbl->put_ContentLinkBackgroundColor(This,value) )
    ( (This)->lpVtbl->get_ContentLinkProviders(This,value) )
    ( (This)->lpVtbl->put_ContentLinkProviders(This,value) )
    ( (This)->lpVtbl->get_HandwritingView(This,value) )
    ( (This)->lpVtbl->put_HandwritingView(This,value) )
    ( (This)->lpVtbl->get_IsHandwritingViewEnabled(This,value) )
    ( (This)->lpVtbl->put_IsHandwritingViewEnabled(This,value) )
    ( (This)->lpVtbl->add_ContentLinkChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ContentLinkChanged(This,token) )
    ( (This)->lpVtbl->add_ContentLinkInvoked(This,handler,token) )
    ( (This)->lpVtbl->remove_ContentLinkInvoked(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox8[] = L"Windows.UI.Xaml.Controls.IRichEditBox8";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextDocument )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CText_CITextDocument * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProofingMenuFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                  __RPC__in_opt IInspectable * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichEditBox_Windows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextDocument(This,value) )
    ( (This)->lpVtbl->get_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->put_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->get_ProofingMenuFlyout(This,value) )
    ( (This)->lpVtbl->get_Description(This,value) )
    ( (This)->lpVtbl->put_Description(This,value) )
    ( (This)->lpVtbl->add_SelectionChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanging(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxFactory[] = L"Windows.UI.Xaml.Controls.IRichEditBoxFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxSelectionChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionStart(This,value) )
    ( (This)->lpVtbl->get_SelectionLength(This,value) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsReadOnlyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturnProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InputScopeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsReadOnlyProperty(This,value) )
    ( (This)->lpVtbl->get_AcceptsReturnProperty(This,value) )
    ( (This)->lpVtbl->get_TextAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_TextWrappingProperty(This,value) )
    ( (This)->lpVtbl->get_IsSpellCheckEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsTextPredictionEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_InputScopeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics2[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderTextProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColorProperty(This,value) )
    ( (This)->lpVtbl->get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics3[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DesiredCandidateWindowAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DesiredCandidateWindowAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics4[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ClipboardCopyFormatProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ClipboardCopyFormatProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics5[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorWhenNotFocusedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionHighlightColorWhenNotFocusedProperty(This,value) )
    ( (This)->lpVtbl->get_MaxLengthProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics6[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterCasingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisabledFormattingAcceleratorsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalTextAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_CharacterCasingProperty(This,value) )
    ( (This)->lpVtbl->get_DisabledFormattingAcceleratorsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics7[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentLinkForegroundColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentLinkBackgroundColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentLinkProvidersProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HandwritingViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHandwritingViewEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentLinkForegroundColorProperty(This,value) )
    ( (This)->lpVtbl->get_ContentLinkBackgroundColorProperty(This,value) )
    ( (This)->lpVtbl->get_ContentLinkProvidersProperty(This,value) )
    ( (This)->lpVtbl->get_HandwritingViewProperty(This,value) )
    ( (This)->lpVtbl->get_IsHandwritingViewEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics8[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics8";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProofingMenuFlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DescriptionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionFlyoutProperty(This,value) )
    ( (This)->lpVtbl->get_ProofingMenuFlyoutProperty(This,value) )
    ( (This)->lpVtbl->get_DescriptionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxTextChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxTextChangingEventArgs2[] = L"Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsContentChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsContentChanging(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock[] = L"Windows.UI.Xaml.Controls.IRichTextBlock";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CText_CFontStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextWrapping value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextTrimming )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextTrimming * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextTrimming )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextTrimming value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Blocks )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LineHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategy )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LineStackingStrategy )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OverflowContentTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextSelectionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentEnd )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BaselineOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out DOUBLE * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SelectAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This
        );
    HRESULT ( STDMETHODCALLTYPE *Select )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * start,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * end
        );
    HRESULT ( STDMETHODCALLTYPE *GetPositionFromPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CFoundation_CPoint point,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * result
        );
    HRESULT ( STDMETHODCALLTYPE *Focus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CFocusState value,
                           __RPC__out boolean * result
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextIndent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextIndent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
                  DOUBLE value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FontSize(This,value) )
    ( (This)->lpVtbl->put_FontSize(This,value) )
    ( (This)->lpVtbl->get_FontFamily(This,value) )
    ( (This)->lpVtbl->put_FontFamily(This,value) )
    ( (This)->lpVtbl->get_FontWeight(This,value) )
    ( (This)->lpVtbl->put_FontWeight(This,value) )
    ( (This)->lpVtbl->get_FontStyle(This,value) )
    ( (This)->lpVtbl->put_FontStyle(This,value) )
    ( (This)->lpVtbl->get_FontStretch(This,value) )
    ( (This)->lpVtbl->put_FontStretch(This,value) )
    ( (This)->lpVtbl->get_Foreground(This,value) )
    ( (This)->lpVtbl->put_Foreground(This,value) )
    ( (This)->lpVtbl->get_TextWrapping(This,value) )
    ( (This)->lpVtbl->put_TextWrapping(This,value) )
    ( (This)->lpVtbl->get_TextTrimming(This,value) )
    ( (This)->lpVtbl->put_TextTrimming(This,value) )
    ( (This)->lpVtbl->get_TextAlignment(This,value) )
    ( (This)->lpVtbl->put_TextAlignment(This,value) )
    ( (This)->lpVtbl->get_Blocks(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
    ( (This)->lpVtbl->get_LineHeight(This,value) )
    ( (This)->lpVtbl->put_LineHeight(This,value) )
    ( (This)->lpVtbl->get_LineStackingStrategy(This,value) )
    ( (This)->lpVtbl->put_LineStackingStrategy(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->put_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->get_OverflowContentTarget(This,value) )
    ( (This)->lpVtbl->put_OverflowContentTarget(This,value) )
    ( (This)->lpVtbl->get_IsTextSelectionEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextSelectionEnabled(This,value) )
    ( (This)->lpVtbl->get_HasOverflowContent(This,value) )
    ( (This)->lpVtbl->get_SelectedText(This,value) )
    ( (This)->lpVtbl->get_ContentStart(This,value) )
    ( (This)->lpVtbl->get_ContentEnd(This,value) )
    ( (This)->lpVtbl->get_SelectionStart(This,value) )
    ( (This)->lpVtbl->get_SelectionEnd(This,value) )
    ( (This)->lpVtbl->get_BaselineOffset(This,value) )
    ( (This)->lpVtbl->add_SelectionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanged(This,token) )
    ( (This)->lpVtbl->add_ContextMenuOpening(This,handler,token) )
    ( (This)->lpVtbl->remove_ContextMenuOpening(This,token) )
    ( (This)->lpVtbl->SelectAll(This) )
    ( (This)->lpVtbl->Select(This,start,end) )
    ( (This)->lpVtbl->GetPositionFromPoint(This,point,result) )
    ( (This)->lpVtbl->Focus(This,value,result) )
    ( (This)->lpVtbl->get_TextIndent(This,value) )
    ( (This)->lpVtbl->put_TextIndent(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock2[] = L"Windows.UI.Xaml.Controls.IRichTextBlock2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextLineBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextLineBounds * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextLineBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OpticalMarginAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                  __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MaxLines(This,value) )
    ( (This)->lpVtbl->put_MaxLines(This,value) )
    ( (This)->lpVtbl->get_TextLineBounds(This,value) )
    ( (This)->lpVtbl->put_TextLineBounds(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->put_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->get_OpticalMarginAlignment(This,value) )
    ( (This)->lpVtbl->put_OpticalMarginAlignment(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->put_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->put_TextReadingOrder(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock3[] = L"Windows.UI.Xaml.Controls.IRichTextBlock3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextScaleFactorEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock4[] = L"Windows.UI.Xaml.Controls.IRichTextBlock4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextDecorations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CTextDecorations * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextDecorations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 * This,
                  __x_ABI_CWindows_CUI_CText_CTextDecorations value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextDecorations(This,value) )
    ( (This)->lpVtbl->put_TextDecorations(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock5[] = L"Windows.UI.Xaml.Controls.IRichTextBlock5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextTrimmed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextHighlighters )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_IsTextTrimmedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_IsTextTrimmedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextTrimmed(This,value) )
    ( (This)->lpVtbl->get_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->get_TextHighlighters(This,value) )
    ( (This)->lpVtbl->add_IsTextTrimmedChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_IsTextTrimmedChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock6[] = L"Windows.UI.Xaml.Controls.IRichTextBlock6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
    HRESULT ( STDMETHODCALLTYPE *CopySelectionToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->put_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->CopySelectionToClipboard(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflow[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflow";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OverflowContentTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentEnd )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BaselineOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                           __RPC__out DOUBLE * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetPositionFromPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                  __x_ABI_CWindows_CFoundation_CPoint point,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * result
        );
    HRESULT ( STDMETHODCALLTYPE *Focus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
                  __x_ABI_CWindows_CUI_CXaml_CFocusState value,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OverflowContentTarget(This,value) )
    ( (This)->lpVtbl->put_OverflowContentTarget(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
    ( (This)->lpVtbl->get_ContentSource(This,value) )
    ( (This)->lpVtbl->get_HasOverflowContent(This,value) )
    ( (This)->lpVtbl->get_ContentStart(This,value) )
    ( (This)->lpVtbl->get_ContentEnd(This,value) )
    ( (This)->lpVtbl->get_BaselineOffset(This,value) )
    ( (This)->lpVtbl->GetPositionFromPoint(This,point,result) )
    ( (This)->lpVtbl->Focus(This,value,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflow2[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflow2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MaxLines(This,value) )
    ( (This)->lpVtbl->put_MaxLines(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflow3[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflow3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextTrimmed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This,
                           __RPC__out boolean * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_IsTextTrimmedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CRichTextBlockOverflow_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_IsTextTrimmedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextTrimmed(This,value) )
    ( (This)->lpVtbl->add_IsTextTrimmedChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_IsTextTrimmedChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflowStatics[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTargetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OverflowContentTargetProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
    ( (This)->lpVtbl->get_HasOverflowContentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflowStatics2[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MaxLinesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MaxLinesProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflowStatics3[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextTrimmedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextTrimmedProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextTrimmingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTargetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextIndentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_FontStretchProperty(This,value) )
    ( (This)->lpVtbl->get_ForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_TextWrappingProperty(This,value) )
    ( (This)->lpVtbl->get_TextTrimmingProperty(This,value) )
    ( (This)->lpVtbl->get_TextAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
    ( (This)->lpVtbl->get_LineHeightProperty(This,value) )
    ( (This)->lpVtbl->get_LineStackingStrategyProperty(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacingProperty(This,value) )
    ( (This)->lpVtbl->get_OverflowContentTargetProperty(This,value) )
    ( (This)->lpVtbl->get_IsTextSelectionEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_HasOverflowContentProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedTextProperty(This,value) )
    ( (This)->lpVtbl->get_TextIndentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics2[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MaxLinesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextLineBoundsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MaxLinesProperty(This,value) )
    ( (This)->lpVtbl->get_TextLineBoundsProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColorProperty(This,value) )
    ( (This)->lpVtbl->get_OpticalMarginAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics3[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics4[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextDecorationsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextDecorationsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics5[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextTrimmedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextTrimmedProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalTextAlignmentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics6[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionFlyoutProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRowDefinition[] = L"Windows.UI.Xaml.Controls.IRowDefinition";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Height )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Height )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                  __x_ABI_CWindows_CUI_CXaml_CGridLength value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ActualHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
                           __RPC__out DOUBLE * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Height(This,value) )
    ( (This)->lpVtbl->put_Height(This,value) )
    ( (This)->lpVtbl->get_MaxHeight(This,value) )
    ( (This)->lpVtbl->put_MaxHeight(This,value) )
    ( (This)->lpVtbl->get_MinHeight(This,value) )
    ( (This)->lpVtbl->put_MinHeight(This,value) )
    ( (This)->lpVtbl->get_ActualHeight(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRowDefinitionStatics[] = L"Windows.UI.Xaml.Controls.IRowDefinitionStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeightProperty(This,value) )
    ( (This)->lpVtbl->get_MaxHeightProperty(This,value) )
    ( (This)->lpVtbl->get_MinHeightProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollAnchorProvider[] = L"Windows.UI.Xaml.Controls.IScrollAnchorProvider";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProviderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CurrentAnchor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
    HRESULT ( STDMETHODCALLTYPE *RegisterAnchorCandidate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element
        );
    HRESULT ( STDMETHODCALLTYPE *UnregisterAnchorCandidate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProviderVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProviderVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CurrentAnchor(This,value) )
    ( (This)->lpVtbl->RegisterAnchorCandidate(This,element) )
    ( (This)->lpVtbl->UnregisterAnchorCandidate(This,element) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollContentPresenter[] = L"Windows.UI.Xaml.Controls.IScrollContentPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanVerticallyScroll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanVerticallyScroll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanHorizontallyScroll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanHorizontallyScroll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExtentWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExtentHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ViewportWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ViewportHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ScrollOwner )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ScrollOwner )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                  __RPC__in_opt IInspectable * value
        );
    HRESULT ( STDMETHODCALLTYPE *LineUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *LineDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *LineLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *LineRight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *PageUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *PageDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *PageLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *PageRight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *MouseWheelUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *MouseWheelDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *MouseWheelLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *MouseWheelRight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This
        );
    HRESULT ( STDMETHODCALLTYPE *SetHorizontalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                  DOUBLE offset
        );
    HRESULT ( STDMETHODCALLTYPE *SetVerticalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                  DOUBLE offset
        );
    HRESULT ( STDMETHODCALLTYPE *MakeVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * visual,
                  __x_ABI_CWindows_CFoundation_CRect rectangle,
                           __RPC__out __x_ABI_CWindows_CFoundation_CRect * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanVerticallyScroll(This,value) )
    ( (This)->lpVtbl->put_CanVerticallyScroll(This,value) )
    ( (This)->lpVtbl->get_CanHorizontallyScroll(This,value) )
    ( (This)->lpVtbl->put_CanHorizontallyScroll(This,value) )
    ( (This)->lpVtbl->get_ExtentWidth(This,value) )
    ( (This)->lpVtbl->get_ExtentHeight(This,value) )
    ( (This)->lpVtbl->get_ViewportWidth(This,value) )
    ( (This)->lpVtbl->get_ViewportHeight(This,value) )
    ( (This)->lpVtbl->get_HorizontalOffset(This,value) )
    ( (This)->lpVtbl->get_VerticalOffset(This,value) )
    ( (This)->lpVtbl->get_ScrollOwner(This,value) )
    ( (This)->lpVtbl->put_ScrollOwner(This,value) )
    ( (This)->lpVtbl->LineUp(This) )
    ( (This)->lpVtbl->LineDown(This) )
    ( (This)->lpVtbl->LineLeft(This) )
    ( (This)->lpVtbl->LineRight(This) )
    ( (This)->lpVtbl->PageUp(This) )
    ( (This)->lpVtbl->PageDown(This) )
    ( (This)->lpVtbl->PageLeft(This) )
    ( (This)->lpVtbl->PageRight(This) )
    ( (This)->lpVtbl->MouseWheelUp(This) )
    ( (This)->lpVtbl->MouseWheelDown(This) )
    ( (This)->lpVtbl->MouseWheelLeft(This) )
    ( (This)->lpVtbl->MouseWheelRight(This) )
    ( (This)->lpVtbl->SetHorizontalOffset(This,offset) )
    ( (This)->lpVtbl->SetVerticalOffset(This,offset) )
    ( (This)->lpVtbl->MakeVisible(This,visual,rectangle,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollContentPresenter2[] = L"Windows.UI.Xaml.Controls.IScrollContentPresenter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanContentRenderOutsideBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanContentRenderOutsideBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SizesContentToTemplatedParent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SizesContentToTemplatedParent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanContentRenderOutsideBounds(This,value) )
    ( (This)->lpVtbl->put_CanContentRenderOutsideBounds(This,value) )
    ( (This)->lpVtbl->get_SizesContentToTemplatedParent(This,value) )
    ( (This)->lpVtbl->put_SizesContentToTemplatedParent(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollContentPresenterStatics2[] = L"Windows.UI.Xaml.Controls.IScrollContentPresenterStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanContentRenderOutsideBoundsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SizesContentToTemplatedParentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanContentRenderOutsideBoundsProperty(This,value) )
    ( (This)->lpVtbl->get_SizesContentToTemplatedParentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewer[] = L"Windows.UI.Xaml.Controls.IScrollViewer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHorizontalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVerticalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsVerticalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHorizontalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVerticalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsVerticalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsZoomChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsScrollInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsScrollInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsZoomInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ZoomMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalSnapPointsAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalSnapPointsAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalSnapPointsType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalSnapPointsType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPointsType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ZoomSnapPointsType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ViewportWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ScrollableWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ComputedHorizontalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExtentWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ViewportHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ScrollableHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ComputedVerticalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExtentHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinZoomFactor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out FLOAT * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinZoomFactor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  FLOAT value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxZoomFactor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out FLOAT * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxZoomFactor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  FLOAT value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out FLOAT * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPoints )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__deref_out_opt __FIVector_1_float * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ViewChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ViewChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  EventRegistrationToken token
        );
    DEPRECATED("ScrollToHorizontalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
                      HRESULT ( STDMETHODCALLTYPE *ScrollToHorizontalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  DOUBLE offset
        );
    DEPRECATED("ScrollToVerticalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
                      HRESULT ( STDMETHODCALLTYPE *ScrollToVerticalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  DOUBLE offset
        );
    DEPRECATED("ZoomToFactor may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
                      HRESULT ( STDMETHODCALLTYPE *ZoomToFactor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  FLOAT factor
        );
    HRESULT ( STDMETHODCALLTYPE *InvalidateScrollInfo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsDeferredScrollingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDeferredScrollingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BringIntoViewOnFocusChange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BringIntoViewOnFocusChange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalScrollBarVisibility(This,value) )
    ( (This)->lpVtbl->put_HorizontalScrollBarVisibility(This,value) )
    ( (This)->lpVtbl->get_VerticalScrollBarVisibility(This,value) )
    ( (This)->lpVtbl->put_VerticalScrollBarVisibility(This,value) )
    ( (This)->lpVtbl->get_IsHorizontalRailEnabled(This,value) )
    ( (This)->lpVtbl->put_IsHorizontalRailEnabled(This,value) )
    ( (This)->lpVtbl->get_IsVerticalRailEnabled(This,value) )
    ( (This)->lpVtbl->put_IsVerticalRailEnabled(This,value) )
    ( (This)->lpVtbl->get_IsHorizontalScrollChainingEnabled(This,value) )
    ( (This)->lpVtbl->put_IsHorizontalScrollChainingEnabled(This,value) )
    ( (This)->lpVtbl->get_IsVerticalScrollChainingEnabled(This,value) )
    ( (This)->lpVtbl->put_IsVerticalScrollChainingEnabled(This,value) )
    ( (This)->lpVtbl->get_IsZoomChainingEnabled(This,value) )
    ( (This)->lpVtbl->put_IsZoomChainingEnabled(This,value) )
    ( (This)->lpVtbl->get_IsScrollInertiaEnabled(This,value) )
    ( (This)->lpVtbl->put_IsScrollInertiaEnabled(This,value) )
    ( (This)->lpVtbl->get_IsZoomInertiaEnabled(This,value) )
    ( (This)->lpVtbl->put_IsZoomInertiaEnabled(This,value) )
    ( (This)->lpVtbl->get_HorizontalScrollMode(This,value) )
    ( (This)->lpVtbl->put_HorizontalScrollMode(This,value) )
    ( (This)->lpVtbl->get_VerticalScrollMode(This,value) )
    ( (This)->lpVtbl->put_VerticalScrollMode(This,value) )
    ( (This)->lpVtbl->get_ZoomMode(This,value) )
    ( (This)->lpVtbl->put_ZoomMode(This,value) )
    ( (This)->lpVtbl->get_HorizontalSnapPointsAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalSnapPointsAlignment(This,value) )
    ( (This)->lpVtbl->get_VerticalSnapPointsAlignment(This,value) )
    ( (This)->lpVtbl->put_VerticalSnapPointsAlignment(This,value) )
    ( (This)->lpVtbl->get_HorizontalSnapPointsType(This,value) )
    ( (This)->lpVtbl->put_HorizontalSnapPointsType(This,value) )
    ( (This)->lpVtbl->get_VerticalSnapPointsType(This,value) )
    ( (This)->lpVtbl->put_VerticalSnapPointsType(This,value) )
    ( (This)->lpVtbl->get_ZoomSnapPointsType(This,value) )
    ( (This)->lpVtbl->put_ZoomSnapPointsType(This,value) )
    ( (This)->lpVtbl->get_HorizontalOffset(This,value) )
    ( (This)->lpVtbl->get_ViewportWidth(This,value) )
    ( (This)->lpVtbl->get_ScrollableWidth(This,value) )
    ( (This)->lpVtbl->get_ComputedHorizontalScrollBarVisibility(This,value) )
    ( (This)->lpVtbl->get_ExtentWidth(This,value) )
    ( (This)->lpVtbl->get_VerticalOffset(This,value) )
    ( (This)->lpVtbl->get_ViewportHeight(This,value) )
    ( (This)->lpVtbl->get_ScrollableHeight(This,value) )
    ( (This)->lpVtbl->get_ComputedVerticalScrollBarVisibility(This,value) )
    ( (This)->lpVtbl->get_ExtentHeight(This,value) )
    ( (This)->lpVtbl->get_MinZoomFactor(This,value) )
    ( (This)->lpVtbl->put_MinZoomFactor(This,value) )
    ( (This)->lpVtbl->get_MaxZoomFactor(This,value) )
    ( (This)->lpVtbl->put_MaxZoomFactor(This,value) )
    ( (This)->lpVtbl->get_ZoomFactor(This,value) )
    ( (This)->lpVtbl->get_ZoomSnapPoints(This,value) )
    ( (This)->lpVtbl->add_ViewChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ViewChanged(This,token) )
DEPRECATED("ScrollToHorizontalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
    ( (This)->lpVtbl->ScrollToHorizontalOffset(This,offset) )
DEPRECATED("ScrollToVerticalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
    ( (This)->lpVtbl->ScrollToVerticalOffset(This,offset) )
DEPRECATED("ZoomToFactor may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
    ( (This)->lpVtbl->ZoomToFactor(This,factor) )
    ( (This)->lpVtbl->InvalidateScrollInfo(This) )
    ( (This)->lpVtbl->get_IsDeferredScrollingEnabled(This,value) )
    ( (This)->lpVtbl->put_IsDeferredScrollingEnabled(This,value) )
    ( (This)->lpVtbl->get_BringIntoViewOnFocusChange(This,value) )
    ( (This)->lpVtbl->put_BringIntoViewOnFocusChange(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewer2[] = L"Windows.UI.Xaml.Controls.IScrollViewer2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TopLeftHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TopLeftHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LeftHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LeftHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TopHeader )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ViewChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                  __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ViewChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *ChangeView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                  __RPC__in_opt __FIReference_1_double * horizontalOffset,
                  __RPC__in_opt __FIReference_1_double * verticalOffset,
                  __RPC__in_opt __FIReference_1_float * zoomFactor,
                           __RPC__out boolean * result
        );
                    HRESULT ( STDMETHODCALLTYPE *ChangeViewWithOptionalAnimation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
                  __RPC__in_opt __FIReference_1_double * horizontalOffset,
                  __RPC__in_opt __FIReference_1_double * verticalOffset,
                  __RPC__in_opt __FIReference_1_float * zoomFactor,
                  boolean disableAnimation,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TopLeftHeader(This,value) )
    ( (This)->lpVtbl->put_TopLeftHeader(This,value) )
    ( (This)->lpVtbl->get_LeftHeader(This,value) )
    ( (This)->lpVtbl->put_LeftHeader(This,value) )
    ( (This)->lpVtbl->get_TopHeader(This,value) )
    ( (This)->lpVtbl->put_TopHeader(This,value) )
    ( (This)->lpVtbl->add_ViewChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_ViewChanging(This,token) )
    ( (This)->lpVtbl->ChangeView(This,horizontalOffset,verticalOffset,zoomFactor,result) )
    ( (This)->lpVtbl->ChangeViewWithOptionalAnimation(This,horizontalOffset,verticalOffset,zoomFactor,disableAnimation,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewer3[] = L"Windows.UI.Xaml.Controls.IScrollViewer3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_DirectManipulationStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DirectManipulationStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DirectManipulationCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
                  __RPC__in_opt __FIEventHandler_1_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DirectManipulationCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_DirectManipulationStarted(This,handler,token) )
    ( (This)->lpVtbl->remove_DirectManipulationStarted(This,token) )
    ( (This)->lpVtbl->add_DirectManipulationCompleted(This,handler,token) )
    ( (This)->lpVtbl->remove_DirectManipulationCompleted(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewer4[] = L"Windows.UI.Xaml.Controls.IScrollViewer4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ReduceViewportForCoreInputViewOcclusions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ReduceViewportForCoreInputViewOcclusions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalAnchorRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalAnchorRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalAnchorRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalAnchorRatio )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanContentRenderOutsideBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanContentRenderOutsideBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_AnchorRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CScrollViewer_Windows__CUI__CXaml__CControls__CAnchorRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_AnchorRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ReduceViewportForCoreInputViewOcclusions(This,value) )
    ( (This)->lpVtbl->put_ReduceViewportForCoreInputViewOcclusions(This,value) )
    ( (This)->lpVtbl->get_HorizontalAnchorRatio(This,value) )
    ( (This)->lpVtbl->put_HorizontalAnchorRatio(This,value) )
    ( (This)->lpVtbl->get_VerticalAnchorRatio(This,value) )
    ( (This)->lpVtbl->put_VerticalAnchorRatio(This,value) )
    ( (This)->lpVtbl->get_CanContentRenderOutsideBounds(This,value) )
    ( (This)->lpVtbl->put_CanContentRenderOutsideBounds(This,value) )
    ( (This)->lpVtbl->add_AnchorRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_AnchorRequested(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerStatics[] = L"Windows.UI.Xaml.Controls.IScrollViewerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsTypeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsTypeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPointsTypeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ViewportWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ScrollableWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ComputedHorizontalScrollBarVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExtentWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ViewportHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ScrollableHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ComputedVerticalScrollBarVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExtentHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinZoomFactorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxZoomFactorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomFactorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPointsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollBarVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetHorizontalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetHorizontalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility horizontalScrollBarVisibility
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollBarVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetVerticalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetVerticalScrollBarVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility verticalScrollBarVisibility
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalRailEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsHorizontalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsHorizontalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isHorizontalRailEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVerticalRailEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsVerticalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsVerticalRailEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isVerticalRailEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalScrollChainingEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsHorizontalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsHorizontalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isHorizontalScrollChainingEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVerticalScrollChainingEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsVerticalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsVerticalScrollChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isVerticalScrollChainingEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomChainingEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsZoomChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsZoomChainingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isZoomChainingEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsScrollInertiaEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsScrollInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsScrollInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isScrollInertiaEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomInertiaEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsZoomInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsZoomInertiaEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isZoomInertiaEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetHorizontalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetHorizontalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode horizontalScrollMode
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetVerticalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetVerticalScrollMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode verticalScrollMode
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetZoomMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetZoomMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode zoomMode
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsDeferredScrollingEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsDeferredScrollingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetIsDeferredScrollingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean isDeferredScrollingEnabled
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BringIntoViewOnFocusChangeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetBringIntoViewOnFocusChange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetBringIntoViewOnFocusChange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean bringIntoViewOnFocusChange
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalSnapPointsAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalSnapPointsAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalSnapPointsTypeProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalSnapPointsTypeProperty(This,value) )
    ( (This)->lpVtbl->get_ZoomSnapPointsTypeProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_ViewportWidthProperty(This,value) )
    ( (This)->lpVtbl->get_ScrollableWidthProperty(This,value) )
    ( (This)->lpVtbl->get_ComputedHorizontalScrollBarVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_ExtentWidthProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_ViewportHeightProperty(This,value) )
    ( (This)->lpVtbl->get_ScrollableHeightProperty(This,value) )
    ( (This)->lpVtbl->get_ComputedVerticalScrollBarVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_ExtentHeightProperty(This,value) )
    ( (This)->lpVtbl->get_MinZoomFactorProperty(This,value) )
    ( (This)->lpVtbl->get_MaxZoomFactorProperty(This,value) )
    ( (This)->lpVtbl->get_ZoomFactorProperty(This,value) )
    ( (This)->lpVtbl->get_ZoomSnapPointsProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalScrollBarVisibilityProperty(This,value) )
    ( (This)->lpVtbl->GetHorizontalScrollBarVisibility(This,element,result) )
    ( (This)->lpVtbl->SetHorizontalScrollBarVisibility(This,element,horizontalScrollBarVisibility) )
    ( (This)->lpVtbl->get_VerticalScrollBarVisibilityProperty(This,value) )
    ( (This)->lpVtbl->GetVerticalScrollBarVisibility(This,element,result) )
    ( (This)->lpVtbl->SetVerticalScrollBarVisibility(This,element,verticalScrollBarVisibility) )
    ( (This)->lpVtbl->get_IsHorizontalRailEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsHorizontalRailEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsHorizontalRailEnabled(This,element,isHorizontalRailEnabled) )
    ( (This)->lpVtbl->get_IsVerticalRailEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsVerticalRailEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsVerticalRailEnabled(This,element,isVerticalRailEnabled) )
    ( (This)->lpVtbl->get_IsHorizontalScrollChainingEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsHorizontalScrollChainingEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsHorizontalScrollChainingEnabled(This,element,isHorizontalScrollChainingEnabled) )
    ( (This)->lpVtbl->get_IsVerticalScrollChainingEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsVerticalScrollChainingEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsVerticalScrollChainingEnabled(This,element,isVerticalScrollChainingEnabled) )
    ( (This)->lpVtbl->get_IsZoomChainingEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsZoomChainingEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsZoomChainingEnabled(This,element,isZoomChainingEnabled) )
    ( (This)->lpVtbl->get_IsScrollInertiaEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsScrollInertiaEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsScrollInertiaEnabled(This,element,isScrollInertiaEnabled) )
    ( (This)->lpVtbl->get_IsZoomInertiaEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsZoomInertiaEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsZoomInertiaEnabled(This,element,isZoomInertiaEnabled) )
    ( (This)->lpVtbl->get_HorizontalScrollModeProperty(This,value) )
    ( (This)->lpVtbl->GetHorizontalScrollMode(This,element,result) )
    ( (This)->lpVtbl->SetHorizontalScrollMode(This,element,horizontalScrollMode) )
    ( (This)->lpVtbl->get_VerticalScrollModeProperty(This,value) )
    ( (This)->lpVtbl->GetVerticalScrollMode(This,element,result) )
    ( (This)->lpVtbl->SetVerticalScrollMode(This,element,verticalScrollMode) )
    ( (This)->lpVtbl->get_ZoomModeProperty(This,value) )
    ( (This)->lpVtbl->GetZoomMode(This,element,result) )
    ( (This)->lpVtbl->SetZoomMode(This,element,zoomMode) )
    ( (This)->lpVtbl->get_IsDeferredScrollingEnabledProperty(This,value) )
    ( (This)->lpVtbl->GetIsDeferredScrollingEnabled(This,element,result) )
    ( (This)->lpVtbl->SetIsDeferredScrollingEnabled(This,element,isDeferredScrollingEnabled) )
    ( (This)->lpVtbl->get_BringIntoViewOnFocusChangeProperty(This,value) )
    ( (This)->lpVtbl->GetBringIntoViewOnFocusChange(This,element,result) )
    ( (This)->lpVtbl->SetBringIntoViewOnFocusChange(This,element,bringIntoViewOnFocusChange) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerStatics2[] = L"Windows.UI.Xaml.Controls.IScrollViewerStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TopLeftHeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LeftHeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopHeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TopLeftHeaderProperty(This,value) )
    ( (This)->lpVtbl->get_LeftHeaderProperty(This,value) )
    ( (This)->lpVtbl->get_TopHeaderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerStatics4[] = L"Windows.UI.Xaml.Controls.IScrollViewerStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ReduceViewportForCoreInputViewOcclusionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalAnchorRatioProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalAnchorRatioProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanContentRenderOutsideBoundsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetCanContentRenderOutsideBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetCanContentRenderOutsideBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  boolean canContentRenderOutsideBounds
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ReduceViewportForCoreInputViewOcclusionsProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalAnchorRatioProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalAnchorRatioProperty(This,value) )
    ( (This)->lpVtbl->get_CanContentRenderOutsideBoundsProperty(This,value) )
    ( (This)->lpVtbl->GetCanContentRenderOutsideBounds(This,element,result) )
    ( (This)->lpVtbl->SetCanContentRenderOutsideBounds(This,element,canContentRenderOutsideBounds) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerView[] = L"Windows.UI.Xaml.Controls.IScrollViewerView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
                           __RPC__out FLOAT * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalOffset(This,value) )
    ( (This)->lpVtbl->get_VerticalOffset(This,value) )
    ( (This)->lpVtbl->get_ZoomFactor(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsIntermediate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsIntermediate(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerViewChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_NextView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FinalView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsInertial )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_NextView(This,value) )
    ( (This)->lpVtbl->get_FinalView(This,value) )
    ( (This)->lpVtbl->get_IsInertial(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBox[] = L"Windows.UI.Xaml.Controls.ISearchBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SearchHistoryEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryContext )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SearchHistoryContext )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_QueryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_QueryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FocusOnKeyboardInput )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FocusOnKeyboardInput )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChooseSuggestionOnEnter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ChooseSuggestionOnEnter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_QueryChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_QueryChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SuggestionsRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SuggestionsRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_QuerySubmitted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_QuerySubmitted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ResultSuggestionChosen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ResultSuggestionChosen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PrepareForFocusOnKeyboardInput )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PrepareForFocusOnKeyboardInput )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SetLocalContentSuggestionSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings * settings
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SearchHistoryEnabled(This,value) )
    ( (This)->lpVtbl->put_SearchHistoryEnabled(This,value) )
    ( (This)->lpVtbl->get_SearchHistoryContext(This,value) )
    ( (This)->lpVtbl->put_SearchHistoryContext(This,value) )
    ( (This)->lpVtbl->get_PlaceholderText(This,value) )
    ( (This)->lpVtbl->put_PlaceholderText(This,value) )
    ( (This)->lpVtbl->get_QueryText(This,value) )
    ( (This)->lpVtbl->put_QueryText(This,value) )
    ( (This)->lpVtbl->get_FocusOnKeyboardInput(This,value) )
    ( (This)->lpVtbl->put_FocusOnKeyboardInput(This,value) )
    ( (This)->lpVtbl->get_ChooseSuggestionOnEnter(This,value) )
    ( (This)->lpVtbl->put_ChooseSuggestionOnEnter(This,value) )
    ( (This)->lpVtbl->add_QueryChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_QueryChanged(This,token) )
    ( (This)->lpVtbl->add_SuggestionsRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_SuggestionsRequested(This,token) )
    ( (This)->lpVtbl->add_QuerySubmitted(This,handler,token) )
    ( (This)->lpVtbl->remove_QuerySubmitted(This,token) )
    ( (This)->lpVtbl->add_ResultSuggestionChosen(This,handler,token) )
    ( (This)->lpVtbl->remove_ResultSuggestionChosen(This,token) )
    ( (This)->lpVtbl->add_PrepareForFocusOnKeyboardInput(This,handler,token) )
    ( (This)->lpVtbl->remove_PrepareForFocusOnKeyboardInput(This,token) )
    ( (This)->lpVtbl->SetLocalContentSuggestionSettings(This,settings) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxFactory[] = L"Windows.UI.Xaml.Controls.ISearchBoxFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxQueryChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxQueryChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_QueryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Language )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LinguisticDetails )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_QueryText(This,value) )
    ( (This)->lpVtbl->get_Language(This,value) )
    ( (This)->lpVtbl->get_LinguisticDetails(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxQuerySubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxQuerySubmittedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_QueryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Language )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LinguisticDetails )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_KeyModifiers )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CSystem_CVirtualKeyModifiers * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_QueryText(This,value) )
    ( (This)->lpVtbl->get_Language(This,value) )
    ( (This)->lpVtbl->get_LinguisticDetails(This,value) )
    ( (This)->lpVtbl->get_KeyModifiers(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxResultSuggestionChosenEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxResultSuggestionChosenEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Tag )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_KeyModifiers )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CSystem_CVirtualKeyModifiers * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Tag(This,value) )
    ( (This)->lpVtbl->get_KeyModifiers(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxStatics[] = L"Windows.UI.Xaml.Controls.ISearchBoxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryContextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_QueryTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FocusOnKeyboardInputProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ChooseSuggestionOnEnterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SearchHistoryEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_SearchHistoryContextProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderTextProperty(This,value) )
    ( (This)->lpVtbl->get_QueryTextProperty(This,value) )
    ( (This)->lpVtbl->get_FocusOnKeyboardInputProperty(This,value) )
    ( (This)->lpVtbl->get_ChooseSuggestionOnEnterProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxSuggestionsRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxSuggestionsRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_QueryText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Language )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LinguisticDetails )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Request )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_QueryText(This,value) )
    ( (This)->lpVtbl->get_Language(This,value) )
    ( (This)->lpVtbl->get_LinguisticDetails(This,value) )
    ( (This)->lpVtbl->get_Request(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISectionsInViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AddedSections )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RemovedSections )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AddedSections(This,value) )
    ( (This)->lpVtbl->get_RemovedSections(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISectionsInViewChangedEventArgsFactory[] = L"Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISelectionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISelectionChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AddedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RemovedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AddedItems(This,value) )
    ( (This)->lpVtbl->get_RemovedItems(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISelectionChangedEventArgsFactory[] = L"Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithRemovedItemsAndAddedItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
                  __RPC__in_opt __FIVector_1_IInspectable * removedItems,
                  __RPC__in_opt __FIVector_1_IInspectable * addedItems,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstanceWithRemovedItemsAndAddedItems(This,removedItems,addedItems,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoom[] = L"Windows.UI.Xaml.Controls.ISemanticZoom";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ZoomedInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ZoomedInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomedOutView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ZoomedOutView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewActive )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsZoomedInViewActive )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanChangeViews )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanChangeViews )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ViewChangeStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ViewChangeStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ViewChangeCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ViewChangeCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *ToggleActiveView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomOutButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsZoomOutButtonEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ZoomedInView(This,value) )
    ( (This)->lpVtbl->put_ZoomedInView(This,value) )
    ( (This)->lpVtbl->get_ZoomedOutView(This,value) )
    ( (This)->lpVtbl->put_ZoomedOutView(This,value) )
    ( (This)->lpVtbl->get_IsZoomedInViewActive(This,value) )
    ( (This)->lpVtbl->put_IsZoomedInViewActive(This,value) )
    ( (This)->lpVtbl->get_CanChangeViews(This,value) )
    ( (This)->lpVtbl->put_CanChangeViews(This,value) )
    ( (This)->lpVtbl->add_ViewChangeStarted(This,handler,token) )
    ( (This)->lpVtbl->remove_ViewChangeStarted(This,token) )
    ( (This)->lpVtbl->add_ViewChangeCompleted(This,handler,token) )
    ( (This)->lpVtbl->remove_ViewChangeCompleted(This,token) )
    ( (This)->lpVtbl->ToggleActiveView(This) )
    ( (This)->lpVtbl->get_IsZoomOutButtonEnabled(This,value) )
    ( (This)->lpVtbl->put_IsZoomOutButtonEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomInformation[] = L"Windows.UI.Xaml.Controls.ISemanticZoomInformation";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SemanticZoomOwner )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SemanticZoomOwner )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsActiveView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsActiveView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsZoomedInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *InitializeViewChange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This
        );
    HRESULT ( STDMETHODCALLTYPE *CompleteViewChange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This
        );
    HRESULT ( STDMETHODCALLTYPE *MakeVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * item
        );
    HRESULT ( STDMETHODCALLTYPE *StartViewChangeFrom )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * source,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * destination
        );
    HRESULT ( STDMETHODCALLTYPE *StartViewChangeTo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * source,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * destination
        );
    HRESULT ( STDMETHODCALLTYPE *CompleteViewChangeFrom )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * source,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * destination
        );
    HRESULT ( STDMETHODCALLTYPE *CompleteViewChangeTo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * source,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * destination
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SemanticZoomOwner(This,value) )
    ( (This)->lpVtbl->put_SemanticZoomOwner(This,value) )
    ( (This)->lpVtbl->get_IsActiveView(This,value) )
    ( (This)->lpVtbl->put_IsActiveView(This,value) )
    ( (This)->lpVtbl->get_IsZoomedInView(This,value) )
    ( (This)->lpVtbl->put_IsZoomedInView(This,value) )
    ( (This)->lpVtbl->InitializeViewChange(This) )
    ( (This)->lpVtbl->CompleteViewChange(This) )
    ( (This)->lpVtbl->MakeVisible(This,item) )
    ( (This)->lpVtbl->StartViewChangeFrom(This,source,destination) )
    ( (This)->lpVtbl->StartViewChangeTo(This,source,destination) )
    ( (This)->lpVtbl->CompleteViewChangeFrom(This,source,destination) )
    ( (This)->lpVtbl->CompleteViewChangeTo(This,source,destination) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomLocation[] = L"Windows.UI.Xaml.Controls.ISemanticZoomLocation";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CRect * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Bounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
                  __x_ABI_CWindows_CFoundation_CRect value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Item(This,value) )
    ( (This)->lpVtbl->put_Item(This,value) )
    ( (This)->lpVtbl->get_Bounds(This,value) )
    ( (This)->lpVtbl->put_Bounds(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomStatics[] = L"Windows.UI.Xaml.Controls.ISemanticZoomStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ZoomedInViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ZoomedOutViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewActiveProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanChangeViewsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsZoomOutButtonEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ZoomedInViewProperty(This,value) )
    ( (This)->lpVtbl->get_ZoomedOutViewProperty(This,value) )
    ( (This)->lpVtbl->get_IsZoomedInViewActiveProperty(This,value) )
    ( (This)->lpVtbl->get_CanChangeViewsProperty(This,value) )
    ( (This)->lpVtbl->get_IsZoomOutButtonEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsSourceZoomedInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSourceZoomedInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SourceItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SourceItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DestinationItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DestinationItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsSourceZoomedInView(This,value) )
    ( (This)->lpVtbl->put_IsSourceZoomedInView(This,value) )
    ( (This)->lpVtbl->get_SourceItem(This,value) )
    ( (This)->lpVtbl->put_SourceItem(This,value) )
    ( (This)->lpVtbl->get_DestinationItem(This,value) )
    ( (This)->lpVtbl->put_DestinationItem(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISettingsFlyout[] = L"Windows.UI.Xaml.Controls.ISettingsFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IconSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IconSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_BackClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_BackClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Show )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This
        );
    HRESULT ( STDMETHODCALLTYPE *ShowIndependent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This
        );
    HRESULT ( STDMETHODCALLTYPE *Hide )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Title(This,value) )
    ( (This)->lpVtbl->put_Title(This,value) )
    ( (This)->lpVtbl->get_HeaderBackground(This,value) )
    ( (This)->lpVtbl->put_HeaderBackground(This,value) )
    ( (This)->lpVtbl->get_HeaderForeground(This,value) )
    ( (This)->lpVtbl->put_HeaderForeground(This,value) )
    ( (This)->lpVtbl->get_IconSource(This,value) )
    ( (This)->lpVtbl->put_IconSource(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->add_BackClick(This,handler,token) )
    ( (This)->lpVtbl->remove_BackClick(This,token) )
    ( (This)->lpVtbl->Show(This) )
    ( (This)->lpVtbl->ShowIndependent(This) )
    ( (This)->lpVtbl->Hide(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISettingsFlyoutFactory[] = L"Windows.UI.Xaml.Controls.ISettingsFlyoutFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISettingsFlyoutStatics[] = L"Windows.UI.Xaml.Controls.ISettingsFlyoutStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TitleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderBackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IconSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TitleProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderBackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_IconSourceProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISlider[] = L"Windows.UI.Xaml.Controls.ISlider";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IntermediateValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IntermediateValue )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StepFrequency )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_StepFrequency )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SnapsTo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SnapsTo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TickFrequency )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TickFrequency )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TickPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TickPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsDirectionReversed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDirectionReversed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsThumbToolTipEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsThumbToolTipEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ThumbToolTipValueConverter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ThumbToolTipValueConverter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IntermediateValue(This,value) )
    ( (This)->lpVtbl->put_IntermediateValue(This,value) )
    ( (This)->lpVtbl->get_StepFrequency(This,value) )
    ( (This)->lpVtbl->put_StepFrequency(This,value) )
    ( (This)->lpVtbl->get_SnapsTo(This,value) )
    ( (This)->lpVtbl->put_SnapsTo(This,value) )
    ( (This)->lpVtbl->get_TickFrequency(This,value) )
    ( (This)->lpVtbl->put_TickFrequency(This,value) )
    ( (This)->lpVtbl->get_TickPlacement(This,value) )
    ( (This)->lpVtbl->put_TickPlacement(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->get_IsDirectionReversed(This,value) )
    ( (This)->lpVtbl->put_IsDirectionReversed(This,value) )
    ( (This)->lpVtbl->get_IsThumbToolTipEnabled(This,value) )
    ( (This)->lpVtbl->put_IsThumbToolTipEnabled(This,value) )
    ( (This)->lpVtbl->get_ThumbToolTipValueConverter(This,value) )
    ( (This)->lpVtbl->put_ThumbToolTipValueConverter(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISlider;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISlider2[] = L"Windows.UI.Xaml.Controls.ISlider2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISlider2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISliderFactory[] = L"Windows.UI.Xaml.Controls.ISliderFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISliderStatics[] = L"Windows.UI.Xaml.Controls.ISliderStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IntermediateValueProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StepFrequencyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SnapsToProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TickFrequencyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TickPlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsDirectionReversedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsThumbToolTipEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ThumbToolTipValueConverterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IntermediateValueProperty(This,value) )
    ( (This)->lpVtbl->get_StepFrequencyProperty(This,value) )
    ( (This)->lpVtbl->get_SnapsToProperty(This,value) )
    ( (This)->lpVtbl->get_TickFrequencyProperty(This,value) )
    ( (This)->lpVtbl->get_TickPlacementProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_IsDirectionReversedProperty(This,value) )
    ( (This)->lpVtbl->get_IsThumbToolTipEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_ThumbToolTipValueConverterProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISliderStatics2[] = L"Windows.UI.Xaml.Controls.ISliderStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitButton[] = L"Windows.UI.Xaml.Controls.ISplitButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Flyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Flyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Command )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Command )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                  __RPC__in_opt IInspectable * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Click )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitButton_Windows__CUI__CXaml__CControls__CSplitButtonClickEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Click )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Flyout(This,value) )
    ( (This)->lpVtbl->put_Flyout(This,value) )
    ( (This)->lpVtbl->get_Command(This,value) )
    ( (This)->lpVtbl->put_Command(This,value) )
    ( (This)->lpVtbl->get_CommandParameter(This,value) )
    ( (This)->lpVtbl->put_CommandParameter(This,value) )
    ( (This)->lpVtbl->add_Click(This,handler,token) )
    ( (This)->lpVtbl->remove_Click(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitButtonAutomationPeer[] = L"Windows.UI.Xaml.Controls.ISplitButtonAutomationPeer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Controls.ISplitButtonAutomationPeerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * owner,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,owner,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitButtonClickEventArgs[] = L"Windows.UI.Xaml.Controls.ISplitButtonClickEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitButtonFactory[] = L"Windows.UI.Xaml.Controls.ISplitButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitButtonStatics[] = L"Windows.UI.Xaml.Controls.ISplitButtonStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandParameterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FlyoutProperty(This,value) )
    ( (This)->lpVtbl->get_CommandProperty(This,value) )
    ( (This)->lpVtbl->get_CommandParameterProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitView[] = L"Windows.UI.Xaml.Controls.ISplitView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Pane )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Pane )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPaneOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsPaneOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpenPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OpenPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CompactPaneLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PanePlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PanePlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DisplayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PaneBackground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PaneClosing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_Windows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneClosing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PaneClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneClosed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
    ( (This)->lpVtbl->get_Pane(This,value) )
    ( (This)->lpVtbl->put_Pane(This,value) )
    ( (This)->lpVtbl->get_IsPaneOpen(This,value) )
    ( (This)->lpVtbl->put_IsPaneOpen(This,value) )
    ( (This)->lpVtbl->get_OpenPaneLength(This,value) )
    ( (This)->lpVtbl->put_OpenPaneLength(This,value) )
    ( (This)->lpVtbl->get_CompactPaneLength(This,value) )
    ( (This)->lpVtbl->put_CompactPaneLength(This,value) )
    ( (This)->lpVtbl->get_PanePlacement(This,value) )
    ( (This)->lpVtbl->put_PanePlacement(This,value) )
    ( (This)->lpVtbl->get_DisplayMode(This,value) )
    ( (This)->lpVtbl->put_DisplayMode(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->get_PaneBackground(This,value) )
    ( (This)->lpVtbl->put_PaneBackground(This,value) )
    ( (This)->lpVtbl->add_PaneClosing(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneClosing(This,token) )
    ( (This)->lpVtbl->add_PaneClosed(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneClosed(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitView2[] = L"Windows.UI.Xaml.Controls.ISplitView2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->put_LightDismissOverlayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitView3[] = L"Windows.UI.Xaml.Controls.ISplitView3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_PaneOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PaneOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSplitView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PaneOpened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_PaneOpening(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneOpening(This,token) )
    ( (This)->lpVtbl->add_PaneOpened(This,handler,token) )
    ( (This)->lpVtbl->remove_PaneOpened(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitViewFactory[] = L"Windows.UI.Xaml.Controls.ISplitViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitViewPaneClosingEventArgs[] = L"Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitViewStatics[] = L"Windows.UI.Xaml.Controls.ISplitViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsPaneOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpenPaneLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompactPaneLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PanePlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DisplayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettingsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaneBackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
    ( (This)->lpVtbl->get_PaneProperty(This,value) )
    ( (This)->lpVtbl->get_IsPaneOpenProperty(This,value) )
    ( (This)->lpVtbl->get_OpenPaneLengthProperty(This,value) )
    ( (This)->lpVtbl->get_CompactPaneLengthProperty(This,value) )
    ( (This)->lpVtbl->get_PanePlacementProperty(This,value) )
    ( (This)->lpVtbl->get_DisplayModeProperty(This,value) )
    ( (This)->lpVtbl->get_TemplateSettingsProperty(This,value) )
    ( (This)->lpVtbl->get_PaneBackgroundProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISplitViewStatics2[] = L"Windows.UI.Xaml.Controls.ISplitViewStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanel[] = L"Windows.UI.Xaml.Controls.IStackPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegular )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AreScrollSnapPointsRegular )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreScrollSnapPointsRegular(This,value) )
    ( (This)->lpVtbl->put_AreScrollSnapPointsRegular(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanel2[] = L"Windows.UI.Xaml.Controls.IStackPanel2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CCornerRadius value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BorderBrush(This,value) )
    ( (This)->lpVtbl->put_BorderBrush(This,value) )
    ( (This)->lpVtbl->get_BorderThickness(This,value) )
    ( (This)->lpVtbl->put_BorderThickness(This,value) )
    ( (This)->lpVtbl->get_CornerRadius(This,value) )
    ( (This)->lpVtbl->put_CornerRadius(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanel4[] = L"Windows.UI.Xaml.Controls.IStackPanel4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Spacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Spacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 * This,
                  DOUBLE value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Spacing(This,value) )
    ( (This)->lpVtbl->put_Spacing(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanel5[] = L"Windows.UI.Xaml.Controls.IStackPanel5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BackgroundSizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizing(This,value) )
    ( (This)->lpVtbl->put_BackgroundSizing(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanelFactory[] = L"Windows.UI.Xaml.Controls.IStackPanelFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanelStatics[] = L"Windows.UI.Xaml.Controls.IStackPanelStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegularProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreScrollSnapPointsRegularProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanelStatics2[] = L"Windows.UI.Xaml.Controls.IStackPanelStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CornerRadiusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BorderBrushProperty(This,value) )
    ( (This)->lpVtbl->get_BorderThicknessProperty(This,value) )
    ( (This)->lpVtbl->get_CornerRadiusProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanelStatics4[] = L"Windows.UI.Xaml.Controls.IStackPanelStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SpacingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SpacingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanelStatics5[] = L"Windows.UI.Xaml.Controls.IStackPanelStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_BackgroundSizingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_BackgroundSizingProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStyleSelector[] = L"Windows.UI.Xaml.Controls.IStyleSelector";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SelectStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
                  __RPC__in_opt IInspectable * item,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectStyle(This,item,container,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStyleSelectorFactory[] = L"Windows.UI.Xaml.Controls.IStyleSelectorFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStyleSelectorOverrides[] = L"Windows.UI.Xaml.Controls.IStyleSelectorOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SelectStyleCore )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
                  __RPC__in_opt IInspectable * item,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->SelectStyleCore(This,item,container,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainBackgroundPanel[] = L"Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainBackgroundPanel2[] = L"Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateCoreIndependentInputSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
                  __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes deviceTypes,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateCoreIndependentInputSource(This,deviceTypes,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainBackgroundPanelFactory[] = L"Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainPanel[] = L"Windows.UI.Xaml.Controls.ISwapChainPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleX )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                           __RPC__out FLOAT * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleY )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                           __RPC__out FLOAT * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CompositionScaleChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CompositionScaleChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *CreateCoreIndependentInputSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
                  __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes deviceTypes,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CompositionScaleX(This,value) )
    ( (This)->lpVtbl->get_CompositionScaleY(This,value) )
    ( (This)->lpVtbl->add_CompositionScaleChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_CompositionScaleChanged(This,token) )
    ( (This)->lpVtbl->CreateCoreIndependentInputSource(This,deviceTypes,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainPanelFactory[] = L"Windows.UI.Xaml.Controls.ISwapChainPanelFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainPanelStatics[] = L"Windows.UI.Xaml.Controls.ISwapChainPanelStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleXProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleYProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CompositionScaleXProperty(This,value) )
    ( (This)->lpVtbl->get_CompositionScaleYProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeControl[] = L"Windows.UI.Xaml.Controls.ISwipeControl";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LeftItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LeftItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RightItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_RightItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TopItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BottomItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BottomItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * value
        );
    HRESULT ( STDMETHODCALLTYPE *Close )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LeftItems(This,value) )
    ( (This)->lpVtbl->put_LeftItems(This,value) )
    ( (This)->lpVtbl->get_RightItems(This,value) )
    ( (This)->lpVtbl->put_RightItems(This,value) )
    ( (This)->lpVtbl->get_TopItems(This,value) )
    ( (This)->lpVtbl->put_TopItems(This,value) )
    ( (This)->lpVtbl->get_BottomItems(This,value) )
    ( (This)->lpVtbl->put_BottomItems(This,value) )
    ( (This)->lpVtbl->Close(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeControlFactory[] = L"Windows.UI.Xaml.Controls.ISwipeControlFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeControlStatics[] = L"Windows.UI.Xaml.Controls.ISwipeControlStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LeftItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RightItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TopItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BottomItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LeftItemsProperty(This,value) )
    ( (This)->lpVtbl->get_RightItemsProperty(This,value) )
    ( (This)->lpVtbl->get_TopItemsProperty(This,value) )
    ( (This)->lpVtbl->get_BottomItemsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeItem[] = L"Windows.UI.Xaml.Controls.ISwipeItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IconSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IconSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Background )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Command )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Command )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CommandParameter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BehaviorOnInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_BehaviorOnInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Invoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwipeItem_Windows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Invoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->put_Text(This,value) )
    ( (This)->lpVtbl->get_IconSource(This,value) )
    ( (This)->lpVtbl->put_IconSource(This,value) )
    ( (This)->lpVtbl->get_Background(This,value) )
    ( (This)->lpVtbl->put_Background(This,value) )
    ( (This)->lpVtbl->get_Foreground(This,value) )
    ( (This)->lpVtbl->put_Foreground(This,value) )
    ( (This)->lpVtbl->get_Command(This,value) )
    ( (This)->lpVtbl->put_Command(This,value) )
    ( (This)->lpVtbl->get_CommandParameter(This,value) )
    ( (This)->lpVtbl->put_CommandParameter(This,value) )
    ( (This)->lpVtbl->get_BehaviorOnInvoked(This,value) )
    ( (This)->lpVtbl->put_BehaviorOnInvoked(This,value) )
    ( (This)->lpVtbl->add_Invoked(This,handler,token) )
    ( (This)->lpVtbl->remove_Invoked(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeItemFactory[] = L"Windows.UI.Xaml.Controls.ISwipeItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeItemInvokedEventArgs[] = L"Windows.UI.Xaml.Controls.ISwipeItemInvokedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SwipeControl )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SwipeControl(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeItemStatics[] = L"Windows.UI.Xaml.Controls.ISwipeItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IconSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CommandParameterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BehaviorOnInvokedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IconSourceProperty(This,value) )
    ( (This)->lpVtbl->get_TextProperty(This,value) )
    ( (This)->lpVtbl->get_BackgroundProperty(This,value) )
    ( (This)->lpVtbl->get_ForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_CommandProperty(This,value) )
    ( (This)->lpVtbl->get_CommandParameterProperty(This,value) )
    ( (This)->lpVtbl->get_BehaviorOnInvokedProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeItems[] = L"Windows.UI.Xaml.Controls.ISwipeItems";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Mode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Mode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Mode(This,value) )
    ( (This)->lpVtbl->put_Mode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeItemsFactory[] = L"Windows.UI.Xaml.Controls.ISwipeItemsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwipeItemsStatics[] = L"Windows.UI.Xaml.Controls.ISwipeItemsStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIcon[] = L"Windows.UI.Xaml.Controls.ISymbolIcon";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Symbol )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Symbol )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Symbol(This,value) )
    ( (This)->lpVtbl->put_Symbol(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIconFactory[] = L"Windows.UI.Xaml.Controls.ISymbolIconFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithSymbol )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol symbol,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstanceWithSymbol(This,symbol,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIconSource[] = L"Windows.UI.Xaml.Controls.ISymbolIconSource";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Symbol )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Symbol )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Symbol(This,value) )
    ( (This)->lpVtbl->put_Symbol(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIconSourceFactory[] = L"Windows.UI.Xaml.Controls.ISymbolIconSourceFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIconSourceStatics[] = L"Windows.UI.Xaml.Controls.ISymbolIconSourceStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SymbolProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SymbolProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIconStatics[] = L"Windows.UI.Xaml.Controls.ISymbolIconStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SymbolProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SymbolProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock[] = L"Windows.UI.Xaml.Controls.ITextBlock";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontFamily )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontWeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CText_CFontWeight value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CText_CFontStyle value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_FontStretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CText_CFontStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Foreground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextWrapping value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextTrimming )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextTrimming * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextTrimming )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextTrimming value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Inlines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Padding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CThickness value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LineHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategy )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LineStackingStrategy )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextSelectionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ContentEnd )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_BaselineOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                           __RPC__out DOUBLE * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *SelectAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This
        );
    HRESULT ( STDMETHODCALLTYPE *Select )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * start,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer * end
        );
    HRESULT ( STDMETHODCALLTYPE *Focus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
                  __x_ABI_CWindows_CUI_CXaml_CFocusState value,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FontSize(This,value) )
    ( (This)->lpVtbl->put_FontSize(This,value) )
    ( (This)->lpVtbl->get_FontFamily(This,value) )
    ( (This)->lpVtbl->put_FontFamily(This,value) )
    ( (This)->lpVtbl->get_FontWeight(This,value) )
    ( (This)->lpVtbl->put_FontWeight(This,value) )
    ( (This)->lpVtbl->get_FontStyle(This,value) )
    ( (This)->lpVtbl->put_FontStyle(This,value) )
    ( (This)->lpVtbl->get_FontStretch(This,value) )
    ( (This)->lpVtbl->put_FontStretch(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->put_CharacterSpacing(This,value) )
    ( (This)->lpVtbl->get_Foreground(This,value) )
    ( (This)->lpVtbl->put_Foreground(This,value) )
    ( (This)->lpVtbl->get_TextWrapping(This,value) )
    ( (This)->lpVtbl->put_TextWrapping(This,value) )
    ( (This)->lpVtbl->get_TextTrimming(This,value) )
    ( (This)->lpVtbl->put_TextTrimming(This,value) )
    ( (This)->lpVtbl->get_TextAlignment(This,value) )
    ( (This)->lpVtbl->put_TextAlignment(This,value) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->put_Text(This,value) )
    ( (This)->lpVtbl->get_Inlines(This,value) )
    ( (This)->lpVtbl->get_Padding(This,value) )
    ( (This)->lpVtbl->put_Padding(This,value) )
    ( (This)->lpVtbl->get_LineHeight(This,value) )
    ( (This)->lpVtbl->put_LineHeight(This,value) )
    ( (This)->lpVtbl->get_LineStackingStrategy(This,value) )
    ( (This)->lpVtbl->put_LineStackingStrategy(This,value) )
    ( (This)->lpVtbl->get_IsTextSelectionEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextSelectionEnabled(This,value) )
    ( (This)->lpVtbl->get_SelectedText(This,value) )
    ( (This)->lpVtbl->get_ContentStart(This,value) )
    ( (This)->lpVtbl->get_ContentEnd(This,value) )
    ( (This)->lpVtbl->get_SelectionStart(This,value) )
    ( (This)->lpVtbl->get_SelectionEnd(This,value) )
    ( (This)->lpVtbl->get_BaselineOffset(This,value) )
    ( (This)->lpVtbl->add_SelectionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanged(This,token) )
    ( (This)->lpVtbl->add_ContextMenuOpening(This,handler,token) )
    ( (This)->lpVtbl->remove_ContextMenuOpening(This,token) )
    ( (This)->lpVtbl->SelectAll(This) )
    ( (This)->lpVtbl->Select(This,start,end) )
    ( (This)->lpVtbl->Focus(This,value,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock2[] = L"Windows.UI.Xaml.Controls.ITextBlock2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxLines )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextLineBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextLineBounds * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextLineBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OpticalMarginAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                  __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->put_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->get_MaxLines(This,value) )
    ( (This)->lpVtbl->put_MaxLines(This,value) )
    ( (This)->lpVtbl->get_TextLineBounds(This,value) )
    ( (This)->lpVtbl->put_TextLineBounds(This,value) )
    ( (This)->lpVtbl->get_OpticalMarginAlignment(This,value) )
    ( (This)->lpVtbl->put_OpticalMarginAlignment(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->put_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->put_TextReadingOrder(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock3[] = L"Windows.UI.Xaml.Controls.ITextBlock3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextScaleFactorEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextScaleFactorEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock4[] = L"Windows.UI.Xaml.Controls.ITextBlock4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetAlphaMask )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CComposition_CICompositionBrush * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetAlphaMask(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock5[] = L"Windows.UI.Xaml.Controls.ITextBlock5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextDecorations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CText_CTextDecorations * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextDecorations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 * This,
                  __x_ABI_CWindows_CUI_CText_CTextDecorations value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextDecorations(This,value) )
    ( (This)->lpVtbl->put_TextDecorations(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock6[] = L"Windows.UI.Xaml.Controls.ITextBlock6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextTrimmed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextHighlighters )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CTextHighlighter * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_IsTextTrimmedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBlock_Windows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_IsTextTrimmedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextTrimmed(This,value) )
    ( (This)->lpVtbl->get_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->get_TextHighlighters(This,value) )
    ( (This)->lpVtbl->add_IsTextTrimmedChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_IsTextTrimmedChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock7[] = L"Windows.UI.Xaml.Controls.ITextBlock7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
    HRESULT ( STDMETHODCALLTYPE *CopySelectionToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->put_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->CopySelectionToClipboard(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextTrimmingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_FontSizeProperty(This,value) )
    ( (This)->lpVtbl->get_FontFamilyProperty(This,value) )
    ( (This)->lpVtbl->get_FontWeightProperty(This,value) )
    ( (This)->lpVtbl->get_FontStyleProperty(This,value) )
    ( (This)->lpVtbl->get_FontStretchProperty(This,value) )
    ( (This)->lpVtbl->get_CharacterSpacingProperty(This,value) )
    ( (This)->lpVtbl->get_ForegroundProperty(This,value) )
    ( (This)->lpVtbl->get_TextWrappingProperty(This,value) )
    ( (This)->lpVtbl->get_TextTrimmingProperty(This,value) )
    ( (This)->lpVtbl->get_TextAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_TextProperty(This,value) )
    ( (This)->lpVtbl->get_PaddingProperty(This,value) )
    ( (This)->lpVtbl->get_LineHeightProperty(This,value) )
    ( (This)->lpVtbl->get_LineStackingStrategyProperty(This,value) )
    ( (This)->lpVtbl->get_IsTextSelectionEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_SelectedTextProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics2[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLinesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextLineBoundsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionHighlightColorProperty(This,value) )
    ( (This)->lpVtbl->get_MaxLinesProperty(This,value) )
    ( (This)->lpVtbl->get_TextLineBoundsProperty(This,value) )
    ( (This)->lpVtbl->get_OpticalMarginAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics3[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextScaleFactorEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextScaleFactorEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics5[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextDecorationsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextDecorationsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics6[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsTextTrimmedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsTextTrimmedProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalTextAlignmentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics7[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionFlyoutProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox[] = L"Windows.UI.Xaml.Controls.ITextBox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Text )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaxLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsReadOnly )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AcceptsReturn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextWrapping value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsSpellCheckEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsTextPredictionEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InputScope )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_InputScope )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Select )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  INT32 start,
                  INT32 length
        );
    HRESULT ( STDMETHODCALLTYPE *SelectAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This
        );
    HRESULT ( STDMETHODCALLTYPE *GetRectFromCharacterIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
                  INT32 charIndex,
                  boolean trailingEdge,
                           __RPC__out __x_ABI_CWindows_CFoundation_CRect * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Text(This,value) )
    ( (This)->lpVtbl->put_Text(This,value) )
    ( (This)->lpVtbl->get_SelectedText(This,value) )
    ( (This)->lpVtbl->put_SelectedText(This,value) )
    ( (This)->lpVtbl->get_SelectionLength(This,value) )
    ( (This)->lpVtbl->put_SelectionLength(This,value) )
    ( (This)->lpVtbl->get_SelectionStart(This,value) )
    ( (This)->lpVtbl->put_SelectionStart(This,value) )
    ( (This)->lpVtbl->get_MaxLength(This,value) )
    ( (This)->lpVtbl->put_MaxLength(This,value) )
    ( (This)->lpVtbl->get_IsReadOnly(This,value) )
    ( (This)->lpVtbl->put_IsReadOnly(This,value) )
    ( (This)->lpVtbl->get_AcceptsReturn(This,value) )
    ( (This)->lpVtbl->put_AcceptsReturn(This,value) )
    ( (This)->lpVtbl->get_TextAlignment(This,value) )
    ( (This)->lpVtbl->put_TextAlignment(This,value) )
    ( (This)->lpVtbl->get_TextWrapping(This,value) )
    ( (This)->lpVtbl->put_TextWrapping(This,value) )
    ( (This)->lpVtbl->get_IsSpellCheckEnabled(This,value) )
    ( (This)->lpVtbl->put_IsSpellCheckEnabled(This,value) )
    ( (This)->lpVtbl->get_IsTextPredictionEnabled(This,value) )
    ( (This)->lpVtbl->put_IsTextPredictionEnabled(This,value) )
    ( (This)->lpVtbl->get_InputScope(This,value) )
    ( (This)->lpVtbl->put_InputScope(This,value) )
    ( (This)->lpVtbl->add_TextChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_TextChanged(This,token) )
    ( (This)->lpVtbl->add_SelectionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanged(This,token) )
    ( (This)->lpVtbl->add_ContextMenuOpening(This,handler,token) )
    ( (This)->lpVtbl->remove_ContextMenuOpening(This,token) )
    ( (This)->lpVtbl->Select(This,start,length) )
    ( (This)->lpVtbl->SelectAll(This) )
    ( (This)->lpVtbl->GetRectFromCharacterIndex(This,charIndex,trailingEdge,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox2[] = L"Windows.UI.Xaml.Controls.ITextBox2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PreventKeyboardDisplayOnProgrammaticFocus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Paste )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Paste )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_PlaceholderText(This,value) )
    ( (This)->lpVtbl->put_PlaceholderText(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->put_SelectionHighlightColor(This,value) )
    ( (This)->lpVtbl->get_PreventKeyboardDisplayOnProgrammaticFocus(This,value) )
    ( (This)->lpVtbl->put_PreventKeyboardDisplayOnProgrammaticFocus(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->put_IsColorFontEnabled(This,value) )
    ( (This)->lpVtbl->add_Paste(This,handler,token) )
    ( (This)->lpVtbl->remove_Paste(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox3[] = L"Windows.UI.Xaml.Controls.ITextBox3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_TextCompositionStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextCompositionStarted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextCompositionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextCompositionChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextCompositionEnded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextCompositionEnded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  EventRegistrationToken token
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TextReadingOrder )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DesiredCandidateWindowAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DesiredCandidateWindowAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CandidateWindowBoundsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CandidateWindowBoundsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TextChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TextChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_TextCompositionStarted(This,handler,token) )
    ( (This)->lpVtbl->remove_TextCompositionStarted(This,token) )
    ( (This)->lpVtbl->add_TextCompositionChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_TextCompositionChanged(This,token) )
    ( (This)->lpVtbl->add_TextCompositionEnded(This,handler,token) )
    ( (This)->lpVtbl->remove_TextCompositionEnded(This,token) )
    ( (This)->lpVtbl->get_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->put_TextReadingOrder(This,value) )
    ( (This)->lpVtbl->get_DesiredCandidateWindowAlignment(This,value) )
    ( (This)->lpVtbl->put_DesiredCandidateWindowAlignment(This,value) )
    ( (This)->lpVtbl->add_CandidateWindowBoundsChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_CandidateWindowBoundsChanged(This,token) )
    ( (This)->lpVtbl->add_TextChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_TextChanging(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox4[] = L"Windows.UI.Xaml.Controls.ITextBox4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetLinguisticAlternativesAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 * This,
                           __RPC__deref_out_opt __FIAsyncOperation_1___FIVectorView_1_HSTRING * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->GetLinguisticAlternativesAsync(This,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox5[] = L"Windows.UI.Xaml.Controls.ITextBox5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorWhenNotFocused )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColorWhenNotFocused )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionHighlightColorWhenNotFocused(This,value) )
    ( (This)->lpVtbl->put_SelectionHighlightColorWhenNotFocused(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox6[] = L"Windows.UI.Xaml.Controls.ITextBox6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  __x_ABI_CWindows_CUI_CXaml_CTextAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterCasing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CharacterCasing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlaceholderForeground )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CopyingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CopyingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CuttingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CuttingToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_BeforeTextChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_BeforeTextChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalTextAlignment(This,value) )
    ( (This)->lpVtbl->get_CharacterCasing(This,value) )
    ( (This)->lpVtbl->put_CharacterCasing(This,value) )
    ( (This)->lpVtbl->get_PlaceholderForeground(This,value) )
    ( (This)->lpVtbl->put_PlaceholderForeground(This,value) )
    ( (This)->lpVtbl->add_CopyingToClipboard(This,handler,token) )
    ( (This)->lpVtbl->remove_CopyingToClipboard(This,token) )
    ( (This)->lpVtbl->add_CuttingToClipboard(This,handler,token) )
    ( (This)->lpVtbl->remove_CuttingToClipboard(This,token) )
    ( (This)->lpVtbl->add_BeforeTextChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_BeforeTextChanging(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox7[] = L"Windows.UI.Xaml.Controls.ITextBox7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HandwritingView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HandwritingView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHandwritingViewEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsHandwritingViewEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HandwritingView(This,value) )
    ( (This)->lpVtbl->put_HandwritingView(This,value) )
    ( (This)->lpVtbl->get_IsHandwritingViewEnabled(This,value) )
    ( (This)->lpVtbl->put_IsHandwritingViewEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox8[] = L"Windows.UI.Xaml.Controls.ITextBox8";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanPasteClipboardContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanUndo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanRedo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProofingMenuFlyout )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Description )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                  __RPC__in_opt IInspectable * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectionChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTextBox_Windows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Undo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
        );
    HRESULT ( STDMETHODCALLTYPE *Redo )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
        );
    HRESULT ( STDMETHODCALLTYPE *PasteFromClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
        );
    HRESULT ( STDMETHODCALLTYPE *CopySelectionToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
        );
    HRESULT ( STDMETHODCALLTYPE *CutSelectionToClipboard )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
        );
    HRESULT ( STDMETHODCALLTYPE *ClearUndoRedoHistory )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanPasteClipboardContent(This,value) )
    ( (This)->lpVtbl->get_CanUndo(This,value) )
    ( (This)->lpVtbl->get_CanRedo(This,value) )
    ( (This)->lpVtbl->get_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->put_SelectionFlyout(This,value) )
    ( (This)->lpVtbl->get_ProofingMenuFlyout(This,value) )
    ( (This)->lpVtbl->get_Description(This,value) )
    ( (This)->lpVtbl->put_Description(This,value) )
    ( (This)->lpVtbl->add_SelectionChanging(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectionChanging(This,token) )
    ( (This)->lpVtbl->Undo(This) )
    ( (This)->lpVtbl->Redo(This) )
    ( (This)->lpVtbl->PasteFromClipboard(This) )
    ( (This)->lpVtbl->CopySelectionToClipboard(This) )
    ( (This)->lpVtbl->CutSelectionToClipboard(This) )
    ( (This)->lpVtbl->ClearUndoRedoHistory(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxBeforeTextChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_NewText )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_NewText(This,value) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxFactory[] = L"Windows.UI.Xaml.Controls.ITextBoxFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxSelectionChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionLength )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionStart(This,value) )
    ( (This)->lpVtbl->get_SelectionLength(This,value) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_TextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaxLengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsReadOnlyProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturnProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_InputScopeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_TextProperty(This,value) )
    ( (This)->lpVtbl->get_MaxLengthProperty(This,value) )
    ( (This)->lpVtbl->get_IsReadOnlyProperty(This,value) )
    ( (This)->lpVtbl->get_AcceptsReturnProperty(This,value) )
    ( (This)->lpVtbl->get_TextAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_TextWrappingProperty(This,value) )
    ( (This)->lpVtbl->get_IsSpellCheckEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_IsTextPredictionEnabledProperty(This,value) )
    ( (This)->lpVtbl->get_InputScopeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics2[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderTextProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionHighlightColorProperty(This,value) )
    ( (This)->lpVtbl->get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value) )
    ( (This)->lpVtbl->get_IsColorFontEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics3[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DesiredCandidateWindowAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DesiredCandidateWindowAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_TextReadingOrderProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics5[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorWhenNotFocusedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionHighlightColorWhenNotFocusedProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics6[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CharacterCasingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlaceholderForegroundProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalTextAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_CharacterCasingProperty(This,value) )
    ( (This)->lpVtbl->get_PlaceholderForegroundProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics7[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HandwritingViewProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsHandwritingViewEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HandwritingViewProperty(This,value) )
    ( (This)->lpVtbl->get_IsHandwritingViewEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics8[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics8";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanPasteClipboardContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanUndoProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanRedoProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionFlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ProofingMenuFlyoutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DescriptionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanPasteClipboardContentProperty(This,value) )
    ( (This)->lpVtbl->get_CanUndoProperty(This,value) )
    ( (This)->lpVtbl->get_CanRedoProperty(This,value) )
    ( (This)->lpVtbl->get_SelectionFlyoutProperty(This,value) )
    ( (This)->lpVtbl->get_ProofingMenuFlyoutProperty(This,value) )
    ( (This)->lpVtbl->get_DescriptionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxTextChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxTextChangingEventArgs2[] = L"Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsContentChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsContentChanging(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ITextChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextCommandBarFlyout[] = L"Windows.UI.Xaml.Controls.ITextCommandBarFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextCommandBarFlyoutFactory[] = L"Windows.UI.Xaml.Controls.ITextCommandBarFlyoutFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextCompositionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_StartIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Length )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs * This,
                           __RPC__out INT32 * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_StartIndex(This,value) )
    ( (This)->lpVtbl->get_Length(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextCompositionEndedEventArgs[] = L"Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_StartIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Length )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs * This,
                           __RPC__out INT32 * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_StartIndex(This,value) )
    ( (This)->lpVtbl->get_Length(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextCompositionStartedEventArgs[] = L"Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_StartIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Length )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs * This,
                           __RPC__out INT32 * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_StartIndex(This,value) )
    ( (This)->lpVtbl->get_Length(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextControlCopyingToClipboardEventArgs[] = L"Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextControlCuttingToClipboardEventArgs[] = L"Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextControlPasteEventArgs[] = L"Windows.UI.Xaml.Controls.ITextControlPasteEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickedEventArgs[] = L"Windows.UI.Xaml.Controls.ITimePickedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldTime(This,value) )
    ( (This)->lpVtbl->get_NewTime(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePicker[] = L"Windows.UI.Xaml.Controls.ITimePicker";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ClockIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ClockIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinuteIncrement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinuteIncrement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Time )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Time )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                  __x_ABI_CWindows_CFoundation_CTimeSpan value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TimeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                  __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TimeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_ClockIdentifier(This,value) )
    ( (This)->lpVtbl->put_ClockIdentifier(This,value) )
    ( (This)->lpVtbl->get_MinuteIncrement(This,value) )
    ( (This)->lpVtbl->put_MinuteIncrement(This,value) )
    ( (This)->lpVtbl->get_Time(This,value) )
    ( (This)->lpVtbl->put_Time(This,value) )
    ( (This)->lpVtbl->add_TimeChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_TimeChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePicker2[] = L"Windows.UI.Xaml.Controls.ITimePicker2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_LightDismissOverlayMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayMode(This,value) )
    ( (This)->lpVtbl->put_LightDismissOverlayMode(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePicker3[] = L"Windows.UI.Xaml.Controls.ITimePicker3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectedTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
                  __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_SelectedTimeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePicker_Windows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SelectedTimeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedTime(This,value) )
    ( (This)->lpVtbl->put_SelectedTime(This,value) )
    ( (This)->lpVtbl->add_SelectedTimeChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_SelectedTimeChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerFactory[] = L"Windows.UI.Xaml.Controls.ITimePickerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerFlyout[] = L"Windows.UI.Xaml.Controls.ITimePickerFlyout";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ClockIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ClockIdentifier )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Time )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Time )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                  __x_ABI_CWindows_CFoundation_CTimeSpan value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinuteIncrement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinuteIncrement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                  INT32 value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_TimePicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTimePickerFlyout_Windows__CUI__CXaml__CControls__CTimePickedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_TimePicked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *ShowAtAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * target,
                           __RPC__deref_out_opt __FIAsyncOperation_1___FIReference_1_Windows__CFoundation__CTimeSpan * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ClockIdentifier(This,value) )
    ( (This)->lpVtbl->put_ClockIdentifier(This,value) )
    ( (This)->lpVtbl->get_Time(This,value) )
    ( (This)->lpVtbl->put_Time(This,value) )
    ( (This)->lpVtbl->get_MinuteIncrement(This,value) )
    ( (This)->lpVtbl->put_MinuteIncrement(This,value) )
    ( (This)->lpVtbl->add_TimePicked(This,handler,token) )
    ( (This)->lpVtbl->remove_TimePicked(This,token) )
    ( (This)->lpVtbl->ShowAtAsync(This,target,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerFlyoutPresenter2[] = L"Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsDefaultShadowEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabled(This,value) )
    ( (This)->lpVtbl->put_IsDefaultShadowEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerFlyoutPresenterStatics2[] = L"Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsDefaultShadowEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsDefaultShadowEnabledProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerFlyoutStatics[] = L"Windows.UI.Xaml.Controls.ITimePickerFlyoutStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ClockIdentifierProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TimeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinuteIncrementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ClockIdentifierProperty(This,value) )
    ( (This)->lpVtbl->get_TimeProperty(This,value) )
    ( (This)->lpVtbl->get_MinuteIncrementProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerSelectedValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldTime(This,value) )
    ( (This)->lpVtbl->get_NewTime(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerStatics[] = L"Windows.UI.Xaml.Controls.ITimePickerStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ClockIdentifierProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinuteIncrementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TimeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_ClockIdentifierProperty(This,value) )
    ( (This)->lpVtbl->get_MinuteIncrementProperty(This,value) )
    ( (This)->lpVtbl->get_TimeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerStatics2[] = L"Windows.UI.Xaml.Controls.ITimePickerStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_LightDismissOverlayModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_LightDismissOverlayModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerStatics3[] = L"Windows.UI.Xaml.Controls.ITimePickerStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectedTimeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectedTimeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_OldTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_NewTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_OldTime(This,value) )
    ( (This)->lpVtbl->get_NewTime(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleMenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsChecked(This,value) )
    ( (This)->lpVtbl->put_IsChecked(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleMenuFlyoutItemFactory[] = L"Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleMenuFlyoutItemStatics[] = L"Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsCheckedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsCheckedProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSplitButton[] = L"Windows.UI.Xaml.Controls.IToggleSplitButton";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsChecked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
                  boolean value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_IsCheckedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CToggleSplitButton_Windows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_IsCheckedChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsChecked(This,value) )
    ( (This)->lpVtbl->put_IsChecked(This,value) )
    ( (This)->lpVtbl->add_IsCheckedChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_IsCheckedChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSplitButtonAutomationPeer[] = L"Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeer";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSplitButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * owner,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,owner,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSplitButtonFactory[] = L"Windows.UI.Xaml.Controls.IToggleSplitButtonFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSplitButtonIsCheckedChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSwitch[] = L"Windows.UI.Xaml.Controls.IToggleSwitch";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsOn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsOn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Header )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OnContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OnContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OnContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OnContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OffContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OffContent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OffContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_OffContentTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Toggled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Toggled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsOn(This,value) )
    ( (This)->lpVtbl->put_IsOn(This,value) )
    ( (This)->lpVtbl->get_Header(This,value) )
    ( (This)->lpVtbl->put_Header(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->put_HeaderTemplate(This,value) )
    ( (This)->lpVtbl->get_OnContent(This,value) )
    ( (This)->lpVtbl->put_OnContent(This,value) )
    ( (This)->lpVtbl->get_OnContentTemplate(This,value) )
    ( (This)->lpVtbl->put_OnContentTemplate(This,value) )
    ( (This)->lpVtbl->get_OffContent(This,value) )
    ( (This)->lpVtbl->put_OffContent(This,value) )
    ( (This)->lpVtbl->get_OffContentTemplate(This,value) )
    ( (This)->lpVtbl->put_OffContentTemplate(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->add_Toggled(This,handler,token) )
    ( (This)->lpVtbl->remove_Toggled(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSwitchOverrides[] = L"Windows.UI.Xaml.Controls.IToggleSwitchOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnToggled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This
        );
    HRESULT ( STDMETHODCALLTYPE *OnOnContentChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
                  __RPC__in_opt IInspectable * oldContent,
                  __RPC__in_opt IInspectable * newContent
        );
    HRESULT ( STDMETHODCALLTYPE *OnOffContentChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
                  __RPC__in_opt IInspectable * oldContent,
                  __RPC__in_opt IInspectable * newContent
        );
    HRESULT ( STDMETHODCALLTYPE *OnHeaderChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
                  __RPC__in_opt IInspectable * oldContent,
                  __RPC__in_opt IInspectable * newContent
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnToggled(This) )
    ( (This)->lpVtbl->OnOnContentChanged(This,oldContent,newContent) )
    ( (This)->lpVtbl->OnOffContentChanged(This,oldContent,newContent) )
    ( (This)->lpVtbl->OnHeaderChanged(This,oldContent,newContent) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSwitchStatics[] = L"Windows.UI.Xaml.Controls.IToggleSwitchStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsOnProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OnContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OnContentTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OffContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OffContentTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsOnProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderProperty(This,value) )
    ( (This)->lpVtbl->get_HeaderTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_OnContentProperty(This,value) )
    ( (This)->lpVtbl->get_OnContentTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_OffContentProperty(This,value) )
    ( (This)->lpVtbl->get_OffContentTemplateProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTip[] = L"Windows.UI.Xaml.Controls.IToolTip";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsOpen )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Placement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Placement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlacementTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlacementTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Closed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Opened )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalOffset(This,value) )
    ( (This)->lpVtbl->put_HorizontalOffset(This,value) )
    ( (This)->lpVtbl->get_IsOpen(This,value) )
    ( (This)->lpVtbl->put_IsOpen(This,value) )
    ( (This)->lpVtbl->get_Placement(This,value) )
    ( (This)->lpVtbl->put_Placement(This,value) )
    ( (This)->lpVtbl->get_PlacementTarget(This,value) )
    ( (This)->lpVtbl->put_PlacementTarget(This,value) )
    ( (This)->lpVtbl->get_VerticalOffset(This,value) )
    ( (This)->lpVtbl->put_VerticalOffset(This,value) )
    ( (This)->lpVtbl->get_TemplateSettings(This,value) )
    ( (This)->lpVtbl->add_Closed(This,handler,token) )
    ( (This)->lpVtbl->remove_Closed(This,token) )
    ( (This)->lpVtbl->add_Opened(This,handler,token) )
    ( (This)->lpVtbl->remove_Opened(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTip2[] = L"Windows.UI.Xaml.Controls.IToolTip2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PlacementRect )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This,
                           __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CRect * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PlacementRect )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 * This,
                  __RPC__in_opt __FIReference_1_Windows__CFoundation__CRect * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PlacementRect(This,value) )
    ( (This)->lpVtbl->put_PlacementRect(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipFactory[] = L"Windows.UI.Xaml.Controls.IToolTipFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipService[] = L"Windows.UI.Xaml.Controls.IToolTipService";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipServiceStatics[] = L"Windows.UI.Xaml.Controls.IToolTipServiceStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetPlacement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlacementTargetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetPlacementTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetPlacementTarget )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ToolTipProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetToolTip )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetToolTip )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __RPC__in_opt IInspectable * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PlacementProperty(This,value) )
    ( (This)->lpVtbl->GetPlacement(This,element,result) )
    ( (This)->lpVtbl->SetPlacement(This,element,value) )
    ( (This)->lpVtbl->get_PlacementTargetProperty(This,value) )
    ( (This)->lpVtbl->GetPlacementTarget(This,element,result) )
    ( (This)->lpVtbl->SetPlacementTarget(This,element,value) )
    ( (This)->lpVtbl->get_ToolTipProperty(This,value) )
    ( (This)->lpVtbl->GetToolTip(This,element,result) )
    ( (This)->lpVtbl->SetToolTip(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipStatics[] = L"Windows.UI.Xaml.Controls.IToolTipStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsOpenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlacementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PlacementTargetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalOffsetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HorizontalOffsetProperty(This,value) )
    ( (This)->lpVtbl->get_IsOpenProperty(This,value) )
    ( (This)->lpVtbl->get_PlacementProperty(This,value) )
    ( (This)->lpVtbl->get_PlacementTargetProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalOffsetProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipStatics2[] = L"Windows.UI.Xaml.Controls.IToolTipStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PlacementRectProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PlacementRectProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeView[] = L"Windows.UI.Xaml.Controls.ITreeView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_RootNodes )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SelectionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SelectedNodes )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * * value
        );
    HRESULT ( STDMETHODCALLTYPE *Expand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * value
        );
    HRESULT ( STDMETHODCALLTYPE *Collapse )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * value
        );
    HRESULT ( STDMETHODCALLTYPE *SelectAll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ItemInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ItemInvoked )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Expanding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Expanding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_Collapsed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_Collapsed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_RootNodes(This,value) )
    ( (This)->lpVtbl->get_SelectionMode(This,value) )
    ( (This)->lpVtbl->put_SelectionMode(This,value) )
    ( (This)->lpVtbl->get_SelectedNodes(This,value) )
    ( (This)->lpVtbl->Expand(This,value) )
    ( (This)->lpVtbl->Collapse(This,value) )
    ( (This)->lpVtbl->SelectAll(This) )
    ( (This)->lpVtbl->add_ItemInvoked(This,handler,token) )
    ( (This)->lpVtbl->remove_ItemInvoked(This,token) )
    ( (This)->lpVtbl->add_Expanding(This,handler,token) )
    ( (This)->lpVtbl->remove_Expanding(This,token) )
    ( (This)->lpVtbl->add_Collapsed(This,handler,token) )
    ( (This)->lpVtbl->remove_Collapsed(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeView2[] = L"Windows.UI.Xaml.Controls.ITreeView2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *NodeFromContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ContainerFromNode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * node,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ItemFromContainer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * container,
                           __RPC__deref_out_opt IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ContainerFromItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt IInspectable * item,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * result
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanDragItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanDragItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanReorderItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CanReorderItems )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemTemplateSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemContainerStyle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemContainerStyleSelector )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemContainerTransitions )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt IInspectable * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DragItemsStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DragItemsStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DragItemsCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTreeView_Windows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DragItemsCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->NodeFromContainer(This,container,result) )
    ( (This)->lpVtbl->ContainerFromNode(This,node,result) )
    ( (This)->lpVtbl->ItemFromContainer(This,container,result) )
    ( (This)->lpVtbl->ContainerFromItem(This,item,result) )
    ( (This)->lpVtbl->get_CanDragItems(This,value) )
    ( (This)->lpVtbl->put_CanDragItems(This,value) )
    ( (This)->lpVtbl->get_CanReorderItems(This,value) )
    ( (This)->lpVtbl->put_CanReorderItems(This,value) )
    ( (This)->lpVtbl->get_ItemTemplate(This,value) )
    ( (This)->lpVtbl->put_ItemTemplate(This,value) )
    ( (This)->lpVtbl->get_ItemTemplateSelector(This,value) )
    ( (This)->lpVtbl->put_ItemTemplateSelector(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyle(This,value) )
    ( (This)->lpVtbl->put_ItemContainerStyle(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyleSelector(This,value) )
    ( (This)->lpVtbl->put_ItemContainerStyleSelector(This,value) )
    ( (This)->lpVtbl->get_ItemContainerTransitions(This,value) )
    ( (This)->lpVtbl->put_ItemContainerTransitions(This,value) )
    ( (This)->lpVtbl->get_ItemsSource(This,value) )
    ( (This)->lpVtbl->put_ItemsSource(This,value) )
    ( (This)->lpVtbl->add_DragItemsStarting(This,handler,token) )
    ( (This)->lpVtbl->remove_DragItemsStarting(This,token) )
    ( (This)->lpVtbl->add_DragItemsCompleted(This,handler,token) )
    ( (This)->lpVtbl->remove_DragItemsCompleted(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewCollapsedEventArgs[] = L"Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Node )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Node(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewCollapsedEventArgs2[] = L"Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Item(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewDragItemsCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DropResult )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs * This,
                           __RPC__deref_out_opt __FIVectorView_1_IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DropResult(This,value) )
    ( (This)->lpVtbl->get_Items(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewDragItemsStartingEventArgs[] = L"Windows.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Data )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs * This,
                           __RPC__deref_out_opt __FIVector_1_IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
    ( (This)->lpVtbl->get_Data(This,value) )
    ( (This)->lpVtbl->get_Items(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewExpandingEventArgs[] = L"Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Node )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Node(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewExpandingEventArgs2[] = L"Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Item )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Item(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewFactory[] = L"Windows.UI.Xaml.Controls.ITreeViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItem[] = L"Windows.UI.Xaml.Controls.ITreeViewItem";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GlyphOpacity )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GlyphOpacity )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GlyphBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GlyphBrush )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExpandedGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ExpandedGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CollapsedGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_CollapsedGlyph )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                  __RPC__in HSTRING value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GlyphSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_GlyphSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsExpanded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsExpanded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TreeViewItemTemplateSettings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GlyphOpacity(This,value) )
    ( (This)->lpVtbl->put_GlyphOpacity(This,value) )
    ( (This)->lpVtbl->get_GlyphBrush(This,value) )
    ( (This)->lpVtbl->put_GlyphBrush(This,value) )
    ( (This)->lpVtbl->get_ExpandedGlyph(This,value) )
    ( (This)->lpVtbl->put_ExpandedGlyph(This,value) )
    ( (This)->lpVtbl->get_CollapsedGlyph(This,value) )
    ( (This)->lpVtbl->put_CollapsedGlyph(This,value) )
    ( (This)->lpVtbl->get_GlyphSize(This,value) )
    ( (This)->lpVtbl->put_GlyphSize(This,value) )
    ( (This)->lpVtbl->get_IsExpanded(This,value) )
    ( (This)->lpVtbl->put_IsExpanded(This,value) )
    ( (This)->lpVtbl->get_TreeViewItemTemplateSettings(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItem2[] = L"Windows.UI.Xaml.Controls.ITreeViewItem2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HasUnrealizedChildren )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HasUnrealizedChildren )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 * This,
                  __RPC__in_opt IInspectable * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HasUnrealizedChildren(This,value) )
    ( (This)->lpVtbl->put_HasUnrealizedChildren(This,value) )
    ( (This)->lpVtbl->get_ItemsSource(This,value) )
    ( (This)->lpVtbl->put_ItemsSource(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItemFactory[] = L"Windows.UI.Xaml.Controls.ITreeViewItemFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItemInvokedEventArgs[] = L"Windows.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_InvokedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs * This,
                           __RPC__out boolean * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_InvokedItem(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
    ( (This)->lpVtbl->get_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItemStatics[] = L"Windows.UI.Xaml.Controls.ITreeViewItemStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_GlyphOpacityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GlyphBrushProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ExpandedGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CollapsedGlyphProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_GlyphSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsExpandedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TreeViewItemTemplateSettingsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_GlyphOpacityProperty(This,value) )
    ( (This)->lpVtbl->get_GlyphBrushProperty(This,value) )
    ( (This)->lpVtbl->get_ExpandedGlyphProperty(This,value) )
    ( (This)->lpVtbl->get_CollapsedGlyphProperty(This,value) )
    ( (This)->lpVtbl->get_GlyphSizeProperty(This,value) )
    ( (This)->lpVtbl->get_IsExpandedProperty(This,value) )
    ( (This)->lpVtbl->get_TreeViewItemTemplateSettingsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItemStatics2[] = L"Windows.UI.Xaml.Controls.ITreeViewItemStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_HasUnrealizedChildrenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_HasUnrealizedChildrenProperty(This,value) )
    ( (This)->lpVtbl->get_ItemsSourceProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItemTemplateSettings[] = L"Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettings";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ExpandedGlyphVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CollapsedGlyphVisibility )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Indentation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DragItemsCount )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * This,
                           __RPC__out INT32 * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ExpandedGlyphVisibility(This,value) )
    ( (This)->lpVtbl->get_CollapsedGlyphVisibility(This,value) )
    ( (This)->lpVtbl->get_Indentation(This,value) )
    ( (This)->lpVtbl->get_DragItemsCount(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItemTemplateSettingsFactory[] = L"Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewItemTemplateSettingsStatics[] = L"Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ExpandedGlyphVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CollapsedGlyphVisibilityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IndentationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DragItemsCountProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ExpandedGlyphVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_CollapsedGlyphVisibilityProperty(This,value) )
    ( (This)->lpVtbl->get_IndentationProperty(This,value) )
    ( (This)->lpVtbl->get_DragItemsCountProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewList[] = L"Windows.UI.Xaml.Controls.ITreeViewList";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewListFactory[] = L"Windows.UI.Xaml.Controls.ITreeViewListFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewNode[] = L"Windows.UI.Xaml.Controls.ITreeViewNode";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                           __RPC__deref_out_opt IInspectable * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                  __RPC__in_opt IInspectable * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Parent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsExpanded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsExpanded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HasChildren )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Depth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HasUnrealizedChildren )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HasUnrealizedChildren )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Children )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CTreeViewNode * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
    ( (This)->lpVtbl->get_Parent(This,value) )
    ( (This)->lpVtbl->get_IsExpanded(This,value) )
    ( (This)->lpVtbl->put_IsExpanded(This,value) )
    ( (This)->lpVtbl->get_HasChildren(This,value) )
    ( (This)->lpVtbl->get_Depth(This,value) )
    ( (This)->lpVtbl->get_HasUnrealizedChildren(This,value) )
    ( (This)->lpVtbl->put_HasUnrealizedChildren(This,value) )
    ( (This)->lpVtbl->get_Children(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewNodeFactory[] = L"Windows.UI.Xaml.Controls.ITreeViewNodeFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewNodeStatics[] = L"Windows.UI.Xaml.Controls.ITreeViewNodeStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DepthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsExpandedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HasChildrenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
    ( (This)->lpVtbl->get_DepthProperty(This,value) )
    ( (This)->lpVtbl->get_IsExpandedProperty(This,value) )
    ( (This)->lpVtbl->get_HasChildrenProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewStatics[] = L"Windows.UI.Xaml.Controls.ITreeViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SelectionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SelectionModeProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITreeViewStatics2[] = L"Windows.UI.Xaml.Controls.ITreeViewStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanDragItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanReorderItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleSelectorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemContainerTransitionsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemsSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanDragItemsProperty(This,value) )
    ( (This)->lpVtbl->get_CanReorderItemsProperty(This,value) )
    ( (This)->lpVtbl->get_ItemTemplateProperty(This,value) )
    ( (This)->lpVtbl->get_ItemTemplateSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyleProperty(This,value) )
    ( (This)->lpVtbl->get_ItemContainerStyleSelectorProperty(This,value) )
    ( (This)->lpVtbl->get_ItemContainerTransitionsProperty(This,value) )
    ( (This)->lpVtbl->get_ItemsSourceProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITwoPaneView[] = L"Windows.UI.Xaml.Controls.ITwoPaneView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Pane1 )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Pane1 )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Pane2 )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Pane2 )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Pane1Length )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Pane1Length )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __x_ABI_CWindows_CUI_CXaml_CGridLength value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Pane2Length )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Pane2Length )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __x_ABI_CWindows_CUI_CXaml_CGridLength value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PanePriority )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_PanePriority )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Mode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_WideModeConfiguration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_WideModeConfiguration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TallModeConfiguration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_TallModeConfiguration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinWideModeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinWideModeWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinTallModeHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MinTallModeHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  DOUBLE value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ModeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CTwoPaneView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ModeChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Pane1(This,value) )
    ( (This)->lpVtbl->put_Pane1(This,value) )
    ( (This)->lpVtbl->get_Pane2(This,value) )
    ( (This)->lpVtbl->put_Pane2(This,value) )
    ( (This)->lpVtbl->get_Pane1Length(This,value) )
    ( (This)->lpVtbl->put_Pane1Length(This,value) )
    ( (This)->lpVtbl->get_Pane2Length(This,value) )
    ( (This)->lpVtbl->put_Pane2Length(This,value) )
    ( (This)->lpVtbl->get_PanePriority(This,value) )
    ( (This)->lpVtbl->put_PanePriority(This,value) )
    ( (This)->lpVtbl->get_Mode(This,value) )
    ( (This)->lpVtbl->get_WideModeConfiguration(This,value) )
    ( (This)->lpVtbl->put_WideModeConfiguration(This,value) )
    ( (This)->lpVtbl->get_TallModeConfiguration(This,value) )
    ( (This)->lpVtbl->put_TallModeConfiguration(This,value) )
    ( (This)->lpVtbl->get_MinWideModeWidth(This,value) )
    ( (This)->lpVtbl->put_MinWideModeWidth(This,value) )
    ( (This)->lpVtbl->get_MinTallModeHeight(This,value) )
    ( (This)->lpVtbl->put_MinTallModeHeight(This,value) )
    ( (This)->lpVtbl->add_ModeChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ModeChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITwoPaneViewFactory[] = L"Windows.UI.Xaml.Controls.ITwoPaneViewFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITwoPaneViewStatics[] = L"Windows.UI.Xaml.Controls.ITwoPaneViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Pane1Property )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Pane2Property )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Pane1LengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Pane2LengthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PanePriorityProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_WideModeConfigurationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_TallModeConfigurationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinWideModeWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MinTallModeHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Pane1Property(This,value) )
    ( (This)->lpVtbl->get_Pane2Property(This,value) )
    ( (This)->lpVtbl->get_Pane1LengthProperty(This,value) )
    ( (This)->lpVtbl->get_Pane2LengthProperty(This,value) )
    ( (This)->lpVtbl->get_PanePriorityProperty(This,value) )
    ( (This)->lpVtbl->get_ModeProperty(This,value) )
    ( (This)->lpVtbl->get_WideModeConfigurationProperty(This,value) )
    ( (This)->lpVtbl->get_TallModeConfigurationProperty(This,value) )
    ( (This)->lpVtbl->get_MinWideModeWidthProperty(This,value) )
    ( (This)->lpVtbl->get_MinTallModeHeightProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUIElementCollection[] = L"Windows.UI.Xaml.Controls.IUIElementCollection";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Move )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
                  UINT32 oldIndex,
                  UINT32 newIndex
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->Move(This,oldIndex,newIndex) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUserControl[] = L"Windows.UI.Xaml.Controls.IUserControl";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Content(This,value) )
    ( (This)->lpVtbl->put_Content(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUserControlFactory[] = L"Windows.UI.Xaml.Controls.IUserControlFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
                  __RPC__in_opt IInspectable * baseInterface,
                   __RPC__deref_out_opt IInspectable * * innerInterface,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUserControlStatics[] = L"Windows.UI.Xaml.Controls.IUserControlStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContentProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVariableSizedWrapGrid[] = L"Windows.UI.Xaml.Controls.IVariableSizedWrapGrid";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumns )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaximumRowsOrColumns )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemHeight(This,value) )
    ( (This)->lpVtbl->put_ItemHeight(This,value) )
    ( (This)->lpVtbl->get_ItemWidth(This,value) )
    ( (This)->lpVtbl->put_ItemWidth(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->get_HorizontalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->get_VerticalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->put_VerticalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->get_MaximumRowsOrColumns(This,value) )
    ( (This)->lpVtbl->put_MaximumRowsOrColumns(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVariableSizedWrapGridStatics[] = L"Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumnsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_RowSpanProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetRowSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetRowSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  INT32 value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ColumnSpanProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetColumnSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                           __RPC__out INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetColumnSpan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * element,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemHeightProperty(This,value) )
    ( (This)->lpVtbl->get_ItemWidthProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalChildrenAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalChildrenAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_MaximumRowsOrColumnsProperty(This,value) )
    ( (This)->lpVtbl->get_RowSpanProperty(This,value) )
    ( (This)->lpVtbl->GetRowSpan(This,element,result) )
    ( (This)->lpVtbl->SetRowSpan(This,element,value) )
    ( (This)->lpVtbl->get_ColumnSpanProperty(This,value) )
    ( (This)->lpVtbl->GetColumnSpan(This,element,result) )
    ( (This)->lpVtbl->SetColumnSpan(This,element,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IViewbox[] = L"Windows.UI.Xaml.Controls.IViewbox";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Child )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Child )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                  __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StretchDirection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_StretchDirection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Child(This,value) )
    ( (This)->lpVtbl->put_Child(This,value) )
    ( (This)->lpVtbl->get_Stretch(This,value) )
    ( (This)->lpVtbl->put_Stretch(This,value) )
    ( (This)->lpVtbl->get_StretchDirection(This,value) )
    ( (This)->lpVtbl->put_StretchDirection(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IViewboxStatics[] = L"Windows.UI.Xaml.Controls.IViewboxStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StretchDirectionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_StretchProperty(This,value) )
    ( (This)->lpVtbl->get_StretchDirectionProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanel[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemContainerGenerator )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemContainerGenerator(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanelFactory[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanelFactory";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanelOverrides[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnItemsChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
                  __RPC__in_opt IInspectable * sender,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnClearChildren )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This
        );
    HRESULT ( STDMETHODCALLTYPE *BringIndexIntoView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
                  INT32 index
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnItemsChanged(This,sender,args) )
    ( (This)->lpVtbl->OnClearChildren(This) )
    ( (This)->lpVtbl->BringIndexIntoView(This,index) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanelProtected[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanelProtected";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *AddInternalChild )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * child
        );
    HRESULT ( STDMETHODCALLTYPE *InsertInternalChild )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
                  INT32 index,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement * child
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveInternalChildRange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
                  INT32 index,
                  INT32 range
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->AddInternalChild(This,child) )
    ( (This)->lpVtbl->InsertInternalChild(This,index,child) )
    ( (This)->lpVtbl->RemoveInternalChildRange(This,index,range) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingStackPanel[] = L"Windows.UI.Xaml.Controls.IVirtualizingStackPanel";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegular )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_AreScrollSnapPointsRegular )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_CleanUpVirtualizedItemEvent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_CleanUpVirtualizedItemEvent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreScrollSnapPointsRegular(This,value) )
    ( (This)->lpVtbl->put_AreScrollSnapPointsRegular(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->add_CleanUpVirtualizedItemEvent(This,handler,token) )
    ( (This)->lpVtbl->remove_CleanUpVirtualizedItemEvent(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingStackPanelOverrides[] = L"Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnCleanUpVirtualizedItem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * e
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->OnCleanUpVirtualizedItem(This,e) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingStackPanelStatics[] = L"Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegularProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VirtualizationModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetVirtualizationMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetVirtualizationMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsVirtualizingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsVirtualizing )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * o,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_AreScrollSnapPointsRegularProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_VirtualizationModeProperty(This,value) )
    ( (This)->lpVtbl->GetVirtualizationMode(This,element,result) )
    ( (This)->lpVtbl->SetVirtualizationMode(This,element,value) )
    ( (This)->lpVtbl->get_IsVirtualizingProperty(This,value) )
    ( (This)->lpVtbl->GetIsVirtualizing(This,o,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView[] = L"Windows.UI.Xaml.Controls.IWebView";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
    DEPRECATED("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.")
                               HRESULT ( STDMETHODCALLTYPE *get_AllowedScriptNotifyUris )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CUri * * value
        );
    DEPRECATED("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.")
                               HRESULT ( STDMETHODCALLTYPE *put_AllowedScriptNotifyUris )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in_opt __FIVector_1_Windows__CFoundation__CUri * value
        );
    DEPRECATED("Use CaptureSelectedContentToDataPackageAsync instead of DataTransferPackage. For more info, see MSDN.")
                               HRESULT ( STDMETHODCALLTYPE *get_DataTransferPackage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage * * value
        );
    DEPRECATED("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
                                HRESULT ( STDMETHODCALLTYPE *add_LoadCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
    DEPRECATED("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
                                   HRESULT ( STDMETHODCALLTYPE *remove_LoadCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ScriptNotify )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ScriptNotify )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  EventRegistrationToken token
        );
    DEPRECATED("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
                                HRESULT ( STDMETHODCALLTYPE *add_NavigationFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * handler,
                           __RPC__out EventRegistrationToken * token
        );
    DEPRECATED("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
                                   HRESULT ( STDMETHODCALLTYPE *remove_NavigationFailed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  EventRegistrationToken token
        );
    DEPRECATED("Use InvokeScriptAsync instead of InvokeScript. For more info, see MSDN.")
                      HRESULT ( STDMETHODCALLTYPE *InvokeScript )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in HSTRING scriptName,
                  UINT32 __argumentsSize,
                                            __RPC__in_ecount_full(__argumentsSize) HSTRING * arguments,
                           __RPC__deref_out_opt HSTRING * result
        );
    HRESULT ( STDMETHODCALLTYPE *Navigate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * source
        );
    HRESULT ( STDMETHODCALLTYPE *NavigateToString )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
                  __RPC__in HSTRING text
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Source(This,value) )
    ( (This)->lpVtbl->put_Source(This,value) )
DEPRECATED("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.")
    ( (This)->lpVtbl->get_AllowedScriptNotifyUris(This,value) )
DEPRECATED("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.")
    ( (This)->lpVtbl->put_AllowedScriptNotifyUris(This,value) )
DEPRECATED("Use CaptureSelectedContentToDataPackageAsync instead of DataTransferPackage. For more info, see MSDN.")
    ( (This)->lpVtbl->get_DataTransferPackage(This,value) )
DEPRECATED("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    ( (This)->lpVtbl->add_LoadCompleted(This,handler,token) )
DEPRECATED("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    ( (This)->lpVtbl->remove_LoadCompleted(This,token) )
    ( (This)->lpVtbl->add_ScriptNotify(This,handler,token) )
    ( (This)->lpVtbl->remove_ScriptNotify(This,token) )
DEPRECATED("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    ( (This)->lpVtbl->add_NavigationFailed(This,handler,token) )
DEPRECATED("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    ( (This)->lpVtbl->remove_NavigationFailed(This,token) )
DEPRECATED("Use InvokeScriptAsync instead of InvokeScript. For more info, see MSDN.")
    ( (This)->lpVtbl->InvokeScript(This,scriptName,__argumentsSize,arguments,result) )
    ( (This)->lpVtbl->Navigate(This,source) )
    ( (This)->lpVtbl->NavigateToString(This,text) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView2[] = L"Windows.UI.Xaml.Controls.IWebView2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *GoForward )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *GoBack )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *Refresh )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *Stop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *CapturePreviewToStreamAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream * stream,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIAsyncAction * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *InvokeScriptAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in HSTRING scriptName,
                  __RPC__in_opt __FIIterable_1_HSTRING * arguments,
                           __RPC__deref_out_opt __FIAsyncOperation_1_HSTRING * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *CaptureSelectedContentToDataPackageAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                           __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *NavigateToLocalStreamUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * source,
                  __RPC__in_opt __x_ABI_CWindows_CWeb_CIUriToStreamResolver * streamResolver
        );
    HRESULT ( STDMETHODCALLTYPE *BuildLocalStreamUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in HSTRING contentIdentifier,
                  __RPC__in HSTRING relativePath,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * result
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultBackgroundColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_DefaultBackgroundColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __x_ABI_CWindows_CUI_CColor value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_FrameContentLoading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_FrameContentLoading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_FrameDOMContentLoaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_FrameDOMContentLoaded )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_LongRunningScriptDetected )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_LongRunningScriptDetected )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_UnsafeContentWarningDisplaying )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_UnsafeContentWarningDisplaying )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_UnviewableContentIdentified )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_UnviewableContentIdentified )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *NavigateWithHttpRequestMessage )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage * requestMessage
        );
    HRESULT ( STDMETHODCALLTYPE *Focus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
                  __x_ABI_CWindows_CUI_CXaml_CFocusState value,
                           __RPC__out boolean * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanGoBack(This,value) )
    ( (This)->lpVtbl->get_CanGoForward(This,value) )
    ( (This)->lpVtbl->get_DocumentTitle(This,value) )
    ( (This)->lpVtbl->add_NavigationStarting(This,handler,token) )
    ( (This)->lpVtbl->remove_NavigationStarting(This,token) )
    ( (This)->lpVtbl->add_ContentLoading(This,handler,token) )
    ( (This)->lpVtbl->remove_ContentLoading(This,token) )
    ( (This)->lpVtbl->add_DOMContentLoaded(This,handler,token) )
    ( (This)->lpVtbl->remove_DOMContentLoaded(This,token) )
    ( (This)->lpVtbl->GoForward(This) )
    ( (This)->lpVtbl->GoBack(This) )
    ( (This)->lpVtbl->Refresh(This) )
    ( (This)->lpVtbl->Stop(This) )
    ( (This)->lpVtbl->CapturePreviewToStreamAsync(This,stream,operation) )
    ( (This)->lpVtbl->InvokeScriptAsync(This,scriptName,arguments,operation) )
    ( (This)->lpVtbl->CaptureSelectedContentToDataPackageAsync(This,operation) )
    ( (This)->lpVtbl->NavigateToLocalStreamUri(This,source,streamResolver) )
    ( (This)->lpVtbl->BuildLocalStreamUri(This,contentIdentifier,relativePath,result) )
    ( (This)->lpVtbl->get_DefaultBackgroundColor(This,value) )
    ( (This)->lpVtbl->put_DefaultBackgroundColor(This,value) )
    ( (This)->lpVtbl->add_NavigationCompleted(This,handler,token) )
    ( (This)->lpVtbl->remove_NavigationCompleted(This,token) )
    ( (This)->lpVtbl->add_FrameNavigationStarting(This,handler,token) )
    ( (This)->lpVtbl->remove_FrameNavigationStarting(This,token) )
    ( (This)->lpVtbl->add_FrameContentLoading(This,handler,token) )
    ( (This)->lpVtbl->remove_FrameContentLoading(This,token) )
    ( (This)->lpVtbl->add_FrameDOMContentLoaded(This,handler,token) )
    ( (This)->lpVtbl->remove_FrameDOMContentLoaded(This,token) )
    ( (This)->lpVtbl->add_FrameNavigationCompleted(This,handler,token) )
    ( (This)->lpVtbl->remove_FrameNavigationCompleted(This,token) )
    ( (This)->lpVtbl->add_LongRunningScriptDetected(This,handler,token) )
    ( (This)->lpVtbl->remove_LongRunningScriptDetected(This,token) )
    ( (This)->lpVtbl->add_UnsafeContentWarningDisplaying(This,handler,token) )
    ( (This)->lpVtbl->remove_UnsafeContentWarningDisplaying(This,token) )
    ( (This)->lpVtbl->add_UnviewableContentIdentified(This,handler,token) )
    ( (This)->lpVtbl->remove_UnviewableContentIdentified(This,token) )
    ( (This)->lpVtbl->NavigateWithHttpRequestMessage(This,requestMessage) )
    ( (This)->lpVtbl->Focus(This,value,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView3[] = L"Windows.UI.Xaml.Controls.IWebView3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This,
                           __RPC__out boolean * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_ContainsFullScreenElementChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_ContainsFullScreenElementChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContainsFullScreenElement(This,value) )
    ( (This)->lpVtbl->add_ContainsFullScreenElementChanged(This,handler,token) )
    ( (This)->lpVtbl->remove_ContainsFullScreenElementChanged(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView4[] = L"Windows.UI.Xaml.Controls.IWebView4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ExecutionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DeferredPermissionRequests )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Settings )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * * value
        );
                    HRESULT ( STDMETHODCALLTYPE *add_UnsupportedUriSchemeIdentified )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_UnsupportedUriSchemeIdentified )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_NewWindowRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_NewWindowRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  EventRegistrationToken token
        );
                    HRESULT ( STDMETHODCALLTYPE *add_PermissionRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_PermissionRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *AddWebAllowedObject )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  __RPC__in HSTRING name,
                  __RPC__in_opt IInspectable * pObject
        );
    HRESULT ( STDMETHODCALLTYPE *DeferredPermissionRequestById )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 * This,
                  UINT32 id,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ExecutionMode(This,value) )
    ( (This)->lpVtbl->get_DeferredPermissionRequests(This,value) )
    ( (This)->lpVtbl->get_Settings(This,value) )
    ( (This)->lpVtbl->add_UnsupportedUriSchemeIdentified(This,handler,token) )
    ( (This)->lpVtbl->remove_UnsupportedUriSchemeIdentified(This,token) )
    ( (This)->lpVtbl->add_NewWindowRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_NewWindowRequested(This,token) )
    ( (This)->lpVtbl->add_PermissionRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_PermissionRequested(This,token) )
    ( (This)->lpVtbl->AddWebAllowedObject(This,name,pObject) )
    ( (This)->lpVtbl->DeferredPermissionRequestById(This,id,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView5[] = L"Windows.UI.Xaml.Controls.IWebView5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusLeft )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusRight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusRight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_XYFocusDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_XYFocusLeft(This,value) )
    ( (This)->lpVtbl->put_XYFocusLeft(This,value) )
    ( (This)->lpVtbl->get_XYFocusRight(This,value) )
    ( (This)->lpVtbl->put_XYFocusRight(This,value) )
    ( (This)->lpVtbl->get_XYFocusUp(This,value) )
    ( (This)->lpVtbl->put_XYFocusUp(This,value) )
    ( (This)->lpVtbl->get_XYFocusDown(This,value) )
    ( (This)->lpVtbl->put_XYFocusDown(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView6[] = L"Windows.UI.Xaml.Controls.IWebView6";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_SeparateProcessLost )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_SeparateProcessLost )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_SeparateProcessLost(This,handler,token) )
    ( (This)->lpVtbl->remove_SeparateProcessLost(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView7[] = L"Windows.UI.Xaml.Controls.IWebView7";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This,
                 __RPC__out TrustLevel *trustLevel
    );
                HRESULT ( STDMETHODCALLTYPE *add_WebResourceRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This,
                  __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs * handler,
                           __RPC__out EventRegistrationToken * token
        );
                       HRESULT ( STDMETHODCALLTYPE *remove_WebResourceRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 * This,
                  EventRegistrationToken token
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->add_WebResourceRequested(This,handler,token) )
    ( (This)->lpVtbl->remove_WebResourceRequested(This,token) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewBrush[] = L"Windows.UI.Xaml.Controls.IWebViewBrush";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SourceName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
                           __RPC__deref_out_opt HSTRING * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_SourceName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
                  __RPC__in HSTRING value
        );
    HRESULT ( STDMETHODCALLTYPE *Redraw )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This
        );
    HRESULT ( STDMETHODCALLTYPE *SetSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
                  __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * source
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SourceName(This,value) )
    ( (This)->lpVtbl->put_SourceName(This,value) )
    ( (This)->lpVtbl->Redraw(This) )
    ( (This)->lpVtbl->SetSource(This,source) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewBrushStatics[] = L"Windows.UI.Xaml.Controls.IWebViewBrushStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_SourceNameProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_SourceNameProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewContentLoadingEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewDOMContentLoadedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewDeferredPermissionRequest[] = L"Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PermissionType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Id )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This,
                           __RPC__out UINT32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *Allow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This
        );
    HRESULT ( STDMETHODCALLTYPE *Deny )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequestVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequestVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_PermissionType(This,value) )
    ( (This)->lpVtbl->get_Id(This,value) )
    ( (This)->lpVtbl->Allow(This) )
    ( (This)->lpVtbl->Deny(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewFactory4[] = L"Windows.UI.Xaml.Controls.IWebViewFactory4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithExecutionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode executionMode,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->CreateInstanceWithExecutionMode(This,executionMode,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewLongRunningScriptDetectedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ExecutionTime )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_StopPageScriptExecution )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_StopPageScriptExecution )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ExecutionTime(This,value) )
    ( (This)->lpVtbl->get_StopPageScriptExecution(This,value) )
    ( (This)->lpVtbl->put_StopPageScriptExecution(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewNavigationCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsSuccess )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_WebErrorStatus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CWeb_CWebErrorStatus * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_IsSuccess(This,value) )
    ( (This)->lpVtbl->get_WebErrorStatus(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewNavigationFailedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewNavigationFailedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_WebErrorStatus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
                           __RPC__out __x_ABI_CWindows_CWeb_CWebErrorStatus * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_WebErrorStatus(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewNavigationStartingEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_Cancel(This,value) )
    ( (This)->lpVtbl->put_Cancel(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewNewWindowRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewNewWindowRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Referrer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_Referrer(This,value) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewPermissionRequest[] = L"Windows.UI.Xaml.Controls.IWebViewPermissionRequest";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_PermissionType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Id )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
                           __RPC__out UINT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_State )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState * value
        );
    HRESULT ( STDMETHODCALLTYPE *Defer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This
        );
    HRESULT ( STDMETHODCALLTYPE *Allow )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This
        );
    HRESULT ( STDMETHODCALLTYPE *Deny )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * This
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_PermissionType(This,value) )
    ( (This)->lpVtbl->get_Id(This,value) )
    ( (This)->lpVtbl->get_State(This,value) )
    ( (This)->lpVtbl->Defer(This) )
    ( (This)->lpVtbl->Allow(This) )
    ( (This)->lpVtbl->Deny(This) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewPermissionRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewPermissionRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_PermissionRequest )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_PermissionRequest(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewSeparateProcessLostEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewSeparateProcessLostEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewSettings[] = L"Windows.UI.Xaml.Controls.IWebViewSettings";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettingsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_IsJavaScriptEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsJavaScriptEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
                  boolean value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_IsIndexedDBEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_IsIndexedDBEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettingsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettingsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_IsJavaScriptEnabled(This,value) )
    ( (This)->lpVtbl->put_IsJavaScriptEnabled(This,value) )
    ( (This)->lpVtbl->get_IsIndexedDBEnabled(This,value) )
    ( (This)->lpVtbl->put_IsIndexedDBEnabled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewStatics[] = L"Windows.UI.Xaml.Controls.IWebViewStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
    DEPRECATED("AnyScriptNotifyUri is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AnyScriptNotifyUri documentation.")
                               HRESULT ( STDMETHODCALLTYPE *get_AnyScriptNotifyUri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
                           __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CUri * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    DEPRECATED("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.")
                               HRESULT ( STDMETHODCALLTYPE *get_AllowedScriptNotifyUrisProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    DEPRECATED("Use CaptureSelectedContentToDataPackageAsync instead of DataTransferPackage. For more info, see MSDN.")
                               HRESULT ( STDMETHODCALLTYPE *get_DataTransferPackageProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
DEPRECATED("AnyScriptNotifyUri is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AnyScriptNotifyUri documentation.")
    ( (This)->lpVtbl->get_AnyScriptNotifyUri(This,value) )
    ( (This)->lpVtbl->get_SourceProperty(This,value) )
DEPRECATED("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.")
    ( (This)->lpVtbl->get_AllowedScriptNotifyUrisProperty(This,value) )
DEPRECATED("Use CaptureSelectedContentToDataPackageAsync instead of DataTransferPackage. For more info, see MSDN.")
    ( (This)->lpVtbl->get_DataTransferPackageProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewStatics2[] = L"Windows.UI.Xaml.Controls.IWebViewStatics2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_CanGoBackProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_CanGoForwardProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DocumentTitleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_DefaultBackgroundColorProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_CanGoBackProperty(This,value) )
    ( (This)->lpVtbl->get_CanGoForwardProperty(This,value) )
    ( (This)->lpVtbl->get_DocumentTitleProperty(This,value) )
    ( (This)->lpVtbl->get_DefaultBackgroundColorProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewStatics3[] = L"Windows.UI.Xaml.Controls.IWebViewStatics3";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ContainsFullScreenElementProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ContainsFullScreenElementProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewStatics4[] = L"Windows.UI.Xaml.Controls.IWebViewStatics4";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_DefaultExecutionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode * value
        );
    HRESULT ( STDMETHODCALLTYPE *ClearTemporaryWebDataAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIAsyncAction * * operation
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_DefaultExecutionMode(This,value) )
    ( (This)->lpVtbl->ClearTemporaryWebDataAsync(This,operation) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewStatics5[] = L"Windows.UI.Xaml.Controls.IWebViewStatics5";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeftProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusRightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusUpProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_XYFocusDownProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_XYFocusLeftProperty(This,value) )
    ( (This)->lpVtbl->get_XYFocusRightProperty(This,value) )
    ( (This)->lpVtbl->get_XYFocusUpProperty(This,value) )
    ( (This)->lpVtbl->get_XYFocusDownProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewUnsupportedUriSchemeIdentifiedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewUnsupportedUriSchemeIdentifiedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
                           __RPC__out boolean * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs * This,
                  boolean value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_Handled(This,value) )
    ( (This)->lpVtbl->put_Handled(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewUnviewableContentIdentifiedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Referrer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Uri(This,value) )
    ( (This)->lpVtbl->get_Referrer(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewUnviewableContentIdentifiedEventArgs2[] = L"Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs2";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_MediaType )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 * This,
                           __RPC__deref_out_opt HSTRING * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2Vtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2Vtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_MediaType(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewWebResourceRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewWebResourceRequestedEventArgs";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_Request )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Response )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Response )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
                  __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIDeferral * * result
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_Request(This,value) )
    ( (This)->lpVtbl->get_Response(This,value) )
    ( (This)->lpVtbl->put_Response(This,value) )
    ( (This)->lpVtbl->GetDeferral(This,result) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWrapGrid[] = L"Windows.UI.Xaml.Controls.IWrapGrid";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemWidth )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                           __RPC__out DOUBLE * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_ItemHeight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                  DOUBLE value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_HorizontalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                           __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_VerticalChildrenAlignment )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                  __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumns )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                           __RPC__out INT32 * value
        );
                   HRESULT ( STDMETHODCALLTYPE *put_MaximumRowsOrColumns )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
                  INT32 value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemWidth(This,value) )
    ( (This)->lpVtbl->put_ItemWidth(This,value) )
    ( (This)->lpVtbl->get_ItemHeight(This,value) )
    ( (This)->lpVtbl->put_ItemHeight(This,value) )
    ( (This)->lpVtbl->get_Orientation(This,value) )
    ( (This)->lpVtbl->put_Orientation(This,value) )
    ( (This)->lpVtbl->get_HorizontalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->put_HorizontalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->get_VerticalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->put_VerticalChildrenAlignment(This,value) )
    ( (This)->lpVtbl->get_MaximumRowsOrColumns(This,value) )
    ( (This)->lpVtbl->put_MaximumRowsOrColumns(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid;
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWrapGridStatics[] = L"Windows.UI.Xaml.Controls.IWrapGridStatics";
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
               __RPC__in REFIID riid,
    _COM_Outptr_ void **ppvObject
    );
ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This
    );
ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This
    );
HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                __RPC__out ULONG *iidCount,
                                  __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );
HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                __RPC__deref_out_opt HSTRING *className
    );
HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                 __RPC__out TrustLevel *trustLevel
    );
               HRESULT ( STDMETHODCALLTYPE *get_ItemWidthProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_ItemHeightProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignmentProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
                   HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumnsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
                           __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
} __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl;
interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl *lpVtbl;
};
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )
        ( (This)->lpVtbl->AddRef(This) )
        ( (This)->lpVtbl->Release(This) )
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )
    ( (This)->lpVtbl->get_ItemWidthProperty(This,value) )
    ( (This)->lpVtbl->get_ItemHeightProperty(This,value) )
    ( (This)->lpVtbl->get_OrientationProperty(This,value) )
    ( (This)->lpVtbl->get_HorizontalChildrenAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_VerticalChildrenAlignmentProperty(This,value) )
    ( (This)->lpVtbl->get_MaximumRowsOrColumnsProperty(This,value) )
EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics;
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AnchorRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.AnchorRequestedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBar[] = L"Windows.UI.Xaml.Controls.AppBar";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBarButton[] = L"Windows.UI.Xaml.Controls.AppBarButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBarElementContainer[] = L"Windows.UI.Xaml.Controls.AppBarElementContainer";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBarSeparator[] = L"Windows.UI.Xaml.Controls.AppBarSeparator";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBarToggleButton[] = L"Windows.UI.Xaml.Controls.AppBarToggleButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AutoSuggestBox[] = L"Windows.UI.Xaml.Controls.AutoSuggestBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs[] = L"Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs[] = L"Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_BackClickEventArgs[] = L"Windows.UI.Xaml.Controls.BackClickEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_BitmapIcon[] = L"Windows.UI.Xaml.Controls.BitmapIcon";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_BitmapIconSource[] = L"Windows.UI.Xaml.Controls.BitmapIconSource";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Border[] = L"Windows.UI.Xaml.Controls.Border";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Button[] = L"Windows.UI.Xaml.Controls.Button";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CalendarDatePicker[] = L"Windows.UI.Xaml.Controls.CalendarDatePicker";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CalendarDatePickerDateChangedEventArgs[] = L"Windows.UI.Xaml.Controls.CalendarDatePickerDateChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CalendarView[] = L"Windows.UI.Xaml.Controls.CalendarView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CalendarViewDayItem[] = L"Windows.UI.Xaml.Controls.CalendarViewDayItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CalendarViewDayItemChangingEventArgs[] = L"Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CalendarViewSelectedDatesChangedEventArgs[] = L"Windows.UI.Xaml.Controls.CalendarViewSelectedDatesChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs[] = L"Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Canvas[] = L"Windows.UI.Xaml.Controls.Canvas";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CaptureElement[] = L"Windows.UI.Xaml.Controls.CaptureElement";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CheckBox[] = L"Windows.UI.Xaml.Controls.CheckBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs[] = L"Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs[] = L"Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CleanUpVirtualizedItemEventArgs[] = L"Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ColorChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ColorChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ColorPicker[] = L"Windows.UI.Xaml.Controls.ColorPicker";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ColumnDefinition[] = L"Windows.UI.Xaml.Controls.ColumnDefinition";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ColumnDefinitionCollection[] = L"Windows.UI.Xaml.Controls.ColumnDefinitionCollection";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ComboBox[] = L"Windows.UI.Xaml.Controls.ComboBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ComboBoxItem[] = L"Windows.UI.Xaml.Controls.ComboBoxItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ComboBoxTextSubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CommandBar[] = L"Windows.UI.Xaml.Controls.CommandBar";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CommandBarFlyout[] = L"Windows.UI.Xaml.Controls.CommandBarFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CommandBarOverflowPresenter[] = L"Windows.UI.Xaml.Controls.CommandBarOverflowPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentControl[] = L"Windows.UI.Xaml.Controls.ContentControl";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentDialog[] = L"Windows.UI.Xaml.Controls.ContentDialog";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentDialogButtonClickDeferral[] = L"Windows.UI.Xaml.Controls.ContentDialogButtonClickDeferral";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs[] = L"Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs[] = L"Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentDialogClosingDeferral[] = L"Windows.UI.Xaml.Controls.ContentDialogClosingDeferral";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs[] = L"Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs[] = L"Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentLinkChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ContentLinkChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentPresenter[] = L"Windows.UI.Xaml.Controls.ContentPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContextMenuEventArgs[] = L"Windows.UI.Xaml.Controls.ContextMenuEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Control[] = L"Windows.UI.Xaml.Controls.Control";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ControlTemplate[] = L"Windows.UI.Xaml.Controls.ControlTemplate";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DataTemplateSelector[] = L"Windows.UI.Xaml.Controls.DataTemplateSelector";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePickedEventArgs[] = L"Windows.UI.Xaml.Controls.DatePickedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePicker[] = L"Windows.UI.Xaml.Controls.DatePicker";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePickerFlyout[] = L"Windows.UI.Xaml.Controls.DatePickerFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePickerFlyoutItem[] = L"Windows.UI.Xaml.Controls.DatePickerFlyoutItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.DatePickerFlyoutPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePickerSelectedValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.DatePickerSelectedValueChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DragItemsStartingEventArgs[] = L"Windows.UI.Xaml.Controls.DragItemsStartingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DropDownButton[] = L"Windows.UI.Xaml.Controls.DropDownButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DropDownButtonAutomationPeer[] = L"Windows.UI.Xaml.Controls.DropDownButtonAutomationPeer";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DynamicOverflowItemsChangingEventArgs[] = L"Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FlipView[] = L"Windows.UI.Xaml.Controls.FlipView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FlipViewItem[] = L"Windows.UI.Xaml.Controls.FlipViewItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Flyout[] = L"Windows.UI.Xaml.Controls.Flyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FlyoutPresenter[] = L"Windows.UI.Xaml.Controls.FlyoutPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FocusDisengagedEventArgs[] = L"Windows.UI.Xaml.Controls.FocusDisengagedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FocusEngagedEventArgs[] = L"Windows.UI.Xaml.Controls.FocusEngagedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FontIcon[] = L"Windows.UI.Xaml.Controls.FontIcon";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FontIconSource[] = L"Windows.UI.Xaml.Controls.FontIconSource";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Frame[] = L"Windows.UI.Xaml.Controls.Frame";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Grid[] = L"Windows.UI.Xaml.Controls.Grid";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GridView[] = L"Windows.UI.Xaml.Controls.GridView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GridViewHeaderItem[] = L"Windows.UI.Xaml.Controls.GridViewHeaderItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GridViewItem[] = L"Windows.UI.Xaml.Controls.GridViewItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GroupItem[] = L"Windows.UI.Xaml.Controls.GroupItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GroupStyle[] = L"Windows.UI.Xaml.Controls.GroupStyle";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GroupStyleSelector[] = L"Windows.UI.Xaml.Controls.GroupStyleSelector";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HandwritingPanelClosedEventArgs[] = L"Windows.UI.Xaml.Controls.HandwritingPanelClosedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HandwritingPanelOpenedEventArgs[] = L"Windows.UI.Xaml.Controls.HandwritingPanelOpenedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HandwritingView[] = L"Windows.UI.Xaml.Controls.HandwritingView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Hub[] = L"Windows.UI.Xaml.Controls.Hub";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HubSection[] = L"Windows.UI.Xaml.Controls.HubSection";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HubSectionCollection[] = L"Windows.UI.Xaml.Controls.HubSectionCollection";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HubSectionHeaderClickEventArgs[] = L"Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HyperlinkButton[] = L"Windows.UI.Xaml.Controls.HyperlinkButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_IconElement[] = L"Windows.UI.Xaml.Controls.IconElement";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_IconSource[] = L"Windows.UI.Xaml.Controls.IconSource";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_IconSourceElement[] = L"Windows.UI.Xaml.Controls.IconSourceElement";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Image[] = L"Windows.UI.Xaml.Controls.Image";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkCanvas[] = L"Windows.UI.Xaml.Controls.InkCanvas";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbar[] = L"Windows.UI.Xaml.Controls.InkToolbar";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarBallpointPenButton[] = L"Windows.UI.Xaml.Controls.InkToolbarBallpointPenButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarCustomPen[] = L"Windows.UI.Xaml.Controls.InkToolbarCustomPen";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarCustomPenButton[] = L"Windows.UI.Xaml.Controls.InkToolbarCustomPenButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarCustomToggleButton[] = L"Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarCustomToolButton[] = L"Windows.UI.Xaml.Controls.InkToolbarCustomToolButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarEraserButton[] = L"Windows.UI.Xaml.Controls.InkToolbarEraserButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarFlyoutItem[] = L"Windows.UI.Xaml.Controls.InkToolbarFlyoutItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarHighlighterButton[] = L"Windows.UI.Xaml.Controls.InkToolbarHighlighterButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarIsStencilButtonCheckedChangedEventArgs[] = L"Windows.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarMenuButton[] = L"Windows.UI.Xaml.Controls.InkToolbarMenuButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarPenButton[] = L"Windows.UI.Xaml.Controls.InkToolbarPenButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarPenConfigurationControl[] = L"Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarPencilButton[] = L"Windows.UI.Xaml.Controls.InkToolbarPencilButton";
DEPRECATED("InkToolbarRulerButton is deprecated starting from Windows 10 Creators Update. Please use InkToolbarStencilButton going forward. For more info, see MSDN.")
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarRulerButton[] = L"Windows.UI.Xaml.Controls.InkToolbarRulerButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarStencilButton[] = L"Windows.UI.Xaml.Controls.InkToolbarStencilButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarToggleButton[] = L"Windows.UI.Xaml.Controls.InkToolbarToggleButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_InkToolbarToolButton[] = L"Windows.UI.Xaml.Controls.InkToolbarToolButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_IsTextTrimmedChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemClickEventArgs[] = L"Windows.UI.Xaml.Controls.ItemClickEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemCollection[] = L"Windows.UI.Xaml.Controls.ItemCollection";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemContainerGenerator[] = L"Windows.UI.Xaml.Controls.ItemContainerGenerator";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsControl[] = L"Windows.UI.Xaml.Controls.ItemsControl";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsPanelTemplate[] = L"Windows.UI.Xaml.Controls.ItemsPanelTemplate";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsPickedEventArgs[] = L"Windows.UI.Xaml.Controls.ItemsPickedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsPresenter[] = L"Windows.UI.Xaml.Controls.ItemsPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsStackPanel[] = L"Windows.UI.Xaml.Controls.ItemsStackPanel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsWrapGrid[] = L"Windows.UI.Xaml.Controls.ItemsWrapGrid";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListBox[] = L"Windows.UI.Xaml.Controls.ListBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListBoxItem[] = L"Windows.UI.Xaml.Controls.ListBoxItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListPickerFlyout[] = L"Windows.UI.Xaml.Controls.ListPickerFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListPickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.ListPickerFlyoutPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListView[] = L"Windows.UI.Xaml.Controls.ListView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewBase[] = L"Windows.UI.Xaml.Controls.ListViewBase";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewBaseHeaderItem[] = L"Windows.UI.Xaml.Controls.ListViewBaseHeaderItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewHeaderItem[] = L"Windows.UI.Xaml.Controls.ListViewHeaderItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewItem[] = L"Windows.UI.Xaml.Controls.ListViewItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewPersistenceHelper[] = L"Windows.UI.Xaml.Controls.ListViewPersistenceHelper";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MediaElement[] = L"Windows.UI.Xaml.Controls.MediaElement";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MediaPlayerElement[] = L"Windows.UI.Xaml.Controls.MediaPlayerElement";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MediaPlayerPresenter[] = L"Windows.UI.Xaml.Controls.MediaPlayerPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MediaTransportControls[] = L"Windows.UI.Xaml.Controls.MediaTransportControls";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MediaTransportControlsHelper[] = L"Windows.UI.Xaml.Controls.MediaTransportControlsHelper";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuBar[] = L"Windows.UI.Xaml.Controls.MenuBar";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuBarItem[] = L"Windows.UI.Xaml.Controls.MenuBarItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuBarItemFlyout[] = L"Windows.UI.Xaml.Controls.MenuBarItemFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyout[] = L"Windows.UI.Xaml.Controls.MenuFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.MenuFlyoutItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutItemBase[] = L"Windows.UI.Xaml.Controls.MenuFlyoutItemBase";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.MenuFlyoutPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutSeparator[] = L"Windows.UI.Xaml.Controls.MenuFlyoutSeparator";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutSubItem[] = L"Windows.UI.Xaml.Controls.MenuFlyoutSubItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationView[] = L"Windows.UI.Xaml.Controls.NavigationView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewBackRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewDisplayModeChangedEventArgs[] = L"Windows.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewItem[] = L"Windows.UI.Xaml.Controls.NavigationViewItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewItemBase[] = L"Windows.UI.Xaml.Controls.NavigationViewItemBase";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewItemHeader[] = L"Windows.UI.Xaml.Controls.NavigationViewItemHeader";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewItemInvokedEventArgs[] = L"Windows.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewItemSeparator[] = L"Windows.UI.Xaml.Controls.NavigationViewItemSeparator";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewList[] = L"Windows.UI.Xaml.Controls.NavigationViewList";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewPaneClosingEventArgs[] = L"Windows.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewSelectionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NavigationViewTemplateSettings[] = L"Windows.UI.Xaml.Controls.NavigationViewTemplateSettings";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NotifyEventArgs[] = L"Windows.UI.Xaml.Controls.NotifyEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Page[] = L"Windows.UI.Xaml.Controls.Page";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Panel[] = L"Windows.UI.Xaml.Controls.Panel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ParallaxView[] = L"Windows.UI.Xaml.Controls.ParallaxView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PasswordBox[] = L"Windows.UI.Xaml.Controls.PasswordBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PasswordBoxPasswordChangingEventArgs[] = L"Windows.UI.Xaml.Controls.PasswordBoxPasswordChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PathIcon[] = L"Windows.UI.Xaml.Controls.PathIcon";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PathIconSource[] = L"Windows.UI.Xaml.Controls.PathIconSource";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PersonPicture[] = L"Windows.UI.Xaml.Controls.PersonPicture";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PickerConfirmedEventArgs[] = L"Windows.UI.Xaml.Controls.PickerConfirmedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PickerFlyout[] = L"Windows.UI.Xaml.Controls.PickerFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.PickerFlyoutPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Pivot[] = L"Windows.UI.Xaml.Controls.Pivot";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PivotItem[] = L"Windows.UI.Xaml.Controls.PivotItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PivotItemEventArgs[] = L"Windows.UI.Xaml.Controls.PivotItemEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ProgressBar[] = L"Windows.UI.Xaml.Controls.ProgressBar";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ProgressRing[] = L"Windows.UI.Xaml.Controls.ProgressRing";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RadioButton[] = L"Windows.UI.Xaml.Controls.RadioButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RatingControl[] = L"Windows.UI.Xaml.Controls.RatingControl";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RatingItemFontInfo[] = L"Windows.UI.Xaml.Controls.RatingItemFontInfo";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RatingItemImageInfo[] = L"Windows.UI.Xaml.Controls.RatingItemImageInfo";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RatingItemInfo[] = L"Windows.UI.Xaml.Controls.RatingItemInfo";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RefreshContainer[] = L"Windows.UI.Xaml.Controls.RefreshContainer";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RefreshInteractionRatioChangedEventArgs[] = L"Windows.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RefreshRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.RefreshRequestedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RefreshStateChangedEventArgs[] = L"Windows.UI.Xaml.Controls.RefreshStateChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RefreshVisualizer[] = L"Windows.UI.Xaml.Controls.RefreshVisualizer";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RelativePanel[] = L"Windows.UI.Xaml.Controls.RelativePanel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichEditBox[] = L"Windows.UI.Xaml.Controls.RichEditBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichEditBoxSelectionChangingEventArgs[] = L"Windows.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichEditBoxTextChangingEventArgs[] = L"Windows.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichTextBlock[] = L"Windows.UI.Xaml.Controls.RichTextBlock";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichTextBlockOverflow[] = L"Windows.UI.Xaml.Controls.RichTextBlockOverflow";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RowDefinition[] = L"Windows.UI.Xaml.Controls.RowDefinition";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RowDefinitionCollection[] = L"Windows.UI.Xaml.Controls.RowDefinitionCollection";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollContentPresenter[] = L"Windows.UI.Xaml.Controls.ScrollContentPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewer[] = L"Windows.UI.Xaml.Controls.ScrollViewer";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewerView[] = L"Windows.UI.Xaml.Controls.ScrollViewerView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBox[] = L"Windows.UI.Xaml.Controls.SearchBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxQueryChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxQuerySubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxResultSuggestionChosenEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxSuggestionsRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SectionsInViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SelectionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SelectionChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SemanticZoom[] = L"Windows.UI.Xaml.Controls.SemanticZoom";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SemanticZoomLocation[] = L"Windows.UI.Xaml.Controls.SemanticZoomLocation";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SemanticZoomViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SettingsFlyout[] = L"Windows.UI.Xaml.Controls.SettingsFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Slider[] = L"Windows.UI.Xaml.Controls.Slider";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SplitButton[] = L"Windows.UI.Xaml.Controls.SplitButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SplitButtonAutomationPeer[] = L"Windows.UI.Xaml.Controls.SplitButtonAutomationPeer";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SplitButtonClickEventArgs[] = L"Windows.UI.Xaml.Controls.SplitButtonClickEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SplitView[] = L"Windows.UI.Xaml.Controls.SplitView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs[] = L"Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_StackPanel[] = L"Windows.UI.Xaml.Controls.StackPanel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_StyleSelector[] = L"Windows.UI.Xaml.Controls.StyleSelector";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwapChainBackgroundPanel[] = L"Windows.UI.Xaml.Controls.SwapChainBackgroundPanel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwapChainPanel[] = L"Windows.UI.Xaml.Controls.SwapChainPanel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwipeControl[] = L"Windows.UI.Xaml.Controls.SwipeControl";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwipeItem[] = L"Windows.UI.Xaml.Controls.SwipeItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwipeItemInvokedEventArgs[] = L"Windows.UI.Xaml.Controls.SwipeItemInvokedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwipeItems[] = L"Windows.UI.Xaml.Controls.SwipeItems";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SymbolIcon[] = L"Windows.UI.Xaml.Controls.SymbolIcon";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SymbolIconSource[] = L"Windows.UI.Xaml.Controls.SymbolIconSource";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextBlock[] = L"Windows.UI.Xaml.Controls.TextBlock";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextBox[] = L"Windows.UI.Xaml.Controls.TextBox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextBoxBeforeTextChangingEventArgs[] = L"Windows.UI.Xaml.Controls.TextBoxBeforeTextChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextBoxSelectionChangingEventArgs[] = L"Windows.UI.Xaml.Controls.TextBoxSelectionChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs[] = L"Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextChangedEventArgs[] = L"Windows.UI.Xaml.Controls.TextChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextCommandBarFlyout[] = L"Windows.UI.Xaml.Controls.TextCommandBarFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs[] = L"Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs[] = L"Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextControlCopyingToClipboardEventArgs[] = L"Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextControlCuttingToClipboardEventArgs[] = L"Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextControlPasteEventArgs[] = L"Windows.UI.Xaml.Controls.TextControlPasteEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePickedEventArgs[] = L"Windows.UI.Xaml.Controls.TimePickedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePicker[] = L"Windows.UI.Xaml.Controls.TimePicker";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePickerFlyout[] = L"Windows.UI.Xaml.Controls.TimePickerFlyout";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePickerFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.TimePickerFlyoutPresenter";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePickerSelectedValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.TimePickerSelectedValueChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToggleMenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToggleSplitButton[] = L"Windows.UI.Xaml.Controls.ToggleSplitButton";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToggleSplitButtonAutomationPeer[] = L"Windows.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToggleSplitButtonIsCheckedChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToggleSwitch[] = L"Windows.UI.Xaml.Controls.ToggleSwitch";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToolTip[] = L"Windows.UI.Xaml.Controls.ToolTip";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToolTipService[] = L"Windows.UI.Xaml.Controls.ToolTipService";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeView[] = L"Windows.UI.Xaml.Controls.TreeView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewCollapsedEventArgs[] = L"Windows.UI.Xaml.Controls.TreeViewCollapsedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewDragItemsCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewDragItemsStartingEventArgs[] = L"Windows.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewExpandingEventArgs[] = L"Windows.UI.Xaml.Controls.TreeViewExpandingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewItem[] = L"Windows.UI.Xaml.Controls.TreeViewItem";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewItemInvokedEventArgs[] = L"Windows.UI.Xaml.Controls.TreeViewItemInvokedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewItemTemplateSettings[] = L"Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewList[] = L"Windows.UI.Xaml.Controls.TreeViewList";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TreeViewNode[] = L"Windows.UI.Xaml.Controls.TreeViewNode";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TwoPaneView[] = L"Windows.UI.Xaml.Controls.TwoPaneView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_UIElementCollection[] = L"Windows.UI.Xaml.Controls.UIElementCollection";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_UserControl[] = L"Windows.UI.Xaml.Controls.UserControl";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_VariableSizedWrapGrid[] = L"Windows.UI.Xaml.Controls.VariableSizedWrapGrid";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Viewbox[] = L"Windows.UI.Xaml.Controls.Viewbox";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_VirtualizingPanel[] = L"Windows.UI.Xaml.Controls.VirtualizingPanel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_VirtualizingStackPanel[] = L"Windows.UI.Xaml.Controls.VirtualizingStackPanel";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebView[] = L"Windows.UI.Xaml.Controls.WebView";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewBrush[] = L"Windows.UI.Xaml.Controls.WebViewBrush";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewDeferredPermissionRequest[] = L"Windows.UI.Xaml.Controls.WebViewDeferredPermissionRequest";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewLongRunningScriptDetectedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewNavigationFailedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewNewWindowRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewNewWindowRequestedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewPermissionRequest[] = L"Windows.UI.Xaml.Controls.WebViewPermissionRequest";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewPermissionRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewPermissionRequestedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewSeparateProcessLostEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewSeparateProcessLostEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewSettings[] = L"Windows.UI.Xaml.Controls.WebViewSettings";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewUnsupportedUriSchemeIdentifiedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewUnsupportedUriSchemeIdentifiedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewUnviewableContentIdentifiedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewWebResourceRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewWebResourceRequestedEventArgs";
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WrapGrid[] = L"Windows.UI.Xaml.Controls.WrapGrid";
       
       
#pragma clang diagnostic pop
