typedef struct _DVINFO {
    DWORD dwDVAAuxSrc;
    DWORD dwDVAAuxCtl;
    DWORD dwDVAAuxSrc1;
    DWORD dwDVAAuxCtl1;
    DWORD dwDVVAuxSrc;
    DWORD dwDVVAuxCtl;
    DWORD dwDVReserved[2];
} DVINFO, *PDVINFO;
    0x73766169L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("73766169-0000-0010-8000-00aa00389b71", KSDATAFORMAT_TYPE_INTERLEAVED);
    0x64737664L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("64737664-0000-0010-8000-00aa00389b71", KSDATAFORMAT_SUBTYPE_DVSD);
    0x6C737664L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("6C737664-0000-0010-8000-00aa00389b71", KSDATAFORMAT_SUBTYPE_DVSL);
    0x64687664L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("64687664-0000-0010-8000-00aa00389b71", KSDATAFORMAT_SUBTYPE_DVHD);
    0x35327664L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("35327664-0000-0010-8000-00aa00389b71", KSDATAFORMAT_SUBTYPE_dv25);
    0x30357664L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("30357664-0000-0010-8000-00aa00389b71", KSDATAFORMAT_SUBTYPE_dv50);
    0x31687664L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("31687664-0000-0010-8000-00aa00389b71", KSDATAFORMAT_SUBTYPE_dvh1);
    0x05589f84L, 0xc356, 0x11ce, 0xbf, 0x01, 0x00, 0xaa, 0x00, 0x55, 0x59, 0x5a
DEFINE_GUIDSTRUCT("05589f84-c356-11ce-bf01-00aa0055595a", KSDATAFORMAT_SPECIFIER_DVINFO);
    0xddcff71aL, 0xfc9f, 0x4bd9, 0xb9, 0xb, 0x19, 0x7b, 0xd, 0x44, 0xad, 0x94
DEFINE_GUIDSTRUCT("ddcff71a-fc9f-4bd9-b90b-197b0d44ad94", KSDATAFORMAT_SPECIFIER_DV_AVC);
    0xf09dc377L, 0x6e51, 0x4ec5, 0xa0, 0xc4, 0xcd, 0x7f, 0x39, 0x62, 0x98, 0x80
DEFINE_GUIDSTRUCT("f09dc377-6e51-4ec5-a0c4-cd7f39629880", KSDATAFORMAT_SPECIFIER_AVC);
    0x138aa9a4L, 0x1ee2, 0x4c5b, 0x98, 0x8e, 0x19, 0xab, 0xfd, 0xbc, 0x8a, 0x11
DEFINE_GUIDSTRUCT("138aa9a4-1ee2-4c5b-988e-19abfdbc8a11", KSDATAFORMAT_TYPE_MPEG2_TRANSPORT_STRIDE);
    0x97e218b1L, 0x1e5a, 0x498e, 0xa9, 0x54, 0xf9, 0x62, 0xcf, 0xd9, 0x8c, 0xde
DEFINE_GUIDSTRUCT("97e218b1-1e5a-498e-a954-f962cfd98cde", KSDATAFORMAT_SPECIFIER_61883_4);
typedef struct tagKS_DATARANGE_DVVIDEO {
   KSDATARANGE DataRange;
   DVINFO DVVideoInfo;
} KS_DATARANGE_DVVIDEO, *PKS_DATARANGE_DVVIDEO;
typedef struct tagKS_DATARANGE_DV_AVC {
    KSDATARANGE DataRange;
    DVINFO DVVideoInfo;
    AVCPRECONNECTINFO ConnectInfo;
} KS_DATARANGE_DV_AVC, *PKS_DATARANGE_DV_AVC;
typedef struct tagKS_DATAFORMAT_DV_AVC {
    KSDATAFORMAT DataFormat;
    DVINFO DVVideoInfo;
    AVCCONNECTINFO ConnectInfo;
} KS_DATAFORMAT_DV_AVC, *PKS_DATAFORMAT_DV_AVC;
typedef struct tagKS_DATARANGE_MPEG2TS_AVC {
    KSDATARANGE DataRange;
    AVCPRECONNECTINFO ConnectInfo;
} KS_DATARANGE_MPEG2TS_AVC, *PKS_DATARANGE_MPEG2TS_AVC;
typedef struct tagKS_DATAFORMAT_MPEG2TS_AVC {
    KSDATAFORMAT DataFormat;
    AVCCONNECTINFO ConnectInfo;
} KS_DATAFORMAT_MPEG2TS_AVC, *PKS_DATAFORMAT_MPEG2TS_AVC;
typedef struct _CIP_HDR1 {
    ULONG DBC: 8;
    ULONG Rsv00: 2;
    ULONG SPH: 1;
    ULONG QPC: 3;
    ULONG FN: 2;
    ULONG DBS: 8;
    ULONG SID: 6;
    ULONG Bit00: 2;
} CIP_HDR1, *PCIP_HDR1;
typedef struct _CIP_HDR2_SYT {
    ULONG SYT: 16;
    ULONG RSV: 2;
    ULONG STYPE: 5;
    ULONG F5060_OR_TSF: 1;
    ULONG FMT: 6;
    ULONG Bit10: 2;
} CIP_HDR2_SYT, *PCIP_HDR2_SYT;
typedef struct _CIP_HDR2_FDF {
    ULONG FDF: 24;
    ULONG FMT: 6;
    ULONG Bit10: 2;
} CIP_HDR2_FDF, *PCIP_HDR2_FDF;
typedef struct _CIP_HDR2_MPEGTS {
    ULONG TSF: 1;
    ULONG RSV23bit: 23;
    ULONG FMT: 6;
    ULONG Bit10: 2;
} CIP_HDR2_MPEGTS, *PCIP_HDR2_MPEGTS;
typedef enum _AVCSTRM_FORMAT {
    AVCSTRM_FORMAT_SDDV_NTSC = 0,
    AVCSTRM_FORMAT_SDDV_PAL,
    AVCSTRM_FORMAT_MPEG2TS,
    AVCSTRM_FORMAT_HDDV_NTSC,
    AVCSTRM_FORMAT_HDDV_PAL,
    AVCSTRM_FORMAT_SDLDV_NTSC,
    AVCSTRM_FORMAT_SDLDV_PAL,
} AVCSTRM_FORMAT;
typedef struct _AVCSTRM_FORMAT_INFO {
    ULONG SizeOfThisBlock;
    AVCSTRM_FORMAT AVCStrmFormat;
    CIP_HDR1 cipHdr1;
    CIP_HDR2_SYT cipHdr2;
    ULONG SrcPacketsPerFrame;
    ULONG FrameSize;
    ULONG NumOfRcvBuffers;
    ULONG NumOfXmtBuffers;
    DWORD OptionFlags;
    ULONG AvgTimePerFrame;
    ULONG BlockPeriod;
    ULONG Reserved[4];
} AVCSTRM_FORMAT_INFO, * PAVCSTRM_FORMAT_INFO;
                                                FILE_DEVICE_UNKNOWN, \
                                                0x93, \
                                                METHOD_IN_DIRECT, \
                                                FILE_ANY_ACCESS \
                                                )
        (AVCStrm)->SizeOfThisBlock = sizeof(AVC_STREAM_REQUEST_BLOCK); \
        (AVCStrm)->Function = Request; \
        (AVCStrm)->Version = CURRENT_AVCSTRM_DDI_VERSION;
typedef enum _AVCSTRM_FUNCTION {
    AVCSTRM_READ = 0,
    AVCSTRM_WRITE,
    AVCSTRM_ABORT_STREAMING,
    AVCSTRM_OPEN = 0x100,
    AVCSTRM_CLOSE,
    AVCSTRM_GET_STATE,
    AVCSTRM_SET_STATE,
    AVCSTRM_GET_PROPERTY,
    AVCSTRM_SET_PROPERTY,
} AVCSTRM_FUNCTION;
typedef struct _AVCSTRM_OPEN_STRUCT {
    KSPIN_DATAFLOW DataFlow;
    PAVCSTRM_FORMAT_INFO AVCFormatInfo;
    PVOID AVCStreamContext;
    HANDLE hPlugLocal;
} AVCSTRM_OPEN_STRUCT, * PAVCSTRM_OPEN_STRUCT;
typedef struct _AVCSTRM_BUFFER_STRUCT {
    BOOL ClockProvider;
    HANDLE ClockHandle;
    PKSSTREAM_HEADER StreamHeader;
    PVOID FrameBuffer;
    PVOID Context;
} AVCSTRM_BUFFER_STRUCT, * PAVCSTRM_BUFFER_STRUCT;
typedef struct _AVC_STREAM_REQUEST_BLOCK {
    ULONG SizeOfThisBlock;
    ULONG Version;
    AVCSTRM_FUNCTION Function;
    ULONG Flags;
    NTSTATUS Status;
    PVOID AVCStreamContext;
    PVOID Context1;
    PVOID Context2;
    PVOID Context3;
    PVOID Context4;
    ULONG Reserved[4];
    union _tagCommandData {
        KSSTATE StreamState;
        AVCSTRM_OPEN_STRUCT OpenStruct;
        AVCSTRM_BUFFER_STRUCT BufferStruct;
    } CommandData;
} AVC_STREAM_REQUEST_BLOCK, *PAVC_STREAM_REQUEST_BLOCK;
