--- ntdef_dd20d41a.h	2019-07-25 18:00:41.497605700 +0900
+++ ntdef_dd20d41a_patched.h	2019-07-25 18:15:12.220206000 +0900
@@ -349,41 +349,11 @@
 } OBJECT_ATTRIBUTES;
 typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;
 typedef CONST OBJECT_ATTRIBUTES *PCOBJECT_ATTRIBUTES;
-    (p)->Length = sizeof( OBJECT_ATTRIBUTES ); \
-    (p)->RootDirectory = r; \
-    (p)->Attributes = a; \
-    (p)->ObjectName = n; \
-    (p)->SecurityDescriptor = s; \
-    (p)->SecurityQualityOfService = NULL; \
-    }
-    { sizeof(OBJECT_ATTRIBUTES), NULL, RTL_CONST_CAST(PUNICODE_STRING)(n), a, NULL, NULL }
 #include <guiddef.h>
 typedef struct _OBJECTID {
     GUID Lineage;
     ULONG Uniquifier;
 } OBJECTID;
-    (CHAR *)((ULONG_PTR)(ArgumentPointer)) != (CHAR *)(NULL) )
-    (FIELD_OFFSET(type, field) + RTL_FIELD_SIZE(type, field))
-    ( (((PCHAR)(&(Struct)->Field)) + sizeof((Struct)->Field)) <= (((PCHAR)(Struct))+(Size)) )
-    ((FIELD_OFFSET(T, F2) > FIELD_OFFSET(T, F1)) \
-        ? (FIELD_OFFSET(T, F2) - FIELD_OFFSET(T, F1) - RTL_FIELD_SIZE(T, F1)) \
-        : (FIELD_OFFSET(T, F1) - FIELD_OFFSET(T, F2) - RTL_FIELD_SIZE(T, F2)))
-extern "C++"
-{
-char _RTL_CONSTANT_STRING_type_check(const char *s);
-char _RTL_CONSTANT_STRING_type_check(const WCHAR *s);
-template <size_t N> class _RTL_CONSTANT_STRING_remove_const_template_class;
-template <> class _RTL_CONSTANT_STRING_remove_const_template_class<sizeof(char)> {public: typedef char T; };
-template <> class _RTL_CONSTANT_STRING_remove_const_template_class<sizeof(WCHAR)> {public: typedef WCHAR T; };
-    (const_cast<_RTL_CONSTANT_STRING_remove_const_template_class<sizeof((s)[0])>::T*>(s))
-}
-{ \
-    sizeof( s ) - sizeof( (s)[0] ), \
-    sizeof( s ) / sizeof(_RTL_CONSTANT_STRING_type_check(s)), \
-    _RTL_CONSTANT_STRING_remove_const_macro(s) \
-}
-                                                  (PCHAR)(address) - \
-                                                  (ULONG_PTR)(&((type *)0)->field)))
 #include <excpt.h>
 typedef
 _IRQL_requires_same_
