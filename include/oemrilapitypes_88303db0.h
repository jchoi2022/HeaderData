typedef enum RILDEVSSPECIFICCLASSES {
    RIL_DSCLASS_OEM_GBA = 0xFFFF0000
} RILDEVSSPECIFICCLASSES;
typedef enum RIL_DEVSPECIFIC_CMD
{
    RIL_DEVSPECIFIC_CMD_OEM_GBA_UNKNOWN = ( 0x00000000 | RIL_DSCLASS_OEM_GBA ),
    RIL_DEVSPECIFIC_CMD_OEM_GBA_GET_GBA_CAPABLE = ( 0x00000001 | RIL_DSCLASS_OEM_GBA ),
    RIL_DEVSPECIFIC_CMD_OEM_GBA_GET_GBA_TOKEN = ( 0x00000002 | RIL_DSCLASS_OEM_GBA ),
    RIL_DEVSPECIFIC_CMD_OEM_GBA_GET_GBA_TOKEN_FORCE = ( 0x00000003 | RIL_DSCLASS_OEM_GBA ),
    RIL_DEVSPECIFIC_CMD_OEM_MAX = RIL_DEVSPECIFIC_CMD_OEM_GBA_GET_GBA_TOKEN_FORCE
} RIL_DEVSPECIFIC_CMD;
typedef enum RILGETTOKENPARAMMASK {
    RIL_PARAM_GETTOKEN_TIMEOUT = 0x00000001,
    RIL_PARAM_GETTOKEN_HEADER = 0x00000002,
    RIL_PARAM_GETTOKEN_PROTOCOL_ID = 0x00000004,
    RIL_PARAM_GETTOKEN_ALL = 0x00000007
} RILDEVSPECIFICPARAMMASK;
typedef enum RILGBACAPABLE {
    RIL_GBA_UNKNOWN = 0x00000000,
    RIL_GBA_NOT_SUPPORTED = 0x00000001,
    RIL_GBA_ME_SUPPORTED = 0x00000002,
    RIL_GBA_U_SUPPORTED = 0x00000003
} RILGBACAPABLE;
#pragma warning(push)
#pragma warning(disable : 4200)
typedef struct RILDEVSPECIFICREQUEST
{
    DWORD dwCmdId;
    DWORD dwSize;
    BYTE params[];
} RILDEVSPECIFICREQUEST, *LPRILDEVSPECIFICREQUEST;
static const int GBA_PROTOCOL_ID_SIZE = 5;
typedef struct RILDEVSPECIFICGETTOKEN {
    DWORD cbSize;
    DWORD dwParams;
    DWORD dwTimeout;
    BYTE bProtocolId[GBA_PROTOCOL_ID_SIZE];
    DWORD cbHeaderSize;
    BYTE bHeader[];
} RILDEVSPECIFICGETTOKEN, *LPRILDEVSPECIFICGETTOKEN;
typedef struct RILGBATOKEN {
    DWORD cbSize;
    DWORD cbBTIDSize;
    DWORD dwBTIDOffset;
    DWORD cbNAFKeyLifetimeSize;
    DWORD dwNAFKeyLifetimeOffset;
    DWORD cbNAFKeySize;
    DWORD dwNAFKeyOffset;
 BYTE bData[];
} RILGBATOKEN, *LPRILGBATOKEN;
#pragma warning(pop)
