#include <winapifamily.h>
#pragma region Desktop Family
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
DEFINE_GUID(GUID_DxApi, 0x8a79bef0, 0xb915, 0x11d0, 0x91, 0x44, 0x08, 0x00, 0x36, 0xd2, 0xef, 0x02);
    typedef struct _MDL {
        struct _MDL *MdlNext;
        short MdlSize;
        short MdlFlags;
        struct _EPROCESS *Process;
        ULONG *lpMappedSystemVa;
        ULONG *lpStartVa;
        ULONG ByteCount;
        ULONG ByteOffset;
    } MDL;
    typedef MDL *PMDL;
    #define MDL_MAPPED_TO_SYSTEM_VA 0x0001
    #define MDL_PAGES_LOCKED 0x0002
    #define MDL_SOURCE_IS_NONPAGED_POOL 0x0004
    #define MDL_ALLOCATED_FIXED_SIZE 0x0008
    #define MDL_PARTIAL 0x0010
    #define MDL_PARTIAL_HAS_BEEN_MAPPED 0x0020
    #define MDL_IO_PAGE_READ 0x0040
    #define MDL_WRITE_OPERATION 0x0080
    #define MDL_PARENT_MAPPED_SYSTEM_VA 0x0100
    #define MDL_LOCK_HELD 0x0200
    #define MDL_SCATTER_GATHER_VA 0x0400
    #define MDL_IO_SPACE 0x0800
    #define MDL_NETWORK_HEADER 0x1000
    #define MDL_MAPPING_CAN_FAIL 0x2000
    #define MDL_ALLOCATED_MUST_SUCCEED 0x4000
    #define MDL_64_BIT_VA 0x8000
    #define MDL_MAPPING_FLAGS (MDL_MAPPED_TO_SYSTEM_VA | \
                           MDL_PAGES_LOCKED | \
                           MDL_SOURCE_IS_NONPAGED_POOL | \
                           MDL_PARTIAL_HAS_BEEN_MAPPED | \
                           MDL_PARENT_MAPPED_SYSTEM_VA | \
                           MDL_LOCK_HELD | \
                           MDL_SYSTEM_VA | \
                           MDL_IO_SPACE )
typedef struct _DDSURFACEDATA {
    DWORD ddsCaps;
    DWORD dwSurfaceOffset;
    ULONG_PTR fpLockPtr;
    DWORD dwWidth;
    DWORD dwHeight;
    LONG lPitch;
    DWORD dwOverlayFlags;
    DWORD dwOverlayOffset;
    DWORD dwOverlaySrcWidth;
    DWORD dwOverlaySrcHeight;
    DWORD dwOverlayDestWidth;
    DWORD dwOverlayDestHeight;
    DWORD dwVideoPortId;
    DWORD dwFormatFlags;
    DWORD dwFormatFourCC;
    DWORD dwFormatBitCount;
    DWORD dwRBitMask;
    DWORD dwGBitMask;
    DWORD dwBBitMask;
    ULONG dwDriverReserved1;
    ULONG dwDriverReserved2;
    ULONG dwDriverReserved3;
    ULONG dwDriverReserved4;
} DDSURFACEDATA, *LPDDSURFACEDATA;
typedef struct DDVIDEOPORTDATA {
    DWORD dwVideoPortId;
    DWORD dwVPFlags;
    DWORD dwOriginOffset;
    DWORD dwHeight;
    DWORD dwVBIHeight;
    ULONG dwDriverReserved1;
    ULONG dwDriverReserved2;
    ULONG dwDriverReserved3;
} DDVIDEOPORTDATA, *LPDDVIDEOPORTDATA;
typedef struct _DX_IRQDATA {
    DWORD dwIrqFlags;
} DX_IRQDATA, *PDX_IRQDATA;
typedef VOID (*PDX_IRQCALLBACK)(PDX_IRQDATA pIrqData);
typedef struct _DDGETIRQINFO {
    DWORD dwFlags;
} DDGETIRQINFO, *PDDGETIRQINFO;
typedef struct _DDENABLEIRQINFO {
    DWORD dwIRQSources;
    DWORD dwLine;
    PDX_IRQCALLBACK IRQCallback;
    PDX_IRQDATA lpIRQData;
} DDENABLEIRQINFO, *PDDENABLEIRQINFO;
typedef struct _DDSKIPNEXTFIELDINFO {
    LPDDVIDEOPORTDATA lpVideoPortData;
    DWORD dwSkipFlags;
} DDSKIPNEXTFIELDINFO, *PDDSKIPNEXTFIELDINFO;
typedef struct _DDBOBNEXTFIELDINFO {
    LPDDSURFACEDATA lpSurface;
} DDBOBNEXTFIELDINFO, *PDDBOBNEXTFIELDINFO;
typedef struct _DDSETSTATEININFO {
    LPDDSURFACEDATA lpSurfaceData;
    LPDDVIDEOPORTDATA lpVideoPortData;
} DDSETSTATEININFO, *PDDSETSTATEININFO;
typedef struct _DDSETSTATEOUTINFO {
    BOOL bSoftwareAutoflip;
    DWORD dwSurfaceIndex;
    DWORD dwVBISurfaceIndex;
} DDSETSTATEOUTINFO, *PDDSETSTATEOUTINFO;
typedef struct _DDLOCKININFO {
    LPDDSURFACEDATA lpSurfaceData;
} DDLOCKININFO, *PDDLOCKININFO;
typedef struct _DDLOCKOUTINFO {
    ULONG_PTR dwSurfacePtr;
} DDLOCKOUTINFO, *PDDLOCKOUTINFO;
typedef struct _DDFLIPOVERLAYINFO {
    LPDDSURFACEDATA lpCurrentSurface;
    LPDDSURFACEDATA lpTargetSurface;
    DWORD dwFlags;
} DDFLIPOVERLAYINFO, *PDDFLIPOVERLAYINFO;
typedef struct _DDFLIPVIDEOPORTINFO {
    LPDDVIDEOPORTDATA lpVideoPortData;
    LPDDSURFACEDATA lpCurrentSurface;
    LPDDSURFACEDATA lpTargetSurface;
    DWORD dwFlipVPFlags;
} DDFLIPVIDEOPORTINFO, *PDDFLIPVIDEOPORTINFO;
typedef struct _DDGETPOLARITYININFO {
    LPDDVIDEOPORTDATA lpVideoPortData;
} DDGETPOLARITYININFO, *PDDGETPOLARITYININFO;
typedef struct _DDGETPOLARITYOUTINFO {
    DWORD bPolarity;
} DDGETPOLARITYOUTINFO, *PDDGETPOLARITYOUTINFO;
typedef struct _DDGETCURRENTAUTOFLIPININFO {
    LPDDVIDEOPORTDATA lpVideoPortData;
} DDGETCURRENTAUTOFLIPININFO, *PDDGETCURRENTAUTOFLIPININFO;
typedef struct _DDGETCURRENTAUTOFLIPOUTINFO {
    DWORD dwSurfaceIndex;
    DWORD dwVBISurfaceIndex;
} DDGETCURRENTAUTOFLIPOUTINFO, *PDDGETCURRENTAUTOFLIPOUTINFO;
typedef struct _DDGETPREVIOUSAUTOFLIPININFO {
    LPDDVIDEOPORTDATA lpVideoPortData;
} DDGETPREVIOUSAUTOFLIPININFO, *PDDGETPREVIOUSAUTOFLIPININFO;
typedef struct _DDGETPREVIOUSAUTOFLIPOUTINFO {
    DWORD dwSurfaceIndex;
    DWORD dwVBISurfaceIndex;
} DDGETPREVIOUSAUTOFLIPOUTINFO, *PDDGETPREVIOUSAUTOFLIPOUTINFO;
typedef struct _DDTRANSFERININFO {
    LPDDSURFACEDATA lpSurfaceData;
    DWORD dwStartLine;
    DWORD dwEndLine;
    ULONG_PTR dwTransferID;
    DWORD dwTransferFlags;
    PMDL lpDestMDL;
} DDTRANSFERININFO, *PDDTRANSFERININFO;
typedef struct _DDTRANSFEROUTINFO {
    DWORD dwBufferPolarity;
} DDTRANSFEROUTINFO, *PDDTRANSFEROUTINFO;
typedef struct _DDGETTRANSFERSTATUSOUTINFO {
    DWORD_PTR dwTransferID;
} DDGETTRANSFERSTATUSOUTINFO, *PDDGETTRANSFEROUTINFO;
typedef DWORD (*PDX_GETIRQINFO)(PVOID,PVOID,PDDGETIRQINFO);
typedef DWORD (*PDX_ENABLEIRQ)(PVOID,PDDENABLEIRQINFO,PVOID);
typedef DWORD (*PDX_SKIPNEXTFIELD)(PVOID,PDDSKIPNEXTFIELDINFO,PVOID);
typedef DWORD (*PDX_BOBNEXTFIELD)(PVOID,PDDBOBNEXTFIELDINFO,PVOID);
typedef DWORD (*PDX_SETSTATE)(PVOID,PDDSETSTATEININFO,PDDSETSTATEOUTINFO);
typedef DWORD (*PDX_LOCK)(PVOID,PDDLOCKININFO,PDDLOCKOUTINFO);
typedef DWORD (*PDX_FLIPOVERLAY)(PVOID,PDDFLIPOVERLAYINFO,PVOID);
typedef DWORD (*PDX_FLIPVIDEOPORT)(PVOID,PDDFLIPVIDEOPORTINFO,PVOID);
typedef DWORD (*PDX_GETPOLARITY)(PVOID,PDDGETPOLARITYININFO,PDDGETPOLARITYOUTINFO);
typedef DWORD (*PDX_GETCURRENTAUTOFLIP)(PVOID,PDDGETCURRENTAUTOFLIPININFO,PDDGETCURRENTAUTOFLIPOUTINFO);
typedef DWORD (*PDX_GETPREVIOUSAUTOFLIP)(PVOID,PDDGETPREVIOUSAUTOFLIPININFO,PDDGETPREVIOUSAUTOFLIPOUTINFO);
typedef DWORD (*PDX_TRANSFER)(PVOID,PDDTRANSFERININFO,PDDTRANSFEROUTINFO);
typedef DWORD (*PDX_GETTRANSFERSTATUS)(PVOID,PVOID,PDDGETTRANSFEROUTINFO);
typedef struct _DXAPI_INTERFACE {
    USHORT Size;
    USHORT Version;
    PVOID Context;
    PVOID InterfaceReference;
    PVOID InterfaceDereference;
    PDX_GETIRQINFO DxGetIrqInfo;
    PDX_ENABLEIRQ DxEnableIrq;
    PDX_SKIPNEXTFIELD DxSkipNextField;
    PDX_BOBNEXTFIELD DxBobNextField;
    PDX_SETSTATE DxSetState;
    PDX_LOCK DxLock;
    PDX_FLIPOVERLAY DxFlipOverlay;
    PDX_FLIPVIDEOPORT DxFlipVideoPort;
    PDX_GETPOLARITY DxGetPolarity;
    PDX_GETCURRENTAUTOFLIP DxGetCurrentAutoflip;
    PDX_GETPREVIOUSAUTOFLIP DxGetPreviousAutoflip;
    PDX_TRANSFER DxTransfer;
    PDX_GETTRANSFERSTATUS DxGetTransferStatus;
} DXAPI_INTERFACE, *PDXAPI_INTERFACE;
#endif
#pragma endregion
