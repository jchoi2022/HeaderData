   #pragma once
#pragma warning(push)
#pragma warning(disable: 4201)
DECLARE_HANDLE(VMBCHANNEL);
DECLARE_HANDLE(VMBPACKET);
DECLARE_HANDLE(VMBPACKETCOMPLETION);
    VMBUS_CHANNEL_FORMAT_FLAG_WAIT_FOR_COMPLETION | \
    VMBUS_CHANNEL_FORMAT_FLAG_FORCE_MDL_LENGTH | \
    VMBUS_CHANNEL_FORMAT_FLAG_PAGED_BUFFER | \
    VMBUS_CHANNEL_FORMAT_FLAG_DATA_IN_ONLY | \
    VMBUS_CHANNEL_FORMAT_FLAG_DATA_OUT_ONLY)
    VMBUS_CHANNEL_GPADL_FLAG_READ_ONLY)
    VMBUS_CHANNEL_INIT_FLAG_IS_PIPE)
    VMBUS_SERVER_CHANNEL_INIT_FLAG_LOOPBACK_OFFER | \
    VMBUS_SERVER_CHANNEL_INIT_FLAG_ENUMERATE_DEVICE_INTERFACE | \
    VMBUS_SERVER_CHANNEL_INIT_FLAG_OFFER_AS_PIPE | \
    VMBUS_SERVER_CHANNEL_INIT_FLAG_FORCE_NEW_CHANNEL | \
    VMBUS_SERVER_CHANNEL_INIT_FLAG_TLNPI_PROVIDER_OFFER)
    VMBUS_CHANNEL_PROCESS_PACKET_FLAG_EXTERNAL_DATA)
    VMBUS_CHANNEL_PACKET_EXTERNAL_DATA_FLAG_READ_ONLY)
typedef
_Function_class_(EVT_VMB_CHANNEL_OPENED)
_IRQL_requires_(PASSIVE_LEVEL)
NTSTATUS
EVT_VMB_CHANNEL_OPENED(
    _In_ VMBCHANNEL Channel
    );
typedef EVT_VMB_CHANNEL_OPENED *PFN_VMB_CHANNEL_OPENED;
typedef
_Function_class_(EVT_VMB_CHANNEL_CLOSED)
_IRQL_requires_(PASSIVE_LEVEL)
VOID
EVT_VMB_CHANNEL_CLOSED(
    _In_ VMBCHANNEL Channel
    );
typedef EVT_VMB_CHANNEL_CLOSED *PFN_VMB_CHANNEL_CLOSED;
typedef
_Function_class_(EVT_VMB_CHANNEL_SAVE_PACKET)
_IRQL_requires_(PASSIVE_LEVEL)
NTSTATUS
EVT_VMB_CHANNEL_SAVE_PACKET(
    _In_ VMBCHANNEL Channel,
    _In_ VMBPACKET Packet,
    _Out_writes_bytes_(SaveBufSize) PVOID SaveBuf,
    _In_ UINT32 SaveBufSize,
    _Out_ PUINT32 BytesNeeded
    );
typedef EVT_VMB_CHANNEL_SAVE_PACKET *PFN_VMB_CHANNEL_SAVE_PACKET;
typedef
_Function_class_(EVT_VMB_CHANNEL_RESTORE_PACKET)
_IRQL_requires_(PASSIVE_LEVEL)
NTSTATUS
EVT_VMB_CHANNEL_RESTORE_PACKET(
    _In_ VMBCHANNEL Channel,
    _In_reads_bytes_(LibBufSize) PVOID LibBuf,
    _In_ UINT32 LibBufSize,
    _In_reads_bytes_(SaveBufSize) PVOID SaveBuf,
    _In_ UINT32 SaveBufSize
    );
typedef EVT_VMB_CHANNEL_RESTORE_PACKET *PFN_VMB_CHANNEL_RESTORE_PACKET;
typedef
_Function_class_(EVT_VMB_CHANNEL_SUSPEND)
_IRQL_requires_(PASSIVE_LEVEL)
VOID
EVT_VMB_CHANNEL_SUSPEND(
    _In_ VMBCHANNEL Channel
    );
typedef EVT_VMB_CHANNEL_SUSPEND *PFN_VMB_CHANNEL_SUSPEND;
typedef
_Function_class_(EVT_VMB_CHANNEL_STARTED)
_IRQL_requires_(PASSIVE_LEVEL)
VOID
EVT_VMB_CHANNEL_STARTED(
    _In_ VMBCHANNEL Channel
    );
typedef EVT_VMB_CHANNEL_STARTED *PFN_VMB_CHANNEL_STARTED;
typedef
_Function_class_(EVT_VMB_CHANNEL_POST_STARTED)
_IRQL_requires_(PASSIVE_LEVEL)
VOID
EVT_VMB_CHANNEL_POST_STARTED(
    _In_ VMBCHANNEL Channel
    );
typedef EVT_VMB_CHANNEL_POST_STARTED *PFN_VMB_CHANNEL_POST_STARTED;
typedef
_Function_class_(EVT_VMB_CHANNEL_PROCESS_PACKET)
_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
EVT_VMB_CHANNEL_PROCESS_PACKET(
    _In_ VMBCHANNEL Channel,
    _In_ VMBPACKETCOMPLETION Packet,
    _In_reads_bytes_(BufferLength) PVOID Buffer,
    _In_ UINT32 BufferLength,
    _In_ UINT32 Flags
    );
typedef EVT_VMB_CHANNEL_PROCESS_PACKET *PFN_VMB_CHANNEL_PROCESS_PACKET;
typedef
_Function_class_(EVT_VMB_CHANNEL_PROCESSING_COMPLETE)
_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
EVT_VMB_CHANNEL_PROCESSING_COMPLETE(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 PacketsProcessed
    );
typedef EVT_VMB_CHANNEL_PROCESSING_COMPLETE *PFN_VMB_CHANNEL_PROCESSING_COMPLETE;
typedef struct _VMB_CHANNEL_STATE_CHANGE_CALLBACKS
{
    ULONG Version;
    ULONG Size;
    PFN_VMB_CHANNEL_OPENED EvtChannelOpened;
    PFN_VMB_CHANNEL_CLOSED EvtChannelClosed;
    PFN_VMB_CHANNEL_SUSPEND EvtChannelSuspend;
    PFN_VMB_CHANNEL_STARTED EvtChannelStarted;
    PFN_VMB_CHANNEL_POST_STARTED EvtChannelPostStarted;
} VMB_CHANNEL_STATE_CHANGE_CALLBACKS, *PVMB_CHANNEL_STATE_CHANGE_CALLBACKS;
FORCEINLINE
VOID
VMB_CHANNEL_STATE_CHANGE_CALLBACKS_INIT(
    _Out_ PVMB_CHANNEL_STATE_CHANGE_CALLBACKS Callbacks
    )
{
    RtlZeroMemory(Callbacks, sizeof(*Callbacks));
    Callbacks->Version = 1;
    Callbacks->Size = sizeof(*Callbacks);
}
typedef
_IRQL_requires_(PASSIVE_LEVEL)
NTSTATUS
FN_VMB_CHANNEL_ALLOCATE(
    _In_ PDEVICE_OBJECT ParentDeviceObject,
    _In_ BOOLEAN IsServer,
    _Out_ _At_(*Channel, __drv_allocatesMem(Mem)) VMBCHANNEL *Channel
    );
typedef FN_VMB_CHANNEL_ALLOCATE *PFN_VMB_CHANNEL_ALLOCATE;
FN_VMB_CHANNEL_ALLOCATE VmbChannelAllocate;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_COUNT(
    _In_ VMBCHANNEL Channel,
    _In_range_(>,0) UINT32 PacketCount
    );
typedef FN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_COUNT *PFN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_COUNT;
FN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_COUNT VmbChannelInitSetMaximumPacketCount;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_SIZE(
    _In_ VMBCHANNEL Channel,
    _In_range_(>,0) UINT32 PacketSize
    );
typedef FN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_SIZE *PFN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_SIZE;
FN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_SIZE VmbChannelInitSetMaximumPacketSize;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_MAXIMUM_EXTERNAL_DATA(
    _In_ VMBCHANNEL Channel,
    _In_range_(>,0) UINT32 DataSize,
    _In_range_(>,0) UINT32 ChainLength
    );
typedef FN_VMB_CHANNEL_INIT_SET_MAXIMUM_EXTERNAL_DATA *PFN_VMB_CHANNEL_INIT_SET_MAXIMUM_EXTERNAL_DATA;
FN_VMB_CHANNEL_INIT_SET_MAXIMUM_EXTERNAL_DATA VmbChannelInitSetMaximumExternalData;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_BOUNCE_BUFFER_SIZES(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 InitialBufferSize,
    _In_ UINT32 BufferSizeIncrement,
    _In_ UINT32 MaximumBufferSize
    );
typedef FN_VMB_CHANNEL_INIT_SET_BOUNCE_BUFFER_SIZES *PFN_VMB_CHANNEL_INIT_SET_BOUNCE_BUFFER_SIZES;
FN_VMB_CHANNEL_INIT_SET_BOUNCE_BUFFER_SIZES VmbChannelInitSetBounceBufferSizes;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_CLIENT_CONTEXT_SIZE(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 ContextSize
    );
typedef FN_VMB_CHANNEL_INIT_SET_CLIENT_CONTEXT_SIZE *PFN_VMB_CHANNEL_INIT_SET_CLIENT_CONTEXT_SIZE;
FN_VMB_CHANNEL_INIT_SET_CLIENT_CONTEXT_SIZE VmbChannelInitSetClientContextSize;
typedef
PVOID
FASTCALL
FN_VMB_CHANNEL_PACKET_GET_CLIENT_CONTEXT(
    _In_ VMBPACKETCOMPLETION PacketCompletionContext
    );
typedef FN_VMB_CHANNEL_PACKET_GET_CLIENT_CONTEXT *PFN_VMB_CHANNEL_PACKET_GET_CLIENT_CONTEXT;
FN_VMB_CHANNEL_PACKET_GET_CLIENT_CONTEXT VmbChannelPacketGetClientContext;
typedef
VOID
FN_VMB_CHANNEL_GET_TARGET_DEVICE_OBJECT(
    _In_ VMBCHANNEL Channel,
    _Out_ PDEVICE_OBJECT *TargetDeviceObject
    );
typedef FN_VMB_CHANNEL_GET_TARGET_DEVICE_OBJECT *PFN_VMB_CHANNEL_GET_TARGET_DEVICE_OBJECT;
FN_VMB_CHANNEL_GET_TARGET_DEVICE_OBJECT VmbChannelGetTargetDeviceObject;
typedef
VOID
FN_VMB_CHANNEL_GET_PARENT_DEVICE_OBJECT(
    _In_ VMBCHANNEL Channel,
    _Out_ PDEVICE_OBJECT *ParentDeviceObject
    );
typedef FN_VMB_CHANNEL_GET_PARENT_DEVICE_OBJECT *PFN_VMB_CHANNEL_GET_PARENT_DEVICE_OBJECT;
FN_VMB_CHANNEL_GET_PARENT_DEVICE_OBJECT VmbChannelGetParentDeviceObject;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_PROCESS_PACKET_CALLBACKS(
    _In_ VMBCHANNEL Channel,
    _In_ PFN_VMB_CHANNEL_PROCESS_PACKET ProcessPacketCallback,
    _In_opt_ PFN_VMB_CHANNEL_PROCESSING_COMPLETE ProcessingCompleteCallback
    );
typedef FN_VMB_CHANNEL_INIT_SET_PROCESS_PACKET_CALLBACKS *PFN_VMB_CHANNEL_INIT_SET_PROCESS_PACKET_CALLBACKS;
FN_VMB_CHANNEL_INIT_SET_PROCESS_PACKET_CALLBACKS VmbChannelInitSetProcessPacketCallbacks;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_STATE_CHANGE_CALLBACKS(
    _In_ VMBCHANNEL Channel,
    _In_ PVMB_CHANNEL_STATE_CHANGE_CALLBACKS StateChangeCallbacks
    );
typedef FN_VMB_CHANNEL_INIT_SET_STATE_CHANGE_CALLBACKS *PFN_VMB_CHANNEL_INIT_SET_STATE_CHANGE_CALLBACKS;
FN_VMB_CHANNEL_INIT_SET_STATE_CHANGE_CALLBACKS VmbChannelInitSetStateChangeCallbacks;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_FRIENDLY_NAME(
    _In_ VMBCHANNEL Channel,
    _In_ PCUNICODE_STRING Name
    );
typedef FN_VMB_CHANNEL_INIT_SET_FRIENDLY_NAME *PFN_VMB_CHANNEL_INIT_SET_FRIENDLY_NAME;
FN_VMB_CHANNEL_INIT_SET_FRIENDLY_NAME VmbChannelInitSetFriendlyName;
typedef
NTSTATUS
FN_VMB_CHANNEL_INIT_SET_FLAGS(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 Flags
    );
typedef FN_VMB_CHANNEL_INIT_SET_FLAGS *PFN_VMB_CHANNEL_INIT_SET_FLAGS;
FN_VMB_CHANNEL_INIT_SET_FLAGS VmbChannelInitSetFlags;
typedef
NTSTATUS
FN_VMB_SERVER_CHANNEL_INIT_SET_FLAGS(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 Flags
    );
typedef FN_VMB_SERVER_CHANNEL_INIT_SET_FLAGS *PFN_VMB_SERVER_CHANNEL_INIT_SET_FLAGS;
FN_VMB_SERVER_CHANNEL_INIT_SET_FLAGS VmbServerChannelInitSetFlags;
typedef
NTSTATUS
FN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_VTL(
    _In_ VMBCHANNEL Channel,
    _In_ UINT8 TargetVtl
    );
typedef FN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_VTL *PFN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_VTL;
FN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_VTL VmbServerChannelInitSetTargetVtl;
typedef
NTSTATUS
FN_VMB_SERVER_CHANNEL_INIT_SET_MMIO_MEGABYTES(
    _In_ VMBCHANNEL Channel,
    _In_range_(>,0) UINT16 MmioMegabytes,
    _In_ UINT16 MmioMegabytesOptional
    );
typedef FN_VMB_SERVER_CHANNEL_INIT_SET_MMIO_MEGABYTES *PFN_VMB_SERVER_CHANNEL_INIT_SET_MMIO_MEGABYTES;
FN_VMB_SERVER_CHANNEL_INIT_SET_MMIO_MEGABYTES VmbServerChannelInitSetMmioMegabytes;
typedef
NTSTATUS
FN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_INTERFACE_ID(
    _In_ VMBCHANNEL Channel,
    _In_ GUID InterfaceType,
    _In_ GUID InterfaceInstance
    );
typedef FN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_INTERFACE_ID *PFN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_INTERFACE_ID;
FN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_INTERFACE_ID VmbServerChannelInitSetTargetInterfaceId;
typedef
NTSTATUS
FN_VMB_SERVER_CHANNEL_INIT_SET_SAVE_RESTORE_PACKET_CALLBACKS(
    _In_ VMBCHANNEL Channel,
    _In_ PFN_VMB_CHANNEL_SAVE_PACKET SavePacketCallback,
    _In_ PFN_VMB_CHANNEL_RESTORE_PACKET RestorePacketCallback
    );
typedef FN_VMB_SERVER_CHANNEL_INIT_SET_SAVE_RESTORE_PACKET_CALLBACKS *PFN_VMB_SERVER_CHANNEL_INIT_SET_SAVE_RESTORE_PACKET_CALLBACKS;
FN_VMB_SERVER_CHANNEL_INIT_SET_SAVE_RESTORE_PACKET_CALLBACKS VmbServerChannelInitSetSaveRestorePacketCallbacks;
typedef
NTSTATUS
FN_VMB_SERVER_CHANNEL_INIT_SET_VMBUS_HANDLE(
    _In_ VMBCHANNEL Channel,
    _In_ HANDLE VmbusHandle
    );
typedef FN_VMB_SERVER_CHANNEL_INIT_SET_VMBUS_HANDLE *PFN_VMB_SERVER_CHANNEL_INIT_SET_VMBUS_HANDLE;
FN_VMB_SERVER_CHANNEL_INIT_SET_VMBUS_HANDLE VmbServerChannelInitSetVmbusHandle;
typedef
NTSTATUS
FN_VMB_CONVERT_VMBUS_HANDLE_TO_KERNEL_HANDLE(
    _In_ HANDLE VmbusHandle,
    _Out_ PHANDLE KernelHandle
    );
typedef FN_VMB_CONVERT_VMBUS_HANDLE_TO_KERNEL_HANDLE *PFN_VMB_CONVERT_VMBUS_HANDLE_TO_KERNEL_HANDLE;
FN_VMB_CONVERT_VMBUS_HANDLE_TO_KERNEL_HANDLE VmbConvertVmbusHandleToKernelHandle;
typedef
NTSTATUS
FN_VMB_CLIENT_CHANNEL_INIT_SET_RING_BUFFER_PAGE_COUNT(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 IncomingPageCount,
    _In_ UINT32 OutgoingPageCount
    );
typedef FN_VMB_CLIENT_CHANNEL_INIT_SET_RING_BUFFER_PAGE_COUNT *PFN_VMB_CLIENT_CHANNEL_INIT_SET_RING_BUFFER_PAGE_COUNT;
FN_VMB_CLIENT_CHANNEL_INIT_SET_RING_BUFFER_PAGE_COUNT VmbClientChannelInitSetRingBufferPageCount;
typedef
VOID
FN_VMB_CHANNEL_CLEANUP(
    _In_ __drv_freesMem(Mem) VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_CLEANUP *PFN_VMB_CHANNEL_CLEANUP;
FN_VMB_CHANNEL_CLEANUP VmbChannelCleanup;
typedef
VOID
FASTCALL
FN_VMB_CHANNEL_SET_POINTER(
    _In_ VMBCHANNEL Channel,
    _In_opt_ __drv_aliasesMem PVOID Pointer
    );
typedef FN_VMB_CHANNEL_SET_POINTER *PFN_VMB_CHANNEL_SET_POINTER;
FN_VMB_CHANNEL_SET_POINTER VmbChannelSetPointer;
typedef
PVOID
FASTCALL
FN_VMB_CHANNEL_GET_POINTER(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_GET_POINTER *PFN_VMB_CHANNEL_GET_POINTER;
FN_VMB_CHANNEL_GET_POINTER VmbChannelGetPointer;
typedef
_Must_inspect_result_
NTSTATUS
FN_VMB_CHANNEL_ENABLE(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_ENABLE *PFN_VMB_CHANNEL_ENABLE;
FN_VMB_CHANNEL_ENABLE VmbChannelEnable;
typedef
_Must_inspect_result_
NTSTATUS
FN_VMB_CHANNEL_SET_INTERRUPT_LATENCY(
    _In_ VMBCHANNEL Channel,
    _In_ UINT16 Latency,
    _Out_ PUINT16 OriginalLatency
    );
typedef FN_VMB_CHANNEL_SET_INTERRUPT_LATENCY *PFN_VMB_CHANNEL_SET_INTERRUPT_LATENCY;
FN_VMB_CHANNEL_SET_INTERRUPT_LATENCY VmbChannelSetInterruptLatency;
typedef
VOID
FN_VMB_CHANNEL_DISABLE(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_DISABLE *PFN_VMB_CHANNEL_DISABLE;
FN_VMB_CHANNEL_DISABLE VmbChannelDisable;
typedef
VOID
FN_VMB_CHANNEL_START(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_START *PFN_VMB_CHANNEL_START;
FN_VMB_CHANNEL_START VmbChannelStart;
typedef
VOID
FN_VMB_CHANNEL_PAUSE(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_PAUSE *PFN_VMB_CHANNEL_PAUSE;
FN_VMB_CHANNEL_PAUSE VmbChannelPause;
typedef
_Must_inspect_result_
NTSTATUS
FN_VMB_CHANNEL_SAVE_BEGIN(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_SAVE_BEGIN *PFN_VMB_CHANNEL_SAVE_BEGIN;
FN_VMB_CHANNEL_SAVE_BEGIN VmbChannelSaveBegin;
typedef
_Must_inspect_result_
NTSTATUS
FN_VMB_CHANNEL_SAVE_CONTINUE(
    _In_ VMBCHANNEL Channel,
    _Out_writes_bytes_to_(SaveBufferSize, *BytesFilled)
            PVOID SaveBuffer,
    _In_ ULONG SaveBufferSize,
    _Out_ PULONG BytesFilled,
    _Out_ PULONG BytesRequired
    );
typedef FN_VMB_CHANNEL_SAVE_CONTINUE *PFN_VMB_CHANNEL_SAVE_CONTINUE;
FN_VMB_CHANNEL_SAVE_CONTINUE VmbChannelSaveContinue;
typedef
VOID
FN_VMB_CHANNEL_SAVE_END(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_SAVE_END *PFN_VMB_CHANNEL_SAVE_END;
FN_VMB_CHANNEL_SAVE_END VmbChannelSaveEnd;
typedef
_Must_inspect_result_
NTSTATUS
FN_VMB_CHANNEL_RESTORE_FROM_BUFFER(
    _In_ VMBCHANNEL Channel,
    _In_reads_bytes_(BufferSize) PVOID Buffer,
    _In_ ULONG BufferSize
    );
typedef FN_VMB_CHANNEL_RESTORE_FROM_BUFFER *PFN_VMB_CHANNEL_RESTORE_FROM_BUFFER;
FN_VMB_CHANNEL_RESTORE_FROM_BUFFER VmbChannelRestoreFromBuffer;
typedef
VOID
FN_VMB_CHANNEL_PACKET_COMPLETE(
    _In_ VMBPACKETCOMPLETION PacketCompletionContext,
    _In_reads_bytes_opt_(BufSize) PVOID PacketCompletionBuffer,
    _In_ UINT32 BufSize
    );
typedef FN_VMB_CHANNEL_PACKET_COMPLETE *PFN_VMB_CHANNEL_PACKET_COMPLETE;
FN_VMB_CHANNEL_PACKET_COMPLETE VmbChannelPacketComplete;
typedef
VOID
FASTCALL
FN_VMB_CHANNEL_PACKET_DEFER_TO_PASSIVE(
    _In_ VMBPACKETCOMPLETION PacketCompletionContext
    );
typedef FN_VMB_CHANNEL_PACKET_DEFER_TO_PASSIVE *PFN_VMB_CHANNEL_PACKET_DEFER_TO_PASSIVE;
FN_VMB_CHANNEL_PACKET_DEFER_TO_PASSIVE VmbChannelPacketDeferToPassive;
typedef
VOID
FASTCALL
FN_VMB_CHANNEL_PACKET_FAIL(
    _In_ VMBPACKETCOMPLETION PacketCompletionContext
    );
typedef FN_VMB_CHANNEL_PACKET_FAIL *PFN_VMB_CHANNEL_PACKET_FAIL;
FN_VMB_CHANNEL_PACKET_FAIL VmbChannelPacketFail;
typedef
_Success_(return == 0)
NTSTATUS
FN_VMB_CHANNEL_PACKET_GET_EXTERNAL_DATA(
    _In_ VMBPACKETCOMPLETION PacketCompletionContext,
    _In_ UINT32 Flags,
    _Out_ PMDL *Mdl
    );
typedef FN_VMB_CHANNEL_PACKET_GET_EXTERNAL_DATA *PFN_VMB_CHANNEL_PACKET_GET_EXTERNAL_DATA;
FN_VMB_CHANNEL_PACKET_GET_EXTERNAL_DATA VmbChannelPacketGetExternalData;
typedef
NTSTATUS
FN_VMB_CHANNEL_MAP_GPADL(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 Flags,
    _In_ UINT32 GpadlHandle,
    _Out_ PMDL *Mdl
    );
typedef FN_VMB_CHANNEL_MAP_GPADL *PFN_VMB_CHANNEL_MAP_GPADL;
FN_VMB_CHANNEL_MAP_GPADL VmbChannelMapGpadl;
typedef
VOID
FN_VMB_CHANNEL_UNMAP_GPADL(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 GpadlHandle
    );
typedef FN_VMB_CHANNEL_UNMAP_GPADL *PFN_VMB_CHANNEL_UNMAP_GPADL;
FN_VMB_CHANNEL_UNMAP_GPADL VmbChannelUnmapGpadl;
typedef
NTSTATUS
FN_VMB_CHANNEL_CREATE_GPADL_FROM_MDL(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 Flags,
    _In_ PMDL Mdl,
    _In_ UINT32 StartOffsetWithinMdl,
    _In_ UINT32 DataLengthWithinMdl,
    _Out_ PUINT32 GpadlHandle
    );
typedef FN_VMB_CHANNEL_CREATE_GPADL_FROM_MDL *PFN_VMB_CHANNEL_CREATE_GPADL_FROM_MDL;
FN_VMB_CHANNEL_CREATE_GPADL_FROM_MDL VmbChannelCreateGpadlFromMdl;
typedef
NTSTATUS
FN_VMB_CHANNEL_CREATE_GPADL_FROM_BUFFER(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 Flags,
    _In_reads_bytes_(ByteCount) PVOID Buffer,
    _In_ UINT32 ByteCount,
    _Out_ PUINT32 GpadlHandle
    );
typedef FN_VMB_CHANNEL_CREATE_GPADL_FROM_BUFFER *PFN_VMB_CHANNEL_CREATE_GPADL_FROM_BUFFER;
FN_VMB_CHANNEL_CREATE_GPADL_FROM_BUFFER VmbChannelCreateGpadlFromBuffer;
typedef
NTSTATUS
FN_VMB_CHANNEL_CREATE_GPADL_FROM_PFN_LIST(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 Flags,
    _In_ PPFN_NUMBER PfnList,
    _In_ UINT32 PfnListCount,
    _Out_ PUINT32 GpadlHandle
    );
typedef FN_VMB_CHANNEL_CREATE_GPADL_FROM_PFN_LIST *PFN_VMB_CHANNEL_CREATE_GPADL_FROM_PFN_LIST;
FN_VMB_CHANNEL_CREATE_GPADL_FROM_PFN_LIST VmbChannelCreateGpadlFromPfnList;
typedef
VOID
FN_VMB_CHANNEL_DELETE_GPADL(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 GpadlHandle
    );
typedef FN_VMB_CHANNEL_DELETE_GPADL *PFN_VMB_CHANNEL_DELETE_GPADL;
FN_VMB_CHANNEL_DELETE_GPADL VmbChannelDeleteGpadl;
typedef
__drv_allocatesMem(Mem)
VMBPACKET
FN_VMB_PACKET_ALLOCATE(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_PACKET_ALLOCATE *PFN_VMB_PACKET_ALLOCATE;
FN_VMB_PACKET_ALLOCATE VmbPacketAllocate;
typedef
VOID
FN_VMB_PACKET_FREE(
    _In_ __drv_freesMem(Mem) VMBPACKET VmbPacket
    );
typedef FN_VMB_PACKET_FREE *PFN_VMB_PACKET_FREE;
FN_VMB_PACKET_FREE VmbPacketFree;
typedef
VOID
FASTCALL
FN_VMB_PACKET_SET_POINTER(
    _In_ VMBPACKET PacketObject,
    _In_opt_ PVOID Pointer
    );
typedef FN_VMB_PACKET_SET_POINTER *PFN_VMB_PACKET_SET_POINTER;
FN_VMB_PACKET_SET_POINTER VmbPacketSetPointer;
typedef
PVOID
FASTCALL
FN_VMB_PACKET_GET_POINTER(
    _In_ VMBPACKET PacketObject
    );
typedef FN_VMB_PACKET_GET_POINTER *PFN_VMB_PACKET_GET_POINTER;
FN_VMB_PACKET_GET_POINTER VmbPacketGetPointer;
typedef
NTSTATUS
FN_VMB_PACKET_SEND(
    _In_ __drv_aliasesMem VMBPACKET PacketObject,
    _In_reads_bytes_(BufferLength) PVOID Buffer,
    _In_ UINT32 BufferLength,
    _In_opt_ PMDL ExternalDataMdl,
    _In_ UINT32 Flags
    );
typedef FN_VMB_PACKET_SEND *PFN_VMB_PACKET_SEND;
FN_VMB_PACKET_SEND VmbPacketSend;
typedef
NTSTATUS
FN_VMB_PACKET_SEND_WITH_EXTERNAL_MDL(
    _In_ __drv_aliasesMem VMBPACKET PacketObject,
    _In_reads_bytes_(BufferLength) PVOID Buffer,
    _In_ UINT32 BufferLength,
    _In_ PMDL ExternalDataMdl,
    _In_ UINT32 MdlOffset,
    _In_ UINT32 MdlLength,
    _In_ UINT32 Flags
    );
typedef FN_VMB_PACKET_SEND_WITH_EXTERNAL_MDL *PFN_VMB_PACKET_SEND_WITH_EXTERNAL_MDL;
FN_VMB_PACKET_SEND_WITH_EXTERNAL_MDL VmbPacketSendWithExternalMdl;
typedef
NTSTATUS
FN_VMB_PACKET_SEND_WITH_EXTERNAL_PFNS(
    _In_ __drv_aliasesMem VMBPACKET PacketObject,
    _In_reads_bytes_(BufferLength) PVOID Buffer,
    _In_ UINT32 BufferLength,
    _In_reads_(PfnLength) PPFN_NUMBER ExternalDataPfns,
    _In_ UINT32 PfnLength,
    _In_ UINT32 Flags
    );
typedef FN_VMB_PACKET_SEND_WITH_EXTERNAL_PFNS *PFN_VMB_PACKET_SEND_WITH_EXTERNAL_PFNS;
FN_VMB_PACKET_SEND_WITH_EXTERNAL_PFNS VmbPacketSendWithExternalPfns;
_When_(Timeout == NULL || Timeout->QuadPart != 0 ||
       (Flags & VMBUS_CHANNEL_FORMAT_FLAG_WAIT_FOR_COMPLETION) != 0,
       _IRQL_requires_(PASSIVE_LEVEL))
_When_(Timeout != NULL && Timeout->QuadPart == 0 &&
       (Flags & VMBUS_CHANNEL_FORMAT_FLAG_WAIT_FOR_COMPLETION) == 0,
        _IRQL_requires_max_(DISPATCH_LEVEL))
typedef
NTSTATUS
FN_VMB_CHANNEL_SEND_SYNCHRONOUS_REQUEST(
    _In_ VMBCHANNEL Channel,
    _In_reads_bytes_(BufferSize) PVOID Buffer,
    _In_ UINT32 BufferSize,
    _In_opt_ PMDL ExternalDataMdl,
    _In_ UINT32 Flags,
    _Out_writes_bytes_to_opt_(*CompletionBufferSize, *CompletionBufferSize)
                                    PVOID CompletionBuffer,
    _Inout_opt_ _Pre_satisfies_(*_Curr_ % 8 == 0)
                                    PUINT32 CompletionBufferSize,
    _In_opt_ PLARGE_INTEGER Timeout
    );
typedef FN_VMB_CHANNEL_SEND_SYNCHRONOUS_REQUEST *PFN_VMB_CHANNEL_SEND_SYNCHRONOUS_REQUEST;
FN_VMB_CHANNEL_SEND_SYNCHRONOUS_REQUEST VmbChannelSendSynchronousRequest;
typedef
NTSTATUS
FN_VMB_PACKET_RESTORE(
    _In_ __drv_aliasesMem VMBPACKET PacketObject,
    _In_reads_bytes_(BufferSize) PVOID Buffer,
    _In_ ULONG BufferSize
    );
typedef FN_VMB_PACKET_RESTORE *PFN_VMB_PACKET_RESTORE;
FN_VMB_PACKET_RESTORE VmbPacketRestore;
typedef
VMBCHANNEL
FASTCALL
FN_VMB_PACKET_GET_CHANNEL(
    _In_ VMBPACKET PacketObject
    );
typedef FN_VMB_PACKET_GET_CHANNEL *PFN_VMB_PACKET_GET_CHANNEL;
FN_VMB_PACKET_GET_CHANNEL VmbPacketGetChannel;
typedef
VOID
FN_VMB_CHANNEL_SET_INCOMING_PROCESSING_AT_PASSIVE(
    _In_ VMBCHANNEL Channel,
    _In_ BOOLEAN RequirePassive
    );
typedef FN_VMB_CHANNEL_SET_INCOMING_PROCESSING_AT_PASSIVE *PFN_VMB_CHANNEL_SET_INCOMING_PROCESSING_AT_PASSIVE;
FN_VMB_CHANNEL_SET_INCOMING_PROCESSING_AT_PASSIVE VmbChannelSetIncomingProcessingAtPassive;
typedef
VOID
FN_VMB_CHANNEL_SET_TRANSACTION_QUOTA(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 Quota
    );
typedef FN_VMB_CHANNEL_SET_TRANSACTION_QUOTA *PFN_VMB_CHANNEL_SET_TRANSACTION_QUOTA;
FN_VMB_CHANNEL_SET_TRANSACTION_QUOTA VmbChannelSetTransactionQuota;
typedef
VOID
FN_VMB_CHANNEL_GET_INTERFACE_INSTANCE(
    _In_ VMBCHANNEL Channel,
    _Out_ LPGUID InterfaceInstance
    );
typedef FN_VMB_CHANNEL_GET_INTERFACE_INSTANCE *PFN_VMB_CHANNEL_GET_INTERFACE_INSTANCE;
FN_VMB_CHANNEL_GET_INTERFACE_INSTANCE VmbChannelGetInterfaceInstance;
typedef
VOID
FN_VMB_CHANNEL_GET_MMIO_SPACE(
    _In_ VMBCHANNEL Channel,
    _Out_ UINT64* MmioAddress,
    _Out_ UINT64* MmioSize
    );
typedef FN_VMB_CHANNEL_GET_MMIO_SPACE *PFN_VMB_CHANNEL_GET_MMIO_SPACE;
FN_VMB_CHANNEL_GET_MMIO_SPACE VmbChannelGetMmioSpace;
typedef
NTSTATUS
FN_VMB_CHANNEL_ALLOCATE_BOUNCE_BUFFER(
    _In_ VMBCHANNEL Channel,
    _In_ UINT32 BufferSize
    );
typedef FN_VMB_CHANNEL_ALLOCATE_BOUNCE_BUFFER *PFN_VMB_CHANNEL_ALLOCATE_BOUNCE_BUFFER;
FN_VMB_CHANNEL_ALLOCATE_BOUNCE_BUFFER VmbChannelAllocateBounceBuffer;
typedef
UINT32
FN_VMB_CHANNEL_SIZEOF_PACKET(
    _In_ VMBCHANNEL Channel
    );
typedef FN_VMB_CHANNEL_SIZEOF_PACKET *PFN_VMB_CHANNEL_SIZEOF_PACKET;
FN_VMB_CHANNEL_SIZEOF_PACKET VmbChannelSizeofPacket;
typedef
NTSTATUS
FN_VMB_PACKET_INITIALIZE(
    _In_ VMBCHANNEL Channel,
    _Out_writes_bytes_(ByteCount) VMBPACKET VmbPacket,
    _In_ UINT32 ByteCount
    );
typedef FN_VMB_PACKET_INITIALIZE *PFN_VMB_PACKET_INITIALIZE;
FN_VMB_PACKET_INITIALIZE VmbPacketInitialize;
typedef
_Function_class_(EVT_VMB_PACKET_COMPLETION_ROUTINE)
_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
EVT_VMB_PACKET_COMPLETION_ROUTINE(
    _In_ VMBPACKET Packet,
    _In_ NTSTATUS Status,
    _In_reads_bytes_opt_(BufferLength) PVOID Buffer,
    _In_ UINT32 BufferLength
    );
typedef EVT_VMB_PACKET_COMPLETION_ROUTINE *PFN_VMB_PACKET_COMPLETION_ROUTINE;
typedef
VOID
FN_VMB_PACKET_SET_COMPLETION_ROUTINE(
    _In_ VMBPACKET PacketObject,
    _In_ PFN_VMB_PACKET_COMPLETION_ROUTINE CompletionRoutine
    );
typedef FN_VMB_PACKET_SET_COMPLETION_ROUTINE *PFN_VMB_PACKET_SET_COMPLETION_ROUTINE;
FN_VMB_PACKET_SET_COMPLETION_ROUTINE VmbPacketSetCompletionRoutine;
typedef
_Function_class_(EVT_VMB_CHANNEL_PNP_FAILURE)
_IRQL_requires_(PASSIVE_LEVEL)
VOID
EVT_VMB_CHANNEL_PNP_FAILURE(
    _In_ VMBCHANNEL Channel,
    _In_ NTSTATUS FailureStatus
    );
typedef EVT_VMB_CHANNEL_PNP_FAILURE *PFN_VMB_CHANNEL_PNP_FAILURE;
typedef
NTSTATUS
FN_VMB_CLIENT_CHANNEL_INIT_SET_TARGET_PNP(
    _In_ VMBCHANNEL Channel,
    _In_ LPCGUID InterfaceType,
    _In_opt_ LPCGUID InterfaceInstance,
    _In_opt_ PFN_VMB_CHANNEL_PNP_FAILURE PnpFailureCallback
    );
typedef FN_VMB_CLIENT_CHANNEL_INIT_SET_TARGET_PNP *PFN_VMB_CLIENT_CHANNEL_INIT_SET_TARGET_PNP;
FN_VMB_CLIENT_CHANNEL_INIT_SET_TARGET_PNP VmbClientChannelInitSetTargetPnp;
typedef struct _KMCL_SERVER_ONLY_METHODS {
    PFN_VMB_CHANNEL_MAP_GPADL VmbChannelMapGpadl;
    PFN_VMB_CHANNEL_RESTORE_FROM_BUFFER VmbChannelRestoreFromBuffer;
    PFN_VMB_CHANNEL_SAVE_BEGIN VmbChannelSaveBegin;
    PFN_VMB_CHANNEL_SAVE_CONTINUE VmbChannelSaveContinue;
    PFN_VMB_CHANNEL_SAVE_END VmbChannelSaveEnd;
    PFN_VMB_CHANNEL_UNMAP_GPADL VmbChannelUnmapGpadl;
    PFN_VMB_CONVERT_VMBUS_HANDLE_TO_KERNEL_HANDLE VmbConvertVmbusHandleToKernelHandle;
    PFN_VMB_PACKET_RESTORE VmbPacketRestore;
    PFN_VMB_SERVER_CHANNEL_INIT_SET_FLAGS VmbServerChannelInitSetFlags;
    PFN_VMB_SERVER_CHANNEL_INIT_SET_MMIO_MEGABYTES VmbServerChannelInitSetMmioMegabytes;
    PFN_VMB_SERVER_CHANNEL_INIT_SET_SAVE_RESTORE_PACKET_CALLBACKS VmbServerChannelInitSetSaveRestorePacketCallbacks;
    PFN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_INTERFACE_ID VmbServerChannelInitSetTargetInterfaceId;
    PFN_VMB_SERVER_CHANNEL_INIT_SET_TARGET_VTL VmbServerChannelInitSetTargetVtl;
    PFN_VMB_SERVER_CHANNEL_INIT_SET_VMBUS_HANDLE VmbServerChannelInitSetVmbusHandle;
} KMCL_SERVER_ONLY_METHODS;
DEFINE_GUID(KMCL_CLIENT_INTERFACE_TYPE, 0x4aecb860, 0xe161, 0x42bb, 0xa5, 0xca, 0x77, 0xf3, 0xa9, 0x64, 0x59, 0x05);
typedef struct _KMCL_CLIENT_INTERFACE_V1 : INTERFACE {
    PFN_VMB_CHANNEL_ALLOCATE VmbChannelAllocate;
    PFN_VMB_CHANNEL_CLEANUP VmbChannelCleanup;
    PFN_VMB_CHANNEL_CREATE_GPADL_FROM_BUFFER VmbChannelCreateGpadlFromBuffer;
    PFN_VMB_CHANNEL_CREATE_GPADL_FROM_MDL VmbChannelCreateGpadlFromMdl;
    PFN_VMB_CHANNEL_DELETE_GPADL VmbChannelDeleteGpadl;
    PFN_VMB_CHANNEL_DISABLE VmbChannelDisable;
    PFN_VMB_CHANNEL_ENABLE VmbChannelEnable;
    PFN_VMB_CHANNEL_GET_INTERFACE_INSTANCE VmbChannelGetInterfaceInstance;
    PFN_VMB_CHANNEL_GET_MMIO_SPACE VmbChannelGetMmioSpace;
    PFN_VMB_CHANNEL_GET_POINTER VmbChannelGetPointer;
    PFN_VMB_CHANNEL_INIT_SET_CLIENT_CONTEXT_SIZE VmbChannelInitSetClientContextSize;
    PFN_VMB_CHANNEL_INIT_SET_FLAGS VmbChannelInitSetFlags;
    PFN_VMB_CHANNEL_INIT_SET_FRIENDLY_NAME VmbChannelInitSetFriendlyName;
    PFN_VMB_CHANNEL_INIT_SET_MAXIMUM_EXTERNAL_DATA VmbChannelInitSetMaximumExternalData;
    PFN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_SIZE VmbChannelInitSetMaximumPacketSize;
    PFN_VMB_CHANNEL_INIT_SET_PROCESS_PACKET_CALLBACKS VmbChannelInitSetProcessPacketCallbacks;
    PFN_VMB_CHANNEL_INIT_SET_STATE_CHANGE_CALLBACKS VmbChannelInitSetStateChangeCallbacks;
    PFN_VMB_CHANNEL_PACKET_COMPLETE VmbChannelPacketComplete;
    PFN_VMB_CHANNEL_PACKET_DEFER_TO_PASSIVE VmbChannelPacketDeferToPassive;
    PFN_VMB_CHANNEL_PACKET_FAIL VmbChannelPacketFail;
    PFN_VMB_CHANNEL_PACKET_GET_EXTERNAL_DATA VmbChannelPacketGetExternalData;
    PFN_VMB_CHANNEL_PAUSE VmbChannelPause;
    PFN_VMB_CHANNEL_SEND_SYNCHRONOUS_REQUEST VmbChannelSendSynchronousRequest;
    PFN_VMB_CHANNEL_SET_INCOMING_PROCESSING_AT_PASSIVE VmbChannelSetIncomingProcessingAtPassive;
    PFN_VMB_CHANNEL_SET_INTERRUPT_LATENCY VmbChannelSetInterruptLatency;
    PFN_VMB_CHANNEL_SET_POINTER VmbChannelSetPointer;
    PFN_VMB_CHANNEL_SET_TRANSACTION_QUOTA VmbChannelSetTransactionQuota;
    PFN_VMB_CHANNEL_SIZEOF_PACKET VmbChannelSizeofPacket;
    PFN_VMB_CHANNEL_START VmbChannelStart;
    PFN_VMB_CLIENT_CHANNEL_INIT_SET_RING_BUFFER_PAGE_COUNT VmbClientChannelInitSetRingBufferPageCount;
    PFN_VMB_CLIENT_CHANNEL_INIT_SET_TARGET_PNP VmbClientChannelInitSetTargetPnp;
    PFN_VMB_PACKET_ALLOCATE VmbPacketAllocate;
    PFN_VMB_PACKET_FREE VmbPacketFree;
    PFN_VMB_PACKET_GET_CHANNEL VmbPacketGetChannel;
    PFN_VMB_PACKET_GET_POINTER VmbPacketGetPointer;
    PFN_VMB_PACKET_INITIALIZE VmbPacketInitialize;
    PFN_VMB_PACKET_SEND VmbPacketSend;
    PFN_VMB_PACKET_SEND_WITH_EXTERNAL_MDL VmbPacketSendWithExternalMdl;
    PFN_VMB_PACKET_SEND_WITH_EXTERNAL_PFNS VmbPacketSendWithExternalPfns;
    PFN_VMB_PACKET_SET_COMPLETION_ROUTINE VmbPacketSetCompletionRoutine;
    PFN_VMB_PACKET_SET_POINTER VmbPacketSetPointer;
} KMCL_CLIENT_INTERFACE_V1, *PKMCL_CLIENT_INTERFACE_V1;
C_ASSERT(sizeof(KMCL_CLIENT_INTERFACE_V1) <= MAXUSHORT);
typedef struct _KMCL_CLIENT_INTERFACE_V2 : KMCL_CLIENT_INTERFACE_V1 {
    PFN_VMB_CHANNEL_PACKET_GET_CLIENT_CONTEXT VmbChannelPacketGetClientContext;
    PFN_VMB_CHANNEL_GET_TARGET_DEVICE_OBJECT VmbChannelGetTargetDeviceObject;
    PFN_VMB_CHANNEL_GET_PARENT_DEVICE_OBJECT VmbChannelGetParentDeviceObject;
} KMCL_CLIENT_INTERFACE_V2, *PKMCL_CLIENT_INTERFACE_V2;
C_ASSERT(sizeof(KMCL_CLIENT_INTERFACE_V2) <= MAXUSHORT);
typedef struct _KMCL_CLIENT_INTERFACE_V3 : KMCL_CLIENT_INTERFACE_V2 {
    PFN_VMB_CHANNEL_INIT_SET_BOUNCE_BUFFER_SIZES VmbChannelInitSetBounceBufferSizes;
    PFN_VMB_CHANNEL_ALLOCATE_BOUNCE_BUFFER VmbChannelAllocateBounceBuffer;
} KMCL_CLIENT_INTERFACE_V3, *PKMCL_CLIENT_INTERFACE_V3;
C_ASSERT(sizeof(KMCL_CLIENT_INTERFACE_V3) <= MAXUSHORT);
typedef struct _KMCL_CLIENT_INTERFACE_V4 : KMCL_CLIENT_INTERFACE_V3 {
    PFN_VMB_CHANNEL_INIT_SET_MAXIMUM_PACKET_COUNT VmbChannelInitSetMaximumPacketCount;
    PFN_VMB_CHANNEL_CREATE_GPADL_FROM_PFN_LIST VmbChannelCreateGpadlFromPfnList;
} KMCL_CLIENT_INTERFACE_V4, *PKMCL_CLIENT_INTERFACE_V4;
C_ASSERT(sizeof(KMCL_CLIENT_INTERFACE_V4) <= MAXUSHORT);
DEFINE_GUID(KMCL_SERVER_INTERFACE_TYPE, 0x83b21474, 0xc5b9, 0x4f65, 0xb5, 0xe7, 0x72, 0x0c, 0x69, 0x2b, 0xd3, 0x71);
typedef struct _KMCL_SERVER_INTERFACE_V1 : KMCL_CLIENT_INTERFACE_V1, KMCL_SERVER_ONLY_METHODS {
} KMCL_SERVER_INTERFACE_V1, *PKMCL_SERVER_INTERFACE_V1;
C_ASSERT(sizeof(KMCL_SERVER_INTERFACE_V1) <= MAXUSHORT);
#pragma warning(pop)
