       
#include <winapifamily.h>
#pragma region Desktop Family
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
typedef struct tagACT_AUTHZ_STATE
{
    UCHAR ACT;
    BOOLEAN fAuthorized;
} ACT_AUTHZ_STATE, *PACT_AUTHZ_STATE;
typedef struct tagACT_QUEUE_STATE
{
    BOOLEAN fFrozen;
} ACT_QUEUE_STATE, *PACT_QUEUE_STATE;
typedef struct tagSILO_COMMAND
{
    UCHAR SiloIndex;
    UCHAR Command;
    ULONG cbCommandBuffer;
    UCHAR rgbCommandBuffer[ANYSIZE_ARRAY];
} SILO_COMMAND, *PSILO_COMMAND;
typedef enum _PDO_TYPE
{
    PDO_TYPE_UNDEFINED = 0,
    PDO_TYPE_DISK,
    PDO_TYPE_CONTROL,
    PDO_TYPE_SILO,
    PDO_TYPE_THIS = 256
} PDO_TYPE;
typedef enum _PDO_STATE
{
    PDO_STATE_UNDEFINED = 0,
    PDO_STATE_STARTED,
    PDO_STATE_NOT_STARTED
} PDO_STATE;
typedef enum _PDO_CAPS
{
    PDO_CAPABILITY_UNDEFINED = 0,
    PDO_CAPABILITY_INC512_SET = 1,
    PDO_CAPABILITY_INC512_CLEAR = 2
} PDO_CAPS;
typedef struct _ENUM_PDO_ENTRY
{
    UCHAR type;
    UCHAR state;
    UCHAR capabilities;
    ULONG ulSTID;
    UCHAR bSpecificationMajor;
    UCHAR bSpecificationMinor;
    UCHAR bImplementationMajor;
    UCHAR bImplementationMinor;
    WCHAR wszDeviceInstancePath[(2 * MAX_PATH) + 1];
} ENUM_PDO_ENTRY, *PENUM_PDO_ENTRY;
typedef struct _ENUM_PDO_RESULTS
{
    ULONG cEntries;
    ENUM_PDO_ENTRY rgEntries[ANYSIZE_ARRAY];
} ENUM_PDO_RESULTS, *PENUM_PDO_RESULTS;
typedef struct _EHSTOR_DEVICE_PROPERTIES
{
    ULONG StructSize;
    ULONG BytesPerSector;
} EHSTOR_DEVICE_PROPERTIES, *PEHSTOR_DEVICE_PROPERTIES;
typedef struct _SILO_DRIVER_CAPABILITIES
{
    ULONG StructSize;
    ULONG Capabilities;
    ULONG MaxLbaFilterCount;
    ULONG RedirectedIoctlListCount;
    ULONG RedirectedIoctlListOffset;
} SILO_DRIVER_CAPABILITIES, *PSILO_DRIVER_CAPABILITIES;
typedef enum _SILO_DRIVER_CAPS
{
    CAP_ON_DEMAND_AUTHENTICATION = (1 << 0),
    CAP_BANDING_SUPPORT = (1 << 1)
} SILO_DRIVER_CAPS;
typedef struct _LBA_FILTER_TABLE_ENTRY
{
    ULARGE_INTEGER StartLba;
    ULARGE_INTEGER LbaCount;
    BOOLEAN ReadLock;
    BOOLEAN WriteLock;
} LBA_FILTER_TABLE_ENTRY, *PLBA_FILTER_TABLE_ENTRY;
typedef struct _LBA_FILTER_TABLE
{
    ULONG StructSize;
    BOOLEAN GlobalReadLock;
    LONG Reserved1;
    BOOLEAN GlobalWriteLock;
    LONG Reserved2;
    ULONG LbaFilterCount;
    ULONG LbaFilterSize;
    ULONG LbaFiltersOffset;
} LBA_FILTER_TABLE, *PLBA_FILTER_TABLE;
typedef struct _AUTHZ_STATE
{
    ULONG AuthzState;
} AUTHZ_STATE, *PAUTHZ_STATE;
        CTL_CODE(IOCTL_STORAGE_BASE, 0x503, METHOD_BUFFERED, FILE_ANY_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x504, METHOD_BUFFERED, FILE_ANY_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x505, METHOD_BUFFERED, FILE_ANY_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x506, METHOD_BUFFERED, FILE_ANY_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x507, METHOD_BUFFERED, FILE_ANY_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x508, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x509, METHOD_BUFFERED, FILE_ANY_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x510, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x511, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
        CTL_CODE(IOCTL_STORAGE_BASE, 0x512, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
DEFINE_GUID(GUID_EHSTOR_SILO_INTERFACE,
            0x7c2bcf57, 0x2bea, 0x46da, 0xad, 0x26, 0x78, 0xfd, 0xc8, 0x3c, 0xee, 0x46);
DEFINE_GUID(GUID_EHSTOR_CONTROL_INTERFACE,
            0x4f40006f, 0xb933, 0x4550, 0xb5, 0x32, 0x2b, 0x58, 0xce, 0xe6, 0x14, 0xd3);
DEFINE_GUID(GUID_USBSTOR_EHSTOR_SILO_INTERFACE,
            0x7c2bcf57, 0x2bea, 0x46da, 0xad, 0x26, 0x78, 0xfd, 0xc8, 0x3c, 0xee, 0x46);
DEFINE_GUID(GUID_USBSTOR_EHSTOR_CONTROL_INTERFACE,
            0x4f40006f, 0xb933, 0x4550, 0xb5, 0x32, 0x2b, 0x58, 0xce, 0xe6, 0x14, 0xd3);
#endif
#pragma endregion
